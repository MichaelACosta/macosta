{"version":3,"file":"bd1a647f-87e81b8e5bc9c3b11249.js","mappings":"uGAEAA,OAAOC,eAAeC,EAAS,aAA/B,CAA+CC,OAAO,IAEtD,IAAIC,EAAQ,EAAQ,MAChBC,EAAY,EAAQ,MACpBC,EAAM,EAAQ,MAElB,SAASC,EAAuBC,GAAK,OAAOA,GAAkB,iBAANA,GAAkB,YAAaA,EAAIA,EAAI,CAAE,QAAWA,EAAK,CAEjH,SAASC,EAAkBD,GACvB,GAAIA,GAAKA,EAAEE,WAAY,OAAOF,EAC9B,IAAIG,EAAIX,OAAOY,OAAO,MAatB,OAZIJ,GACAR,OAAOa,KAAKL,GAAGM,SAAQ,SAAUC,GAC7B,GAAU,YAANA,EAAiB,CACjB,IAAIC,EAAIhB,OAAOiB,yBAAyBT,EAAGO,GAC3Cf,OAAOC,eAAeU,EAAGI,EAAGC,EAAEE,IAAMF,EAAI,CACpCG,YAAY,EACZD,IAAK,WAAc,OAAOV,EAAEO,EAAI,GAExC,CACJ,IAEJJ,EAAW,QAAIH,EACRR,OAAOoB,OAAOT,EACzB,CAEA,IAAIU,EAA8Bd,EAAsBH,GACpDkB,EAAgCb,EAAkBL,GAKtD,MAAMmB,EAAsBnB,EAAMoB,cAAc,CAC5CC,mBAAqBC,GAAMA,EAC3BC,UAAU,EACVC,cAAe,UAGbC,EAAgBzB,EAAMoB,cAAc,CAAC,GAC3C,SAASM,IACL,OAAO1B,EAAM2B,WAAWF,GAAeG,aAC3C,CAKA,MAAMC,EAAkB7B,EAAMoB,cAAc,MAEtCU,EAAgC,oBAAbC,SAEnBC,EAA4BF,EAAY9B,EAAMiC,gBAAkBjC,EAAMkC,UAEtEC,EAAcnC,EAAMoB,cAAc,CAAEgB,QAAQ,IAqClD,SAASC,EAAYC,GACjB,MAAuB,iBAARA,GACX1C,OAAO2C,UAAUC,eAAeC,KAAKH,EAAK,UAClD,CAkCA,SAASI,EAAeC,GACpB,MAAoB,iBAANA,GAAkBC,MAAMC,QAAQF,EAClD,CAEA,SAASG,EAAoBH,GACzB,MAAoB,iBAANA,GAAqC,mBAAZA,EAAEI,KAC7C,CAEA,MAAMC,EAAiB,CACnB,UACA,UACA,OACA,aACA,YACA,WACA,aACA,eAEJ,SAASC,EAAsBC,GAC3B,OAAQJ,EAAoBI,EAAMC,UAC9BH,EAAeI,MAAMC,GAASX,EAAeQ,EAAMG,KAC3D,CACA,SAASC,EAAcJ,GACnB,OAAOK,QAAQN,EAAsBC,IAAUA,EAAMM,SACzD,CAeA,SAASC,EAAuBP,GAC5B,MAAM,QAAEQ,EAAO,QAAEP,GAdrB,SAAgCD,EAAOS,GACnC,GAAIV,EAAsBC,GAAQ,CAC9B,MAAM,QAAEQ,EAAO,QAAEP,GAAYD,EAC7B,MAAO,CACHQ,SAAqB,IAAZA,GAAqBhB,EAAegB,GACvCA,OACAE,EACNT,QAAST,EAAeS,GAAWA,OAAUS,EAErD,CACA,OAAyB,IAAlBV,EAAMW,QAAoBF,EAAU,CAAC,CAChD,CAGiCG,CAAuBZ,EAAOlD,EAAM2B,WAAWF,IAC5E,OAAOzB,EAAM+D,SAAQ,KAAM,CAAGL,UAASP,aAAY,CAACa,EAA0BN,GAAUM,EAA0Bb,IACtH,CACA,SAASa,EAA0BC,GAC/B,OAAOrB,MAAMC,QAAQoB,GAAQA,EAAKC,KAAK,KAAOD,CAClD,CAEA,MAAME,EAAoBC,IAAc,CACpCC,UAAYnB,GAAUkB,EAAUhB,MAAMC,KAAWH,EAAMG,OAErDiB,EAAqB,CACvBC,cAAeJ,EAAiB,CAAC,SAAU,WAAY,SACvDK,UAAWL,EAAiB,CACxB,UACA,OACA,WACA,aACA,WACA,aACA,YACA,gBAEJM,KAAMN,EAAiB,CAAC,SACxBO,KAAMP,EAAiB,CAAC,OAAQ,iBAChCQ,MAAOR,EAAiB,CAAC,eACzBS,MAAOT,EAAiB,CAAC,aAAc,eAAgB,eACvDU,IAAKV,EAAiB,CAAC,WAAY,QAAS,aAAc,gBAC1DW,IAAKX,EAAiB,CAClB,QACA,aACA,oBACA,aAEJY,OAAQZ,EAAiB,CACrB,cACA,kBACA,qBAIR,SAASa,EAAaC,GAClB,IAAK,MAAMC,KAAOD,EACF,8BAARC,EACAZ,EAAmBa,0BAA4BF,EAASC,GAGxDZ,EAAmBY,GAAKE,UAAYH,EAASC,EAGzD,CASA,SAASG,EAAYC,GACjB,MAAMhD,EAAMtC,EAAMuF,OAAO,MAIzB,OAHoB,OAAhBjD,EAAIkD,UACJlD,EAAIkD,QAAUF,KAEXhD,EAAIkD,OACf,CAOA,MAAMC,EAAwB,CAK1BC,wBAAwB,EAKxBC,gBAAgB,GAGpB,IAAIC,EAAO,EASX,MAAMC,EAAqB7F,EAAMoB,cAAc,CAAC,GAEhD,MAAM0E,UAA6B7E,EAAwB,QAAEmE,UAIzDW,0BACI,MAAM,cAAEnE,EAAa,MAAEsB,GAAU8C,KAAK9C,MAGtC,OAFItB,GACAA,EAAcqE,SAAS/C,GACpB,IACX,CACAgD,qBAAuB,CACvBC,SACI,OAAOH,KAAK9C,MAAMkD,QACtB,EAMJ,MAAMC,EAA2BrG,EAAMoB,cAAc,CAAC,GAEhDkF,EAAwBC,OAAOC,IAAI,yBAWzC,SAASC,GAAsB,kBAAEC,EAAiB,oBAAEC,EAAmB,0BAAExB,EAAyB,UAAEyB,EAAS,eAAEC,EAAc,UAAEzB,IAC3HsB,GAAqB1B,EAAa0B,GAuDlC,MAAMI,EAAsB9G,EAAM+G,YAtDlC,SAAyB7D,EAAO8D,GAC5B,MAAMC,EAAiB,IAChBjH,EAAM2B,WAAWR,MACjB+B,EACHgE,SAAUC,EAAYjE,KAEpB,SAAE3B,GAAa0F,EACrB,IAAIhC,EAAW,KACf,MAAMtB,EAAUF,EAAuBP,GAYjCkE,EAAe7F,OAAWqC,EA/D7ByB,GAAY,KACf,GAAII,EAAsBE,eACtB,OAAOC,GACX,IAgEMyB,EAAcR,EAAe3D,EAAO3B,GAC1C,IAAKA,GAAYO,EAAW,CAOxB6B,EAAQ/B,cAjRpB,SAA0BwD,EAAWiC,EAAanE,EAAOyD,GACrD,MAAMW,EAAS5F,IACT6F,EAAcvH,EAAM2B,WAAWQ,GAC/BqF,EAAkBxH,EAAM2B,WAAWE,GACnC4F,EAAsBzH,EAAM2B,WAAWR,GAAqBK,cAC5DkG,EAAmB1H,EAAMuF,SAI/BoB,EAAsBA,GAAuBY,EAAYI,UACpDD,EAAiBlC,SAAWmB,IAC7Be,EAAiBlC,QAAUmB,EAAoBvB,EAAW,CACtDiC,cACAC,SACApE,QACA0E,WAAYJ,EAAkBA,EAAgBK,QAAKjE,EACnDkE,wBAAuBN,IACW,IAA5BA,EAAgB9D,QAEtB+D,yBAGR,MAAM7F,EAAgB8F,EAAiBlC,QAUvC,OATAxD,GAA0B,KACtBJ,GAAiBA,EAAcuE,QAAQ,IAE3CnG,EAAMkC,WAAU,KACRN,GAAiBA,EAAcmG,gBAC/BnG,EAAcmG,eAAeC,gBACjC,IAEJhG,GAA0B,IAAM,IAAMJ,GAAiBA,EAAcqG,OAAO,YAAY,IACjFrG,CACX,CAgPoCsG,CAAiB9C,EAAWiC,EAAaJ,EAAgBN,GAKjF,MAAMwB,EAAiBnI,EAAM2B,WAAWQ,GAAaC,OAC/CgG,EAA2BpI,EAAM2B,WAAW0E,GAC9C1C,EAAQ/B,gBACRqD,EAAWtB,EAAQ/B,cAAcoD,aAEjCiC,EAAgBkB,EAAgBzB,EAAmBU,EAAcjC,GAC7Db,EAAmBa,0BAA2BiD,GAE1D,CAKA,OAAQlH,EAAiBmH,cAAcvC,EAAsB,CAAElE,cAAe+B,EAAQ/B,cAAesB,MAAO+D,GACxGhC,EACA/D,EAAiBmH,cAAc5G,EAAc6G,SAAU,CAAEvI,MAAO4D,GAAWiD,EAAUxB,EAAWlC,EAAOkE,EAzPnH,SAAsBC,EAAazF,EAAeoF,GAC9C,OAAOhH,EAAMuI,aAAaC,IACtBA,GAAYnB,EAAYoB,OAASpB,EAAYoB,MAAMD,GAC/C5G,IACA4G,EACM5G,EAAc6G,MAAMD,GACpB5G,EAAc8G,WAEpB1B,IAC2B,mBAAhBA,EACPA,EAAYwB,GAEPnG,EAAY2E,KACjBA,EAAYxB,QAAUgD,GAE9B,GAOJ,CAAC5G,GACL,CAkOiI+G,CAAatB,EAAa1D,EAAQ/B,cAAeoF,GAAcK,EAAa9F,EAAUoC,EAAQ/B,gBAC3N,IAGA,OADAkF,EAAoBR,GAAyBlB,EACtC0B,CACX,CACA,SAASK,GAAY,SAAED,IACnB,MAAM0B,EAAgB5I,EAAM2B,WAAWkE,GAAoBgC,GAC3D,OAAOe,QAA8BhF,IAAbsD,EAClB0B,EAAgB,IAAM1B,EACtBA,CACV,CAgBA,SAAS2B,EAAkBC,GACvB,SAASC,EAAO3D,EAAW4D,EAA8B,CAAC,GACtD,OAAOvC,EAAsBqC,EAAa1D,EAAW4D,GACzD,CACA,GAAqB,oBAAVC,MACP,OAAOF,EAMX,MAAMG,EAAiB,IAAIC,IAC3B,OAAO,IAAIF,MAAMF,EAAQ,CAMrBjI,IAAK,CAACsI,EAASlE,KAINgE,EAAeG,IAAInE,IACpBgE,EAAeI,IAAIpE,EAAK6D,EAAO7D,IAE5BgE,EAAepI,IAAIoE,KAGtC,CAMA,MAAMqE,EAAuB,CACzB,UACA,SACA,OACA,OACA,UACA,IACA,QACA,OACA,SACA,SACA,OACA,WACA,OACA,UACA,UACA,WACA,OACA,OACA,SACA,SACA,MACA,OACA,QACA,MACA,QAGJ,SAASC,EAAepE,GACpB,MAKqB,iBAAdA,IAIHA,EAAUqE,SAAS,SAOvBF,EAAqBG,QAAQtE,IAAc,GAIvC,QAAQuE,KAAKvE,GAIrB,CAEA,MAAMwE,EAAkB,CAAC,EACzB,SAASC,EAAkBC,GACvBlK,OAAOmK,OAAOH,EAAiBE,EACnC,CAKA,MAAME,EAAqB,CACvB,uBACA,IACA,IACA,IACA,aACA,aACA,aACA,QACA,SACA,SACA,SACA,UACA,UACA,UACA,OACA,QACA,SAKEC,EAAiB,IAAIC,IAAIF,GAE/B,SAASG,EAAoBjF,GAAK,OAAEkF,EAAM,SAAElD,IACxC,OAAQ+C,EAAeZ,IAAInE,IACvBA,EAAImF,WAAW,YACbD,QAAuBxG,IAAbsD,OACL0C,EAAgB1E,IAAgB,YAARA,EACvC,CAEA,MAAMoF,EAAiBvK,MAAaA,aAAqC,EAASA,EAAMwK,aAElFC,EAAiB,CACnBC,EAAG,aACHC,EAAG,aACHC,EAAG,aACHC,qBAAsB,eAKpBC,EAAqB,CAACC,EAAGC,IAAMf,EAAmBN,QAAQoB,GAAKd,EAAmBN,QAAQqB,GAOhG,SAASC,GAAe,UAAEC,EAAS,cAAEC,IAAkB,2BAAEC,GAA6B,EAAI,mBAAEC,GAAqB,GAASC,EAAoBC,GAE1I,IAAIC,EAAkB,GAEtBL,EAAcM,KAAKX,GAEnB,IAAK,MAAM3F,KAAOgG,EACdK,GAAmB,GAAGf,EAAetF,IAAQA,KAAO+F,EAAU/F,OAclE,OAZIiG,IAA+BF,EAAUN,IACzCY,GAAmB,iBAEvBA,EAAkBA,EAAgBE,OAG9BH,EACAC,EAAkBD,EAAkBL,EAAWI,EAAqB,GAAKE,GAEpEH,GAAsBC,IAC3BE,EAAkB,QAEfA,CACX,CAKA,SAASG,EAAgBxG,GACrB,OAAOA,EAAImF,WAAW,KAC1B,CAKA,MAAMsB,EAAiB,CAAC5L,EAAO6L,IACpBA,GAAyB,iBAAV7L,EAChB6L,EAAKX,UAAUlL,GACfA,EAGJ8L,EAAQ,CAACC,EAAKC,EAAKpJ,IAAMqJ,KAAKF,IAAIE,KAAKD,IAAIpJ,EAAGmJ,GAAMC,GAEpDE,EAAS,CACXtC,KAAOhH,GAAmB,iBAANA,EACpBuJ,MAAOC,WACPlB,UAAYtI,GAAMA,GAEhByJ,EAAQ,IACPH,EACHhB,UAAYtI,GAAMkJ,EAAM,EAAG,EAAGlJ,IAE5B0J,GAAQ,IACPJ,EACHK,QAAS,GASPC,GAAY5J,GAAMqJ,KAAKQ,MAAU,IAAJ7J,GAAc,IAC3C8J,GAAa,uBACbC,GAAa,+HACbC,GAAmB,mHACzB,SAASC,GAASjK,GACd,MAAoB,iBAANA,CAClB,CAEA,MAAMkK,GAAkBC,IAAS,CAC7BnD,KAAOhH,GAAMiK,GAASjK,IAAMA,EAAEoK,SAASD,IAAiC,IAAxBnK,EAAEqK,MAAM,KAAKC,OAC7Df,MAAOC,WACPlB,UAAYtI,GAAM,GAAGA,IAAImK,MAEvBI,GAAUL,GAAe,OACzBM,GAAUN,GAAe,KACzBO,GAAKP,GAAe,MACpBQ,GAAKR,GAAe,MACpBS,GAAKT,GAAe,MACpBU,GAAqB,IACpBJ,GACHjB,MAAQvJ,GAAMwK,GAAQjB,MAAMvJ,GAAK,IACjCsI,UAAYtI,GAAMwK,GAAQlC,UAAc,IAAJtI,IAGlC6K,GAAM,IACLvB,EACHhB,UAAWe,KAAKQ,OAGdiB,GAAmB,CAErBC,YAAaN,GACbO,eAAgBP,GAChBQ,iBAAkBR,GAClBS,kBAAmBT,GACnBU,gBAAiBV,GACjBW,aAAcX,GACdY,OAAQZ,GACRa,oBAAqBb,GACrBc,qBAAsBd,GACtBe,wBAAyBf,GACzBgB,uBAAwBhB,GAExBiB,MAAOjB,GACPkB,SAAUlB,GACVmB,OAAQnB,GACRoB,UAAWpB,GACXqB,KAAMrB,GACNsB,IAAKtB,GACLuB,MAAOvB,GACPwB,OAAQxB,GACRyB,KAAMzB,GAEN0B,QAAS1B,GACT2B,WAAY3B,GACZ4B,aAAc5B,GACd6B,cAAe7B,GACf8B,YAAa9B,GACb+B,OAAQ/B,GACRgC,UAAWhC,GACXiC,YAAajC,GACbkC,aAAclC,GACdmC,WAAYnC,GAEZoC,OAAQtC,GACRuC,QAASvC,GACTwC,QAASxC,GACTyC,QAASzC,GACTb,SACAuD,OAAQvD,GACRwD,OAAQxD,GACRyD,OAAQzD,GACR0D,KAAM7C,GACN8C,MAAO9C,GACP+C,MAAO/C,GACPgD,SAAU9C,GACV+C,WAAY/C,GACZgD,WAAYhD,GACZiD,WAAYjD,GACZ3C,EAAG2C,GACH1C,EAAG0C,GACHzC,EAAGyC,GACHkD,YAAalD,GACbxC,qBAAsBwC,GACtBmD,QAASnE,EACToE,QAASjD,GACTkD,QAASlD,GACTmD,QAAStD,GAETuD,OAAQnD,GAERoD,YAAaxE,EACbyE,cAAezE,EACf0E,WAAYtD,IAGhB,SAASuD,GAAgBC,EAAOC,EAAcC,EAAS5F,GACnD,MAAM,MAAE6F,EAAK,KAAEC,EAAI,UAAEnG,EAAS,cAAEC,EAAa,gBAAEmG,GAAoBL,EACnE9F,EAAc+B,OAAS,EAEvB,IAAIqE,GAAe,EACfC,GAAqB,EAErBC,GAAkB,EAOtB,IAAK,MAAMtM,KAAO+L,EAAc,CAC5B,MAAMlR,EAAQkR,EAAa/L,GAI3B,GAAIwG,EAAgBxG,GAAM,CACtBkM,EAAKlM,GAAOnF,EACZ,QACJ,CAEA,MAAM0R,EAAYhE,GAAiBvI,GAC7BwM,EAAc/F,EAAe5L,EAAO0R,GAC1C,GAAIxH,EAAeZ,IAAInE,GAAM,CAMzB,GAJAoM,GAAe,EACfrG,EAAU/F,GAAOwM,EACjBxG,EAAcyG,KAAKzM,IAEdsM,EACD,SAEAzR,KAAW0R,EAAUnF,SAAW,KAChCkF,GAAkB,EAC1B,MACStM,EAAImF,WAAW,WAEpBkH,GAAqB,EACrBF,EAAgBnM,GAAOwM,GAGvBP,EAAMjM,GAAOwM,CAErB,CAiBA,GAhBKT,EAAahG,YACVqG,GAAgBhG,EAChB6F,EAAMlG,UAAYD,EAAegG,EAAOE,EAASM,EAAiBlG,GAE7D6F,EAAMlG,YAKXkG,EAAMlG,UAAY,SAOtBsG,EAAoB,CACpB,MAAM,QAAEf,EAAU,MAAK,QAAEC,EAAU,MAAK,QAAEC,EAAU,GAAOW,EAC3DF,EAAME,gBAAkB,GAAGb,KAAWC,KAAWC,GACrD,CACJ,CAEA,MAAMkB,GAAwB,KAAM,CAChCT,MAAO,CAAC,EACRlG,UAAW,CAAC,EACZC,cAAe,GACfmG,gBAAiB,CAAC,EAClBD,KAAM,CAAC,IAGX,SAASS,GAAkBC,EAAQC,EAAQ7O,GACvC,IAAK,MAAMgC,KAAO6M,EACTzH,EAAcyH,EAAO7M,KAAUiF,EAAoBjF,EAAKhC,KACzD4O,EAAO5M,GAAO6M,EAAO7M,GAGjC,CAQA,SAAS8M,GAAS9O,EAAOmE,EAAa9F,GAClC,MACM4P,EAAQ,CAAC,EAMf,OAFAU,GAAkBV,EALAjO,EAAMiO,OAAS,CAAC,EAKEjO,GACpCtD,OAAOmK,OAAOoH,EAdlB,UAAgC,kBAAE7F,GAAqBjE,EAAa9F,GAChE,OAAOvB,EAAM+D,SAAQ,KACjB,MAAMiN,EAAQY,KAEd,OADAb,GAAgBC,EAAO3J,EAAa,CAAE8D,4BAA6B5J,GAAY+J,GACxE1L,OAAOmK,OAAO,CAAC,EAAGiH,EAAMI,KAAMJ,EAAMG,MAAM,GAClD,CAAC9J,GACR,CAQyB4K,CAAuB/O,EAAOmE,EAAa9F,IACzD2B,EAAMgP,gBAAkBhP,EAAMgP,gBAAgBf,GAASA,CAClE,CACA,SAASgB,GAAajP,EAAOmE,EAAa9F,GAEtC,MAAM6Q,EAAY,CAAC,EACbjB,EAAQa,GAAS9O,EAAOmE,EAAa9F,GAgB3C,OAfI2B,EAAMwB,OAA+B,IAAvBxB,EAAMmP,eAEpBD,EAAUE,WAAY,EAEtBnB,EAAMoB,WACFpB,EAAMqB,iBACFrB,EAAMsB,mBACF,OAEZtB,EAAMuB,aACa,IAAfxP,EAAMwB,KACA,OACA,QAAsB,MAAfxB,EAAMwB,KAAe,IAAM,MAEhD0N,EAAUjB,MAAQA,EACXiB,CACX,CAEA,MAwBMO,GAAmB,IAAIzI,IAAI,CAC7B,UACA,QACA,SACA,WACA,aACA,oBACA,kBACA,SACA,UACA,SACA,WACA,mBACA,yBACA,4BACA,kBACA,wBACA,mBACA,sBACA,WACA,cACA,SACA,YACA,2BACA,kBACA,sBACA,OACA,eACA,eACA,kBACA,oBACA,mBACA,SACA,SACA,cACA,eACA,kBACA,iBACA,eACA,aACA,eAnDA,cACA,kBACA,kBACA,WANc,WAAY,QAAS,aAAc,cATjD,UACA,OACA,WACA,aACA,WACA,aACA,YACA,cAGc,QAAS,aAAc,oBAAqB,aAmE9D,SAAS0I,GAAkB1N,GACvB,OAAOyN,GAAiBtJ,IAAInE,EAChC,CAEA,IAAI2N,GAAiB3N,IAAS0N,GAAkB1N,GAChD,SAAS4N,GAAwBC,GACxBA,IAGLF,GAAiB3N,GAAQA,EAAImF,WAAW,OAASuI,GAAkB1N,GAAO6N,EAAY7N,GAC1F,CAcA,IAMI4N,GAAwB,UAI5B,CAFA,MAAOE,IAEP,CACA,SAASC,GAAY/P,EAAOgQ,EAAOC,GAC/B,MAAMC,EAAgB,CAAC,EACvB,IAAK,MAAMlO,KAAOhC,GACV2P,GAAc3N,KACU,IAAvBiO,GAA+BP,GAAkB1N,KAChDgO,IAAUN,GAAkB1N,IAE7BhC,EAAiB,WAAKgC,EAAImF,WAAW,aACtC+I,EAAclO,GAAOhC,EAAMgC,IAGnC,OAAOkO,CACX,CAEA,SAASC,GAAaC,EAAQC,EAAQ9E,GAClC,MAAyB,iBAAX6E,EACRA,EACAlG,GAAGnC,UAAUsI,EAAS9E,EAAO6E,EACvC,CAWA,MAAME,GAAW,CACbD,OAAQ,oBACRE,MAAO,oBAELC,GAAY,CACdH,OAAQ,mBACRE,MAAO,mBA0BX,SAASE,GAAc3C,GAAO,MAAE4C,EAAK,MAAEC,EAAK,QAAErD,EAAO,QAAEC,EAAO,WAAEqD,EAAU,YAAEC,EAAc,EAAC,WAAEC,EAAa,KAEvGC,GAAU/C,EAASgD,EAAU5I,GAM5B,GALAyF,GAAgBC,EAAOiD,EAAQ/C,EAAS5F,GAKpC4I,EAIA,YAHIlD,EAAMG,MAAMgD,UACZnD,EAAMoD,MAAMD,QAAUnD,EAAMG,MAAMgD,UAI1CnD,EAAMoD,MAAQpD,EAAMG,MACpBH,EAAMG,MAAQ,CAAC,EACf,MAAM,MAAEiD,EAAK,MAAEjD,EAAK,WAAEkD,GAAerD,EAKjCoD,EAAMnJ,YACFoJ,IACAlD,EAAMlG,UAAYmJ,EAAMnJ,kBACrBmJ,EAAMnJ,WAGboJ,SACazQ,IAAZ4M,QAAqC5M,IAAZ6M,GAAyBU,EAAMlG,aACzDkG,EAAME,gBAnEd,SAAgCgD,EAAY7D,EAASC,GAGjD,MAAO,GAFW4C,GAAa7C,EAAS6D,EAAW5J,EAAG4J,EAAWhG,UAC/CgF,GAAa5C,EAAS4D,EAAW3J,EAAG2J,EAAW9F,SAErE,CA+DgC+F,CAAuBD,OAAwBzQ,IAAZ4M,EAAwBA,EAAU,QAAiB5M,IAAZ6M,EAAwBA,EAAU,UAG1H7M,IAAVgQ,IACAQ,EAAM3J,EAAImJ,QACAhQ,IAAViQ,IACAO,EAAM1J,EAAImJ,QAEKjQ,IAAfkQ,GAtDR,SAAsBM,EAAOnH,EAAQsH,EAAU,EAAGhB,EAAS,EAAGiB,GAAc,GAExEJ,EAAMN,WAAa,EAGnB,MAAMrT,EAAO+T,EAAchB,GAAWE,GAEtCU,EAAM3T,EAAK8S,QAAUnG,GAAGnC,WAAWsI,GAEnC,MAAMO,EAAa1G,GAAGnC,UAAUgC,GAC1B8G,EAAc3G,GAAGnC,UAAUsJ,GACjCH,EAAM3T,EAAKgT,OAAS,GAAGK,KAAcC,GACzC,CA2CQU,CAAaL,EAAON,EAAYC,EAAaC,GAAY,EAEjE,CAEA,MAAMU,GAAuB,KAAM,IAC5B9C,KACHwC,MAAO,CAAC,IAGNF,GAAYS,GAAuB,iBAARA,GAA0C,QAAtBA,EAAIC,cAEzD,SAASC,GAAY3R,EAAOmE,EAAayN,EAAW1P,GAChD,MAAM2P,EAAc/U,EAAM+D,SAAQ,KAC9B,MAAMiN,EAAQ0D,KAEd,OADAf,GAAc3C,EAAO3J,EAAa,CAAE8D,4BAA4B,GAAS+I,GAAS9O,GAAYlC,EAAMoI,mBAC7F,IACA0F,EAAMoD,MACTjD,MAAO,IAAKH,EAAMG,OACrB,GACF,CAAC9J,IACJ,GAAInE,EAAMiO,MAAO,CACb,MAAM6D,EAAY,CAAC,EACnBnD,GAAkBmD,EAAW9R,EAAMiO,MAAOjO,GAC1C6R,EAAY5D,MAAQ,IAAK6D,KAAcD,EAAY5D,MACvD,CACA,OAAO4D,CACX,CAEA,SAASE,GAAgB9B,GAAqB,GAiB1C,MAhBkB,CAAC/N,EAAWlC,EAAOkE,EAAc9E,GAAO2O,gBAAgB1P,KACtE,MAGMwT,GAHiBvL,EAAepE,GAChCyP,GACA1C,IAC6BjP,EAAO+N,EAAc1P,EAAU6D,GAE5D8P,EAAe,IADCjC,GAAY/P,EAA4B,iBAAdkC,EAAwB+N,MAGjE4B,EACHzS,OAKJ,OAHI8E,IACA8N,EAAa,sBAAwB9N,GAElCpH,EAAMqI,cAAcjD,EAAW8P,EAAa,CAG3D,CAKA,MAAMC,GAAeC,GAAQA,EAAIC,QAAQ,kBAAmB,SAAST,cAErE,SAASU,GAAWC,GAAS,MAAEpE,EAAK,KAAEC,GAAQoE,EAAWC,GACrD7V,OAAOmK,OAAOwL,EAAQpE,MAAOA,EAAOsE,GAAcA,EAAWC,oBAAoBF,IAEjF,IAAK,MAAMtQ,KAAOkM,EACdmE,EAAQpE,MAAMwE,YAAYzQ,EAAKkM,EAAKlM,GAE5C,CAKA,MAAM0Q,GAAsB,IAAI1L,IAAI,CAChC,gBACA,kBACA,eACA,mBACA,aACA,WACA,oBACA,eACA,cACA,aACA,UACA,UACA,eACA,mBACA,mBACA,eACA,cACA,UACA,oBACA,aACA,cACA,aACA,iBAGJ,SAAS2L,GAAUN,EAASO,EAAaC,EAAYN,GACjDH,GAAWC,EAASO,OAAalS,EAAW6R,GAC5C,IAAK,MAAMvQ,KAAO4Q,EAAY1B,MAC1BmB,EAAQS,aAAcJ,GAAoBvM,IAAInE,GAA0BA,EAAnBiQ,GAAYjQ,GAAY4Q,EAAY1B,MAAMlP,GAEvG,CAEA,SAAS+Q,GAA8B/S,GACnC,MAAM,MAAEiO,GAAUjO,EACZgT,EAAY,CAAC,EACnB,IAAK,MAAMhR,KAAOiM,GACV7G,EAAc6G,EAAMjM,KAASiF,EAAoBjF,EAAKhC,MACtDgT,EAAUhR,GAAOiM,EAAMjM,IAG/B,OAAOgR,CACX,CAEA,SAASC,GAA4BjT,GACjC,MAAMgT,EAAYD,GAA8B/S,GAChD,IAAK,MAAMgC,KAAOhC,EACd,GAAIoH,EAAcpH,EAAMgC,IAAO,CAE3BgR,EAD0B,MAARhR,GAAuB,MAARA,EAAc,OAASA,EAAIkR,cAAgBlR,GACrDhC,EAAMgC,EACjC,CAEJ,OAAOgR,CACX,CAEA,SAASG,GAAwBnT,EAAOoT,EAAYvN,EAAQwN,EAAgB,CAAC,EAAGC,EAAkB,CAAC,GAsB/F,MAlB0B,mBAAfF,IACPA,EAAaA,OAAsB1S,IAAXmF,EAAuBA,EAAS7F,EAAM6F,OAAQwN,EAAeC,IAM/D,iBAAfF,IACPA,EAAapT,EAAMM,UAAYN,EAAMM,SAAS8S,IAOxB,mBAAfA,IACPA,EAAaA,OAAsB1S,IAAXmF,EAAuBA,EAAS7F,EAAM6F,OAAQwN,EAAeC,IAElFF,CACX,CAEA,MAAMG,GAAqB9T,GAChBC,MAAMC,QAAQF,GAGnB+T,GAAiB/T,GACZY,QAAQZ,GAAkB,iBAANA,GAAkBA,EAAEgU,KAAOhU,EAAEiU,SAEtDC,GAAgClU,GAE3B8T,GAAkB9T,GAAKA,EAAEA,EAAEsK,OAAS,IAAM,EAAItK,EAQzD,SAASmU,GAAmB/W,GACxB,MAAMgX,EAAiBzM,EAAcvK,GAASA,EAAMe,MAAQf,EAC5D,OAAO2W,GAAcK,GACfA,EAAeH,UACfG,CACV,CAYA,MAAMC,GAAsBC,GAAW,CAAC/T,EAAO3B,KAC3C,MAAMoC,EAAU3D,EAAM2B,WAAWF,GAC3B+F,EAAkBxH,EAAM2B,WAAWE,GACnCqV,EAAO,IAbjB,UAAmB,4BAAEf,EAA2B,kBAAEgB,EAAiB,QAAEC,GAAYlU,EAAOS,EAAS6D,GAC7F,MAAMwJ,EAAQ,CACVC,aAAcoG,GAAiBnU,EAAOS,EAAS6D,EAAiB2O,GAChEL,YAAaqB,KAKjB,OAHIC,IACApG,EAAMvI,MAASD,GAAa4O,EAAQlU,EAAOsF,EAAUwI,IAElDA,CACX,CAIuBsG,CAAUL,EAAQ/T,EAAOS,EAAS6D,GACrD,OAAOjG,EAAW2V,IAAS7R,EAAY6R,EAAK,EAEhD,SAASG,GAAiBnU,EAAOS,EAAS6D,EAAiB+P,GACvD,MAAMC,EAAS,CAAC,EACVC,EAAeF,EAAmBrU,GACxC,IAAK,MAAMgC,KAAOuS,EACdD,EAAOtS,GAAO4R,GAAmBW,EAAavS,IAElD,IAAI,QAAExB,EAAO,QAAEP,GAAYD,EAC3B,MAAMwU,EAA0BzU,EAAsBC,GAChDyU,EAAkBrU,EAAcJ,GAClCS,GACAgU,IACCD,IACiB,IAAlBxU,EAAMW,eACUD,IAAZF,IACAA,EAAUC,EAAQD,cACNE,IAAZT,IACAA,EAAUQ,EAAQR,UAE1B,IAAIyU,IAA4BpQ,IACE,IAA5BA,EAAgB9D,QAEtBkU,EAA4BA,IAAyC,IAAZlU,EACzD,MAAMmU,EAAeD,EAA4BzU,EAAUO,EAC3D,GAAImU,GACwB,kBAAjBA,IACN/U,EAAoB+U,GAAe,EACvBjV,MAAMC,QAAQgV,GAAgBA,EAAe,CAACA,IACtDnX,SAAS4V,IACV,MAAMwB,EAAWzB,GAAwBnT,EAAOoT,GAChD,IAAKwB,EACD,OACJ,MAAM,cAAEC,EAAa,WAAEC,KAAelG,GAAWgG,EACjD,IAAK,MAAM5S,KAAO4M,EAAQ,CACtB,IAAImG,EAAcnG,EAAO5M,GACzB,GAAItC,MAAMC,QAAQoV,GAAc,CAQ5BA,EAAcA,EAHAL,EACRK,EAAYhL,OAAS,EACrB,EAEV,CACoB,OAAhBgL,IACAT,EAAOtS,GAAO+S,EAEtB,CACA,IAAK,MAAM/S,KAAO6S,EACdP,EAAOtS,GAAO6S,EAAc7S,EAAI,GAE5C,CACA,OAAOsS,CACX,CAEA,MAAMU,GAAkB,CACpBrR,eAAgBmQ,GAAmB,CAC/Bb,4BAA6BA,GAC7BgB,kBAAmBzC,GACnB0C,QAAS,CAAClU,EAAOsF,GAAYsN,cAAa7E,mBACtC,IACI6E,EAAYzB,WAEJ,mBADG7L,EAAS2P,QAEV3P,EAAS2P,UACT3P,EAAS4P,uBAUvB,CARA,MAAOhY,GAEH0V,EAAYzB,WAAa,CACrB5J,EAAG,EACHC,EAAG,EACH2D,MAAO,EACPE,OAAQ,EAEhB,CACAoF,GAAcmC,EAAa7E,EAAc,CAAE9F,4BAA4B,GAAS+I,GAAS1L,EAAS6P,SAAUnV,EAAMoI,mBAClHuK,GAAUrN,EAAUsN,EAAY,KAKtCwC,GAAmB,CACrBzR,eAAgBmQ,GAAmB,CAC/Bb,4BAA6BF,GAC7BkB,kBAAmBvF,MAI3B,SAAS2G,GAAsBnT,GAAW,mBAAE+N,GAAqB,GAASzM,EAAmBC,EAAqBxB,GAI9G,MAAO,IAHYqE,EAAepE,GAC5B8S,GACAI,GAGF5R,oBACAE,UAAWqO,GAAgB9B,GAC3BxM,sBACAxB,4BACAC,YAER,CAGA,IAAWoT,GAUX,SAASC,GAAY3G,EAAQ4G,EAAWC,EAASzH,EAAU,CAAE0H,SAAS,IAElE,OADA9G,EAAO+G,iBAAiBH,EAAWC,EAASzH,GACrC,IAAMY,EAAOgH,oBAAoBJ,EAAWC,EACvD,CAsBA,SAASI,GAAYzW,EAAKoW,EAAWC,EAASzH,GAC1ClR,EAAMkC,WAAU,KACZ,MAAMqT,EAAUjT,EAAIkD,QACpB,GAAImT,GAAWpD,EACX,OAAOkD,GAAYlD,EAASmD,EAAWC,EAASzH,EACpD,GACD,CAAC5O,EAAKoW,EAAWC,EAASzH,GACjC,CAoBA,SAAS8H,GAAaC,GAElB,MAA4B,oBAAjBC,cAAgCD,aAAiBC,eACxB,UAAtBD,EAAME,aAEbF,aAAiBG,UAC5B,CACA,SAASC,GAAaJ,GAElB,QADqBA,EAAMK,OAE/B,CAzEAxZ,EAAQ0Y,mBAAgB,GACbA,GAQR1Y,EAAQ0Y,gBAAkB1Y,EAAQ0Y,cAAgB,CAAC,IAP3B,QAAI,UAC3BA,GAAqB,MAAI,aACzBA,GAAmB,IAAI,WACvBA,GAAoB,KAAI,YACxBA,GAAqB,MAAI,aACzBA,GAAsB,OAAI,cAC1BA,GAAoB,KAAI,OAiF5B,MAAMe,GAAmB,CAAEC,MAAO,EAAGC,MAAO,GAC5C,SAASC,GAAetZ,EAAGuZ,EAAY,QACnC,MACMC,EADexZ,EAAEkZ,QAAQ,IAAMlZ,EAAEyZ,eAAe,IACxBN,GAC9B,MAAO,CACH9O,EAAGmP,EAAMD,EAAY,KACrBjP,EAAGkP,EAAMD,EAAY,KAE7B,CACA,SAASG,GAAeF,EAAOD,EAAY,QACvC,MAAO,CACHlP,EAAGmP,EAAMD,EAAY,KACrBjP,EAAGkP,EAAMD,EAAY,KAE7B,CACA,SAASI,GAAiBd,EAAOU,EAAY,QACzC,MAAO,CACHC,MAAOP,GAAaJ,GACdS,GAAeT,EAAOU,GACtBG,GAAeb,EAAOU,GAEpC,CACA,MAAMK,GAAc,CAACrB,EAASsB,GAA6B,KACvD,MAAMC,EAAYjB,GAAUN,EAAQM,EAAOc,GAAiBd,IAC5D,OAAOgB,GAlCmBE,EAmCCD,EAlCnBjB,IACJ,MAAMD,EAAeC,aAAiBG,aACZJ,GACrBA,GAAiC,IAAjBC,EAAMmB,SAEvBD,EAAalB,EACjB,GA6BEiB,EApCV,IAA8BC,CAoCZ,EAIZE,GAAwB,IAAMvY,GAAsC,OAAzBwY,OAAOC,cAClDC,GAAsB,IAAM1Y,GAAqC,OAAxBwY,OAAOG,aAChDC,GAAsB,IAAM5Y,GAAoC,OAAvBwY,OAAOK,YAEhDC,GAAkB,CACpBC,YAAa,YACbC,YAAa,YACbC,UAAW,UACXC,cAAe,cACfC,YAAa,YACbC,WAAY,WACZC,aAAc,aACdC,aAAc,cAEZC,GAAkB,CACpBR,YAAa,aACbC,YAAa,YACbC,UAAW,WACXC,cAAe,eAEnB,SAASM,GAAoBjY,GACzB,OAAIgX,KACOhX,EAEFmX,KACEa,GAAgBhY,GAElBqX,KACEE,GAAgBvX,GAEpBA,CACX,CACA,SAASkY,GAAgBzJ,EAAQ4G,EAAWC,EAASzH,GACjD,OAAOuH,GAAY3G,EAAQwJ,GAAoB5C,GAAYsB,GAAYrB,EAAuB,gBAAdD,GAA8BxH,EAClH,CACA,SAASsK,GAAgBlZ,EAAKoW,EAAWC,EAASzH,GAC9C,OAAO6H,GAAYzW,EAAKgZ,GAAoB5C,GAAYC,GAAWqB,GAAYrB,EAAuB,gBAAdD,GAA8BxH,EAC1H,CAEA,SAASuK,GAAWpY,GAChB,IAAIqY,EAAO,KACX,MAAO,KACH,MAAMC,EAAW,KACbD,EAAO,IAAI,EAEf,OAAa,OAATA,IACAA,EAAOrY,EACAsY,EAEC,CAEpB,CACA,MAAMC,GAAuBH,GAAW,kBAClCI,GAAqBJ,GAAW,gBACtC,SAASK,GAAcpX,GACnB,IAAIgX,GAAO,EACX,GAAa,MAAThX,EACAgX,EAAOG,UAEN,GAAa,MAATnX,EACLgX,EAAOE,SAEN,CACD,MAAMG,EAAiBH,KACjBI,EAAeH,KACjBE,GAAkBC,EAClBN,EAAO,KACHK,IACAC,GAAc,GAKdD,GACAA,IACAC,GACAA,IAEZ,CACA,OAAON,CACX,CACA,SAASO,KAGL,MAAMC,EAAkBJ,IAAc,GACtC,OAAKI,IAELA,KACO,EACX,CAEA,SAASC,GAAiBva,EAAewa,EAAUC,GAC/C,MAAO,CAACpD,EAAOqD,KACNtD,GAAaC,KAAUgD,OAKxBra,EAAcmG,gBACdnG,EAAcmG,eAAewU,UAAUzc,EAAQ0Y,cAAcgE,MAAOJ,GAExEC,GAAYA,EAASpD,EAAOqD,GAAK,CAEzC,CAiBA,MAAMG,GAAgB,CAACnV,EAAQoV,MACtBA,IAGIpV,IAAWoV,GAITD,GAAcnV,EAAQoV,EAAMC,gBAI3C,SAASC,GAAiBP,GACtB,OAAOrc,EAAMkC,WAAU,IAAM,IAAMma,KAAY,GACnD,CASA,MAAMQ,GAAmB,CAAC/R,EAAGC,IAAOpI,GAAMoI,EAAED,EAAEnI,IACxCma,GAAO,IAAIC,IAAiBA,EAAaC,OAAOH,IA+DtD,MACMI,GADqB,aAKrBC,GAAS,IAAIhT,IACnB,SAASiT,GAASC,EAAWC,EAAS9H,GAC9B6H,GAAaF,GAAO7T,IAAIgU,KAE5BC,QAAQC,KAAKF,GACT9H,GACA+H,QAAQC,KAAKhI,GACjB2H,GAAOM,IAAIH,GACf,CAOA,MAAMI,GAAoB,IAAIC,QAMxBC,GAAY,IAAID,QAChBE,GAAwBC,IAC1B,MAAMxB,EAAWoB,GAAkB3c,IAAI+c,EAAM/L,QAC7CuK,GAAYA,EAASwB,EAAM,EAEzBC,GAA4BC,IAC9BA,EAAQrd,QAAQkd,GAAqB,EAqBzC,SAASI,GAAoBzI,EAASrE,EAASmL,GAC3C,MAAM4B,EApBV,UAAkC,KAAEC,KAAShN,IACzC,MAAMiN,EAAaD,GAAQnc,SAItB4b,GAAUtU,IAAI8U,IACfR,GAAUrU,IAAI6U,EAAY,CAAC,GAE/B,MAAMC,EAAgBT,GAAU7c,IAAIqd,GAC9BjZ,EAAMmZ,KAAKC,UAAUpN,GAQ3B,OAHKkN,EAAclZ,KACfkZ,EAAclZ,GAAO,IAAIqZ,qBAAqBT,GAA0B,CAAEI,UAAShN,KAEhFkN,EAAclZ,EACzB,CAEsCsZ,CAAyBtN,GAG3D,OAFAuM,GAAkBnU,IAAIiM,EAAS8G,GAC/B4B,EAA0BQ,QAAQlJ,GAC3B,KACHkI,GAAkBiB,OAAOnJ,GACzB0I,EAA0BU,UAAUpJ,EAAQ,CAEpD,CAeA,MAAMqJ,GAAiB,CACnBxb,KAAM,EACNyb,IAAK,GAET,SAASC,GAAwBC,EAAe/N,EAAOpP,GAAe,KAAEsc,EAAM/O,OAAQ6P,EAAU,OAAEC,EAAS,OAAM,KAAEC,IAC/Glf,EAAMkC,WAAU,KACZ,IAAK6c,IAAkBnd,EAAc4D,QACjC,OACJ,MAAM0L,EAAU,CACZgN,KAAMA,aAAmC,EAASA,EAAK1Y,QACvDwZ,aACAG,UAA6B,iBAAXF,EAAsBA,EAASL,GAAeK,IAiCpE,OAAOjB,GAAoBpc,EAAc4D,QAAS0L,GA/BpB2M,IAC1B,MAAM,eAAEuB,GAAmBvB,EAI3B,GAAI7M,EAAMqO,WAAaD,EACnB,OAMJ,GALApO,EAAMqO,SAAWD,EAKbF,IAASE,GAAkBpO,EAAMsO,eACjC,OAEKF,IACLpO,EAAMsO,gBAAiB,GAEvB1d,EAAcmG,gBACdnG,EAAcmG,eAAewU,UAAUzc,EAAQ0Y,cAAc+G,OAAQH,GAMzE,MAAMlc,EAAQtB,EAAc4d,WACtBnD,EAAW+C,EACXlc,EAAMuc,gBACNvc,EAAMwc,gBACZrD,GAAYA,EAASwB,EAAM,GAEiD,GACjF,CAACkB,EAAeb,EAAMc,EAAYC,GACzC,CAMA,SAASU,GAA+BZ,EAAe/N,EAAOpP,GAAe,SAAEge,GAAW,IACtF5f,EAAMkC,WAAU,KACP6c,GAAkBa,IAEX,eAAR3C,IACAE,IAAS,EAAO,oGAUpB0C,uBAAsB,KAClB7O,EAAMsO,gBAAiB,EACvB,MAAM,gBAAEG,GAAoB7d,EAAc4d,WAC1CC,GAAmBA,EAAgB,MAC/B7d,EAAcmG,gBACdnG,EAAcmG,eAAewU,UAAUzc,EAAQ0Y,cAAc+G,QAAQ,EACzE,IACF,GACH,CAACR,GACR,CAEA,MAAMe,GAA2BC,GAAU7c,IACvC6c,EAAK7c,GACE,MAGL8c,GAAoB,CACtBjb,OAAQ+a,IAjGZ,UAAqB,cAAEle,EAAa,YAAEqe,EAAW,gBAAER,EAAe,gBAAEC,EAAe,SAAEQ,EAAW,CAAC,IAC7F,MAAMlP,EAAQhR,EAAMuF,OAAO,CACvB+Z,gBAAgB,EAChBD,UAAU,IAEd,IAAIN,EAAgBxb,QAAQ0c,GAAeR,GAAmBC,GAC1DQ,EAAShB,MAAQlO,EAAMxL,QAAQ8Z,iBAC/BP,GAAgB,IACgC,oBAAzBR,qBACrBoB,GACAb,IACMC,EAAe/N,EAAMxL,QAAS5D,EAAese,EAC7D,IAsFIrb,IAAKib,IA1NT,UAAuB,MAAEK,EAAK,WAAEC,EAAU,YAAEC,EAAW,SAAEC,EAAQ,cAAE1e,IAC/D,MAAM2e,EAAoBJ,GAASC,GAAcC,GAAeC,EAC1DE,EAAaxgB,EAAMuF,QAAO,GAC1Bkb,EAA4BzgB,EAAMuF,OAAO,MAIzCmb,EAAe,CACjB9H,UAAWwH,GAAcD,GAASE,GAAeM,IAErD,SAASC,IACLH,EAA0Bjb,SAAWib,EAA0Bjb,UAC/Dib,EAA0Bjb,QAAU,IACxC,CACA,SAASqb,IAKL,OAJAD,IACAJ,EAAWhb,SAAU,EACrB5D,EAAcmG,gBACVnG,EAAcmG,eAAewU,UAAUzc,EAAQ0Y,cAAcsI,KAAK,IAC9D7E,IACZ,CACA,SAAS8E,EAAY9H,EAAOqD,GACnBuE,MAMJpE,GAAc7a,EAAc4D,QAASyT,EAAMnH,QAEtCqO,GAASA,EAAMlH,EAAOqD,GADtB+D,GAAeA,EAAYpH,EAAOqD,GAE5C,CACA,SAAS0E,EAAgB/H,EAAOqD,GACvBuE,KAELR,GAAeA,EAAYpH,EAAOqD,EACtC,CACA,SAASqE,EAAc1H,EAAOqD,GAC1BsE,IACIJ,EAAWhb,UAEfgb,EAAWhb,SAAU,EACrBib,EAA0Bjb,QAAUsX,GAAKvB,GAAgBjB,OAAQ,YAAayG,EAAaL,GAAenF,GAAgBjB,OAAQ,gBAAiB0G,EAAiBN,IAIpK9e,EAAcmG,gBACVnG,EAAcmG,eAAewU,UAAUzc,EAAQ0Y,cAAcsI,KAAK,GACtEV,GAAcA,EAAWnH,EAAOqD,GACpC,CACAd,GAAgB5Z,EAAe,cAAe2e,EAAoBI,OAAgB/c,EAAW8c,GAC7F9D,GAAiBgE,EACrB,IAuKIjc,MAAOmb,IArbX,UAAyB,WAAEmB,EAAU,cAAErf,IACnC,MAAM,eAAEmG,GAAmBnG,EAO3BmX,GAAYnX,EAAe,QAASqf,EANpB,KACZlZ,GAAkBA,EAAewU,UAAUzc,EAAQ0Y,cAAc0I,OAAO,EAAK,OAKtBtd,GAC3DmV,GAAYnX,EAAe,OAAQqf,EAJpB,KACXlZ,GAAkBA,EAAewU,UAAUzc,EAAQ0Y,cAAc0I,OAAO,EAAM,OAGzBtd,EAC7D,IA4aIgB,MAAOkb,IA1QX,UAAyB,aAAEqB,EAAY,WAAEC,EAAU,WAAEC,EAAU,cAAEzf,IAC7D4Z,GAAgB5Z,EAAe,eAAgBuf,GAAgBE,EACzDlF,GAAiBva,GAAe,EAAMuf,QACtCvd,EAAW,CAAEgV,SAAUuI,IAC7B3F,GAAgB5Z,EAAe,eAAgBwf,GAAcC,EACvDlF,GAAiBva,GAAe,EAAOwf,QACvCxd,EAAW,CAAEgV,SAAUwI,GACjC,KA6RA,SAASE,KACL,MAAM3d,EAAU3D,EAAM2B,WAAWE,GACjC,GAAgB,OAAZ8B,EACA,MAAO,EAAC,EAAM,MAClB,MAAM,UAAE4d,EAAS,eAAEC,EAAc,SAAEC,GAAa9d,EAI1CkE,EAAK7H,EAAM0hB,QACjB1hB,EAAMkC,WAAU,IAAMuf,EAAS5Z,IAAK,IAEpC,OAAQ0Z,GAAaC,EAAiB,EAAC,EADlB,IAAMA,GAAkBA,EAAe3Z,IACE,EAAC,EACnE,CA4BA,SAAS8Z,GAAeC,EAAMC,GAC1B,IAAKjf,MAAMC,QAAQgf,GACf,OAAO,EACX,MAAMC,EAAaD,EAAK5U,OACxB,GAAI6U,IAAeF,EAAK3U,OACpB,OAAO,EACX,IAAK,IAAI8U,EAAI,EAAGA,EAAID,EAAYC,IAC5B,GAAIF,EAAKE,KAAOH,EAAKG,GACjB,OAAO,EAEf,OAAO,CACX,CAQA,MAAMC,GAAyBC,GAAsB,IAAVA,EAErCC,GAAQC,GAAQA,EAoBhBC,GAAa,CAACC,EAAGC,EAAIC,OAAU,EAAM,EAAMA,EAAK,EAAMD,GAAMD,GAAK,EAAME,EAAK,EAAMD,IAAOD,EAAI,EAAMC,GACrGD,EACEG,GAAuB,KACvBC,GAA2B,GAkBjC,SAASC,GAAYC,EAAKC,EAAKC,EAAKC,GAEhC,GAAIH,IAAQC,GAAOC,IAAQC,EACvB,OAAOZ,GACX,MAAMa,EAAYC,GArBtB,SAAyBvY,EAAGwY,EAAYC,EAAYP,EAAKE,GACrD,IAAIM,EACAC,EACArB,EAAI,EACR,GACIqB,EAAWH,GAAcC,EAAaD,GAAc,EACpDE,EAAWf,GAAWgB,EAAUT,EAAKE,GAAOpY,EACxC0Y,EAAW,EACXD,EAAaE,EAGbH,EAAaG,QAEZpX,KAAKqX,IAAIF,GAAYX,MACxBT,EAAIU,IACV,OAAOW,CACX,CAK6BE,CAAgBN,EAAI,EAAG,EAAGL,EAAKE,GAExD,OAAQR,GAAY,IAANA,GAAiB,IAANA,EAAUA,EAAID,GAAWW,EAASV,GAAIO,EAAKE,EACxE,CAIA,MAAMS,GAAgBC,GAAYliB,GAAMA,GAAK,GAAMkiB,EAAO,EAAIliB,GAAK,GAAK,EAAIkiB,EAAO,GAAK,EAAIliB,KAAO,EAI7FmiB,GAAiBD,GAAYliB,GAAM,EAAIkiB,EAAO,EAAIliB,GAElDoiB,GAAUpiB,GAAMA,EAAIA,EACpBqiB,GAAUF,GAAcC,IACxBE,GAAYL,GAAaG,IAEzBG,GAAUviB,GAAM,EAAI0K,KAAK8X,IAAI9X,KAAK+X,KAAKziB,IACvC0iB,GAAUP,GAAcI,IACxBI,GAAYV,GAAaS,IAEzBE,GAAe,CAACC,EAAQ,QAAW7iB,GAAMA,EAAIA,IAAM6iB,EAAQ,GAAK7iB,EAAI6iB,GACpEC,GAASF,KACTG,GAAUZ,GAAcW,IACxBE,GAAYf,GAAaa,IAQzBG,GANmB,CAACJ,IACtB,MAAMK,EAAaN,GAAaC,GAChC,OAAQ7iB,IAAOA,GAAK,GAAK,EACnB,GAAMkjB,EAAWljB,GACjB,IAAO,EAAI0K,KAAKyY,IAAI,GAAI,IAAMnjB,EAAI,IAAI,EAE7BojB,GAEbC,GAAe,CACjBC,OAAQ1C,GACRwB,UACAE,aACAD,WACAE,UACAI,aACAD,WACAI,UACAE,aACAD,WACAE,eAEEM,GAA8BvO,IAChC,GAAI1T,MAAMC,QAAQyT,GAAa,CAE3BrW,EAAU6kB,UAAgC,IAAtBxO,EAAWrJ,OAAc,2DAC7C,MAAO8X,EAAIC,EAAIC,EAAIC,GAAM5O,EACzB,OAAOoM,GAAYqC,EAAIC,EAAIC,EAAIC,EACnC,CACK,MAA0B,iBAAf5O,GAEZrW,EAAU6kB,eAAuClhB,IAA7B+gB,GAAarO,GAA2B,wBAAwBA,MAC7EqO,GAAarO,IAEjBA,CAAU,EAEf6O,GAAiBC,GACZxiB,MAAMC,QAAQuiB,IAA4B,iBAAZA,EAAK,GAOxCC,GAAgB,CAACzZ,EAAM0Z,IAAc3iB,GAChCY,QAASqJ,GAASjK,IAAMgK,GAAiBhD,KAAKhH,IAAMA,EAAE0H,WAAWuB,IACnE0Z,GAAY1lB,OAAO2C,UAAUC,eAAeC,KAAKE,EAAG2iB,IAEvDC,GAAa,CAACC,EAAOC,EAAOC,IAAW/iB,IACzC,IAAKiK,GAASjK,GACV,OAAOA,EACX,MAAOmI,EAAGC,EAAG4a,EAAGvZ,GAASzJ,EAAEijB,MAAMnZ,IACjC,MAAO,CACH,CAAC+Y,GAAQrZ,WAAWrB,GACpB,CAAC2a,GAAQtZ,WAAWpB,GACpB,CAAC2a,GAAQvZ,WAAWwZ,GACpBvZ,WAAiBxI,IAAVwI,EAAsBD,WAAWC,GAAS,EACpD,EAICyZ,GAAU,IACT5Z,EACHhB,UAAYtI,GAAMqJ,KAAKQ,MAHN,CAAC7J,GAAMkJ,EAAM,EAAG,IAAKlJ,GAGTmjB,CAAanjB,KAExCojB,GAAO,CACTpc,KAAM0b,GAAc,MAAO,OAC3BnZ,MAAOqZ,GAAW,MAAO,QAAS,QAClCta,UAAW,EAAG+a,MAAKC,QAAOC,OAAM9Z,MAAO+Z,EAAU,KAAQ,QACrDN,GAAQ5a,UAAU+a,GAClB,KACAH,GAAQ5a,UAAUgb,GAClB,KACAJ,GAAQ5a,UAAUib,GAClB,KACA3Z,GAASH,EAAMnB,UAAUkb,IACzB,KAiCR,MAAMC,GAAM,CACRzc,KAAM0b,GAAc,KACpBnZ,MAhCJ,SAAkBvJ,GACd,IAAI0jB,EAAI,GACJC,EAAI,GACJvb,EAAI,GACJD,EAAI,GAmBR,OAjBInI,EAAEsK,OAAS,GACXoZ,EAAI1jB,EAAE4jB,UAAU,EAAG,GACnBD,EAAI3jB,EAAE4jB,UAAU,EAAG,GACnBxb,EAAIpI,EAAE4jB,UAAU,EAAG,GACnBzb,EAAInI,EAAE4jB,UAAU,EAAG,KAInBF,EAAI1jB,EAAE4jB,UAAU,EAAG,GACnBD,EAAI3jB,EAAE4jB,UAAU,EAAG,GACnBxb,EAAIpI,EAAE4jB,UAAU,EAAG,GACnBzb,EAAInI,EAAE4jB,UAAU,EAAG,GACnBF,GAAKA,EACLC,GAAKA,EACLvb,GAAKA,EACLD,GAAKA,GAEF,CACHkb,IAAKQ,SAASH,EAAG,IACjBJ,MAAOO,SAASF,EAAG,IACnBJ,KAAMM,SAASzb,EAAG,IAClBqB,MAAOtB,EAAI0b,SAAS1b,EAAG,IAAM,IAAM,EAE3C,EAIIG,UAAW8a,GAAK9a,WAGdwb,GAAO,CACT9c,KAAM0b,GAAc,MAAO,OAC3BnZ,MAAOqZ,GAAW,MAAO,aAAc,aACvCta,UAAW,EAAGyb,MAAKC,aAAYC,YAAWxa,MAAO+Z,EAAU,KAC/C,QACJna,KAAKQ,MAAMka,GACX,KACAvZ,GAAQlC,UAAUsB,GAASoa,IAC3B,KACAxZ,GAAQlC,UAAUsB,GAASqa,IAC3B,KACAra,GAASH,EAAMnB,UAAUkb,IACzB,KAINU,GAAQ,CACVld,KAAOhH,GAAMojB,GAAKpc,KAAKhH,IAAMyjB,GAAIzc,KAAKhH,IAAM8jB,GAAK9c,KAAKhH,GACtDuJ,MAAQvJ,GACAojB,GAAKpc,KAAKhH,GACHojB,GAAK7Z,MAAMvJ,GAEb8jB,GAAK9c,KAAKhH,GACR8jB,GAAKva,MAAMvJ,GAGXyjB,GAAIla,MAAMvJ,GAGzBsI,UAAYtI,GACDiK,GAASjK,GACVA,EACAA,EAAEH,eAAe,OACbujB,GAAK9a,UAAUtI,GACf8jB,GAAKxb,UAAUtI,IAI3BmkB,GAAa,OACbC,GAAc,OASpB,SAASC,GAAoBrkB,GACR,iBAANA,IACPA,EAAI,GAAGA,KACX,MAAM6U,EAAS,GACf,IAAIyP,EAAY,EACZC,EAAa,EACjB,MAAMC,EAASxkB,EAAEijB,MAAMlZ,IACnBya,IACAF,EAAYE,EAAOla,OAGnBtK,EAAIA,EAAE0S,QAAQ3I,GAAYoa,IAC1BtP,EAAO7F,QAAQwV,EAAOC,IAAIP,GAAM3a,SAEpC,MAAMmb,EAAU1kB,EAAEijB,MAAMnZ,IAMxB,OALI4a,IACAH,EAAaG,EAAQpa,OACrBtK,EAAIA,EAAE0S,QAAQ5I,GAAYsa,IAC1BvP,EAAO7F,QAAQ0V,EAAQD,IAAInb,EAAOC,SAE/B,CAAEsL,SAAQyP,YAAWC,aAAYI,UAAW3kB,EACvD,CACA,SAASuJ,GAAMvJ,GACX,OAAOqkB,GAAoBrkB,GAAG6U,MAClC,CACA,SAAS+P,GAAkBxV,GACvB,MAAM,OAAEyF,EAAM,UAAEyP,EAAS,UAAEK,GAAcN,GAAoBjV,GACvDyV,EAAYhQ,EAAOvK,OACzB,OAAQtK,IACJ,IAAI8kB,EAASH,EACb,IAAK,IAAIvF,EAAI,EAAGA,EAAIyF,EAAWzF,IAC3B0F,EAASA,EAAOpS,QAAQ0M,EAAIkF,EAAYH,GAAaC,GAAahF,EAAIkF,EAChEJ,GAAM5b,UAAUtI,EAAEof,IAClBxV,GAAS5J,EAAEof,KAErB,OAAO0F,CAAM,CAErB,CACA,MAAMC,GAAwB/kB,GAAmB,iBAANA,EAAiB,EAAIA,EAMhE,MAAMglB,GAAU,CAAEhe,KApDlB,SAAchH,GACV,IAAIqQ,EAAI4U,EACR,OAAQC,MAAMllB,IACViK,GAASjK,MACwB,QAA9BqQ,EAAKrQ,EAAEijB,MAAMnZ,WAAgC,IAAPuG,OAAgB,EAASA,EAAG/F,SAAW,KAC3C,QAA9B2a,EAAKjlB,EAAEijB,MAAMlZ,WAAgC,IAAPkb,OAAgB,EAASA,EAAG3a,SAAW,GAChF,CACZ,EA6CwBf,SAAOqb,qBAAmBO,kBALlD,SAA6BnlB,GACzB,MAAMolB,EAAS7b,GAAMvJ,GAErB,OADoB4kB,GAAkB5kB,EAC/BqlB,CAAYD,EAAOX,IAAIM,IAClC,GAYMO,GAAe,CAAC/iB,EAAKnF,IAEX,WAARmF,MAKiB,iBAAVnF,IAAsB6C,MAAMC,QAAQ9C,OAE1B,iBAAVA,IACP4nB,GAAQhe,KAAK5J,IACZA,EAAMsK,WAAW,UAOpB6d,GAAoB,KAAM,CAC5Btc,KAAM,SACNuc,UAAW,IACXC,QAAS,GACTC,UAAW,KAETC,GAA0BC,IAAO,CACnC3c,KAAM,SACNuc,UAAW,IACXC,QAAgB,IAAPG,EAAW,EAAIvc,KAAKwc,KAAK,KAAO,GACzCH,UAAW,KAETI,GAAc,KAAM,CACtB7c,KAAM,YACNwZ,KAAM,SACNsD,SAAU,KAERC,GAAenR,IAAW,CAC5B5L,KAAM,YACN8c,SAAU,GACVlR,WAEEoR,GAAqB,CACvBne,EAAGyd,GACHxd,EAAGwd,GACHvd,EAAGud,GACH1Y,OAAQ0Y,GACRzY,QAASyY,GACTxY,QAASwY,GACTvY,QAASuY,GACTtY,OAAQ0Y,GACRzY,OAAQyY,GACRjc,MAAOic,GACP/X,QAASkY,GACTI,gBAAiBJ,GACjB5B,MAAO4B,GACPnc,QAASgc,IAEPQ,GAAuB,CAACC,EAAUR,KACpC,IAAIS,EAQJ,OANIA,EADAvS,GAAkB8R,GACEI,GAIhBC,GAAmBG,IAAaH,GAAmBtc,QAEpD,CAAEic,QAAOS,EAAkBT,GAAK,EAMrCU,GAAc,IAAI/e,IAAI,CAAC,aAAc,WAAY,WAAY,YACnE,SAASgf,GAAmBvmB,GACxB,MAAOU,EAAMtD,GAAS4C,EAAEwmB,MAAM,GAAI,GAAGnc,MAAM,KAC3C,GAAa,gBAAT3J,EACA,OAAOV,EACX,MAAOsJ,GAAUlM,EAAM6lB,MAAMnZ,KAAe,GAC5C,IAAKR,EACD,OAAOtJ,EACX,MAAMmK,EAAO/M,EAAMsV,QAAQpJ,EAAQ,IACnC,IAAImd,EAAeH,GAAY5f,IAAIhG,GAAQ,EAAI,EAG/C,OAFI4I,IAAWlM,IACXqpB,GAAgB,KACb/lB,EAAO,IAAM+lB,EAAetc,EAAO,GAC9C,CACA,MAAMuc,GAAgB,oBAChBC,GAAS,IACR3B,GACHG,kBAAoBnlB,IAChB,MAAM4mB,EAAY5mB,EAAEijB,MAAMyD,IAC1B,OAAOE,EAAYA,EAAUnC,IAAI8B,IAAoBhlB,KAAK,KAAOvB,CAAC,GAOpE6mB,GAAoB,IACnB/b,GAEHoZ,SACAgC,gBAAiBhC,GACjB4C,aAAc5C,GACd6C,KAAM7C,GACN8C,OAAQ9C,GAER+C,YAAa/C,GACbgD,eAAgBhD,GAChBiD,iBAAkBjD,GAClBkD,kBAAmBlD,GACnBmD,gBAAiBnD,GACjByC,UACAW,aAAcX,IAKZY,GAAuBhlB,GAAQskB,GAAkBtkB,GAEvD,SAAS4iB,GAAkB5iB,EAAKnF,GAC5B,IAAIiT,EACJ,IAAImX,EAAmBD,GAAoBhlB,GAI3C,OAHIilB,IAAqBb,KACrBa,EAAmBxC,IAE8B,QAA7C3U,EAAKmX,EAAiBrC,yBAAsC,IAAP9U,OAAgB,EAASA,EAAGvQ,KAAK0nB,EAAkBpqB,EACpH,CAEA,MAAMqqB,GAAwB,CAC1B5kB,SAAS,GAwBPmR,GAAM,CAAC0T,EAAM9B,EAAI+B,KAAcA,EAAWD,EAAOC,EAAW/B,EAAK8B,EAGvE,SAASE,GAASjpB,EAAGkpB,EAAGnI,GAKpB,OAJIA,EAAI,IACJA,GAAK,GACLA,EAAI,IACJA,GAAK,GACLA,EAAI,EAAI,EACD/gB,EAAc,GAATkpB,EAAIlpB,GAAS+gB,EACzBA,EAAI,GACGmI,EACPnI,EAAI,EAAI,EACD/gB,GAAKkpB,EAAIlpB,IAAM,EAAI,EAAI+gB,GAAK,EAChC/gB,CACX,CA+BA,MAAMmpB,GAAiB,CAACJ,EAAM9B,EAAI5lB,KAC9B,MAAM+nB,EAAWL,EAAOA,EACxB,OAAOre,KAAKwc,KAAKxc,KAAKD,IAAI,EAAGpJ,GAAK4lB,EAAKA,EAAKmC,GAAYA,GAAU,EAEhEC,GAAa,CAACvE,GAAKL,GAAMU,IACzBmE,GAAgBjoB,GAAMgoB,GAAWE,MAAMjf,GAASA,EAAKjC,KAAKhH,KAChE,SAASmoB,GAAOjE,GACZ,MAAMjb,EAAOgf,GAAa/D,GAC1B5mB,EAAU6kB,UAAUvhB,QAAQqI,GAAO,IAAIib,yEACvC,IAAIkE,EAAQnf,EAAKM,MAAM2a,GAKvB,OAJIjb,IAAS6a,KAETsE,EA1CR,UAAoB,IAAErE,EAAG,WAAEC,EAAU,UAAEC,EAAS,MAAExa,IAC9Csa,GAAO,IAEPE,GAAa,IACb,IAAIZ,EAAM,EACNC,EAAQ,EACRC,EAAO,EACX,GALAS,GAAc,IAQT,CACD,MAAM6D,EAAI5D,EAAY,GAChBA,GAAa,EAAID,GACjBC,EAAYD,EAAaC,EAAYD,EACrCrlB,EAAI,EAAIslB,EAAY4D,EAC1BxE,EAAMuE,GAASjpB,EAAGkpB,EAAG9D,EAAM,EAAI,GAC/BT,EAAQsE,GAASjpB,EAAGkpB,EAAG9D,GACvBR,EAAOqE,GAASjpB,EAAGkpB,EAAG9D,EAAM,EAAI,EACpC,MAVIV,EAAMC,EAAQC,EAAOU,EAWzB,MAAO,CACHZ,IAAKha,KAAKQ,MAAY,IAANwZ,GAChBC,MAAOja,KAAKQ,MAAc,IAARyZ,GAClBC,KAAMla,KAAKQ,MAAa,IAAP0Z,GACjB9Z,QAER,CAiBgB4e,CAAWD,IAEhBA,CACX,CACA,MAAME,GAAW,CAACZ,EAAM9B,KACpB,MAAM2C,EAAWJ,GAAOT,GAClBc,EAASL,GAAOvC,GAChB6C,EAAU,IAAKF,GACrB,OAAQvoB,IACJyoB,EAAQpF,IAAMyE,GAAeS,EAASlF,IAAKmF,EAAOnF,IAAKrjB,GACvDyoB,EAAQnF,MAAQwE,GAAeS,EAASjF,MAAOkF,EAAOlF,MAAOtjB,GAC7DyoB,EAAQlF,KAAOuE,GAAeS,EAAShF,KAAMiF,EAAOjF,KAAMvjB,GAC1DyoB,EAAQhf,MAAQuK,GAAIuU,EAAS9e,MAAO+e,EAAO/e,MAAOzJ,GAC3CojB,GAAK9a,UAAUmgB,GACzB,EAGL,SAASC,GAAW/X,EAAQxB,GACxB,MAAsB,iBAAXwB,EACC3Q,GAAMgU,GAAIrD,EAAQxB,EAAQnP,GAE7BkkB,GAAMld,KAAK2J,GACT2X,GAAS3X,EAAQxB,GAGjBwZ,GAAWhY,EAAQxB,EAElC,CACA,MAAMyZ,GAAW,CAAClB,EAAM9B,KACpB,MAAMd,EAAS,IAAI4C,GACb7C,EAAYC,EAAOxa,OACnBue,EAAanB,EAAKjD,KAAI,CAACqE,EAAU1J,IAAMsJ,GAAWI,EAAUlD,EAAGxG,MACrE,OAAQpf,IACJ,IAAK,IAAIof,EAAI,EAAGA,EAAIyF,EAAWzF,IAC3B0F,EAAO1F,GAAKyJ,EAAWzJ,GAAGpf,GAE9B,OAAO8kB,CAAM,CAChB,EAECiE,GAAY,CAACpY,EAAQxB,KACvB,MAAM2V,EAAS,IAAKnU,KAAWxB,GACzB0Z,EAAa,CAAC,EACpB,IAAK,MAAMtmB,KAAOuiB,OACM7jB,IAAhB0P,EAAOpO,SAAsCtB,IAAhBkO,EAAO5M,KACpCsmB,EAAWtmB,GAAOmmB,GAAW/X,EAAOpO,GAAM4M,EAAO5M,KAGzD,OAAQvC,IACJ,IAAK,MAAMuC,KAAOsmB,EACd/D,EAAOviB,GAAOsmB,EAAWtmB,GAAKvC,GAElC,OAAO8kB,CAAM,CAChB,EAEC6D,GAAa,CAAChY,EAAQxB,KACxB,MAAM6Z,EAAWhE,GAAQJ,kBAAkBzV,GACrC8Z,EAAc5E,GAAoB1T,GAClCuY,EAAc7E,GAAoBlV,GAGxC,OAFuB8Z,EAAY3E,YAAc4E,EAAY5E,WACzD2E,EAAY1E,YAAc2E,EAAY3E,WAE/BpK,GAAKyO,GAASK,EAAYpU,OAAQqU,EAAYrU,QAASmU,IAG9D1rB,EAAU6rB,SAAQ,EAAM,mBAAmBxY,WAAgBxB,6KACnDxQ,GAAM,GAAGA,EAAI,EAAIwQ,EAASwB,IACtC,EAeEgX,GAAW,CAACD,EAAM9B,EAAIxoB,KACxB,MAAMgsB,EAAmBxD,EAAK8B,EAC9B,OAA4B,IAArB0B,EAAyB,GAAKhsB,EAAQsqB,GAAQ0B,CAAgB,EAGnEC,GAAY,CAAC3B,EAAM9B,IAAQjnB,GAAMqV,GAAI0T,EAAM9B,EAAIjnB,GAqBrD,SAAS2qB,GAAaxE,EAAQrC,EAAM8G,GAChC,MAAMC,EAAS,GACTC,EAAeF,IArBJ,iBADOvpB,EAsB+B8kB,EAAO,IApBnDuE,GAEW,iBAANrpB,EACRkkB,GAAMld,KAAKhH,GACJsoB,GAGAK,GAGN1oB,MAAMC,QAAQF,GACZ4oB,GAEW,iBAAN5oB,EACL+oB,GAEJM,IAlBX,IAA4BrpB,EAuBxB,MAAM0pB,EAAY5E,EAAOxa,OAAS,EAClC,IAAK,IAAI8U,EAAI,EAAGA,EAAIsK,EAAWtK,IAAK,CAChC,IAAIuK,EAAQF,EAAa3E,EAAO1F,GAAI0F,EAAO1F,EAAI,IAC/C,GAAIqD,EAAM,CACN,MAAMmH,EAAiB3pB,MAAMC,QAAQuiB,GAAQA,EAAKrD,GAAKqD,EACvDkH,EAAQxP,GAAKyP,EAAgBD,EACjC,CACAH,EAAOxa,KAAK2a,EAChB,CACA,OAAOH,CACX,CAoBA,SAASK,GAAYC,EAAOhF,GAAU5b,MAAO6gB,GAAU,EAAI,KAAEtH,EAAI,MAAEkH,GAAU,CAAC,GAC1E,MAAMK,EAAcF,EAAMxf,OAC1BhN,EAAU6kB,UAAU6H,IAAgBlF,EAAOxa,OAAQ,wDACnDhN,EAAU6kB,WAAWM,IAASxiB,MAAMC,QAAQuiB,IAASA,EAAKnY,SAAW0f,EAAc,EAAG,oIAElFF,EAAM,GAAKA,EAAME,EAAc,KAC/BF,EAAQ,IAAIA,GAAOG,UACnBnF,EAAS,IAAIA,GAAQmF,WAEzB,MAAMT,EAASF,GAAaxE,EAAQrC,EAAMkH,GACpCD,EAAYF,EAAOlf,OACnB4f,EAAgBlqB,IAClB,IAAIof,EAAI,EACR,GAAIsK,EAAY,EACZ,KAAOtK,EAAI0K,EAAMxf,OAAS,KAClBtK,EAAI8pB,EAAM1K,EAAI,IADOA,KAKjC,MAAM+K,EAAkBxC,GAASmC,EAAM1K,GAAI0K,EAAM1K,EAAI,GAAIpf,GACzD,OAAOwpB,EAAOpK,GAAG+K,EAAgB,EAErC,OAAOJ,EACA/pB,GAAMkqB,EAAahhB,EAAM4gB,EAAM,GAAIA,EAAME,EAAc,GAAIhqB,IAC5DkqB,CACV,CAEA,SAASE,GAAcvV,EAAQgM,GAC3B,OAAOhM,EAAO4P,KAAI,IAAM5D,GAAUI,KAAWoJ,OAAO,EAAGxV,EAAOvK,OAAS,EAC3E,CA8CA,MAAMggB,GAAU,KACVC,GAAc,IACdC,GAAc,GACdC,GAAa,IACbC,GAAa,EACnB,SAASC,IAAW,SAAE5E,EAAW,IAAG,OAAE6E,EAAS,IAAI,SAAEC,EAAW,EAAC,KAAEC,EAAO,IACtE,IAAIC,EACAC,EACJ1tB,EAAU6rB,QAAQpD,GAA0B,IAAdyE,GAAoB,8CAClD,IAAIS,EAAe,EAAIL,EAIvBK,EAAe/hB,EAAMuhB,GAAYC,GAAYO,GAC7ClF,EAAW7c,EAAMqhB,GAAaC,GAAazE,EAAW,KAClDkF,EAAe,GAIfF,EAAYG,IACR,MAAMC,EAAmBD,EAAeD,EAClCG,EAAQD,EAAmBpF,EAC3B5d,EAAIgjB,EAAmBN,EACvBziB,EAAIijB,GAAgBH,EAAcD,GAClCjI,EAAI3Z,KAAKiiB,KAAKF,GACpB,OAAOd,GAAWniB,EAAIC,EAAK4a,CAAC,EAEhCgI,EAAcE,IACV,MACME,EADmBF,EAAeD,EACPlF,EAC3B9nB,EAAImtB,EAAQP,EAAWA,EACvBptB,EAAI4L,KAAKyY,IAAImJ,EAAc,GAAK5hB,KAAKyY,IAAIoJ,EAAc,GAAKnF,EAC5DwF,EAAIliB,KAAKiiB,KAAKF,GACdzH,EAAI0H,GAAgBhiB,KAAKyY,IAAIoJ,EAAc,GAAID,GAErD,QADgBF,EAASG,GAAgBZ,GAAU,GAAK,EAAI,KACzCrsB,EAAIR,GAAK8tB,GAAM5H,CAAC,IAOvCoH,EAAYG,GACE7hB,KAAKiiB,KAAKJ,EAAenF,KACxBmF,EAAeL,GAAY9E,EAAW,GACzCuE,GAEZU,EAAcE,GACA7hB,KAAKiiB,KAAKJ,EAAenF,IACIA,EAAWA,GAAvC8E,EAAWK,KAI9B,MACMA,EAmBV,SAAyBH,EAAUC,EAAYQ,GAC3C,IAAIC,EAASD,EACb,IAAK,IAAIpM,EAAI,EAAGA,EAAIsM,GAAgBtM,IAChCqM,GAAkBV,EAASU,GAAUT,EAAWS,GAEpD,OAAOA,CACX,CAzByBE,CAAgBZ,EAAUC,EAD1B,EAAIjF,GAGzB,GADAA,GAAsB,IAClBb,MAAMgG,GACN,MAAO,CACH1F,UAAW,IACXC,QAAS,GACTM,YAGH,CACD,MAAMP,EAAYnc,KAAKyY,IAAIoJ,EAAc,GAAKJ,EAC9C,MAAO,CACHtF,YACAC,QAAwB,EAAfwF,EAAmB5hB,KAAKwc,KAAKiF,EAAOtF,GAC7CO,WAER,CACJ,CACA,MAAM2F,GAAiB,GAQvB,SAASL,GAAgBH,EAAcD,GACnC,OAAOC,EAAe7hB,KAAKwc,KAAK,EAAIoF,EAAeA,EACvD,CAQA,SAASW,GAAkBf,EAAUgB,GACjC,OAAOA,EAAgBhB,GAAY,IAAOgB,GAAiB,CAC/D,CAEA,MAAMC,GAAe,CAAC,WAAY,UAC5BC,GAAc,CAAC,YAAa,UAAW,QAC7C,SAASC,GAAazd,EAASzQ,GAC3B,OAAOA,EAAK2C,MAAM8B,QAAyBtB,IAAjBsN,EAAQhM,IACtC,CAwBA,MAAM0pB,GAAyB,EAI/B,SAASC,IAAO,KAAExE,EAAO,EAAG,GAAE9B,EAAK,EAAG,UAAEF,EAAY,EAAC,UAAEyG,EAAY,OAAS5d,IAKxE,MAAMF,EAAQ,CAAE+d,MAAM,EAAOhvB,MAAOsqB,GACpC,IAAI,UAAElC,EAAS,QAAEC,EAAO,KAAEqF,EAAI,SAAED,EAAQ,SAAE9E,EAAQ,uBAAEsG,GAjCxD,SAA0B9d,GACtB,IAAI+d,EAAgB,CAChBzB,SAAU,EACVrF,UAAW,IACXC,QAAS,GACTqF,KAAM,EACNuB,wBAAwB,KACrB9d,GAGP,IAAKyd,GAAazd,EAASwd,KACvBC,GAAazd,EAASud,IAAe,CACrC,MAAMS,EAAU5B,GAAWpc,GAC3B+d,EAAgB,IACTA,KACAC,EACH1B,SAAU,EACVC,KAAM,GAEVwB,EAAcD,wBAAyB,CAC3C,CACA,OAAOC,CACX,CAWoFE,CAAiBje,GAC7Fke,EAAgBC,GAChBC,EAAkB9B,GAAaA,EAAW,IAAQ,EACtD,MAAMI,EAAexF,GAAW,EAAIpc,KAAKwc,KAAKL,EAAYsF,IAC1D,SAAS8B,IACL,MAAMC,EAAejH,EAAK8B,EACpBoF,EAAsBzjB,KAAKwc,KAAKL,EAAYsF,GAAQ,IAQ1D,QAHkB7pB,IAAdkrB,IACAA,EAAY9iB,KAAKF,IAAIE,KAAKqX,IAAIkF,EAAK8B,GAAQ,IAAK,KAEhDuD,EAAe,EAAG,CAClB,MAAM8B,EAAc1B,GAAgByB,EAAqB7B,GAEzDwB,EAAiB/M,IACb,MAAMqL,EAAW1hB,KAAKiiB,KAAKL,EAAe6B,EAAsBpN,GAChE,OAAQkG,EACJmF,IACO4B,EACC1B,EAAe6B,EAAsBD,GACrCE,EACA1jB,KAAK8X,IAAI4L,EAAcrN,GACvBmN,EAAexjB,KAAK2jB,IAAID,EAAcrN,GAAI,CAE9D,MACK,GAAqB,IAAjBuL,EAELwB,EAAiB/M,GAAMkG,EACnBvc,KAAKiiB,KAAKwB,EAAsBpN,IAC3BmN,GACIF,EAAkBG,EAAsBD,GACrCnN,OAEf,CAED,MAAMuN,EAAoBH,EAAsBzjB,KAAKwc,KAAKoF,EAAeA,EAAe,GACxFwB,EAAiB/M,IACb,MAAMqL,EAAW1hB,KAAKiiB,KAAKL,EAAe6B,EAAsBpN,GAE1DwN,EAAW7jB,KAAKF,IAAI8jB,EAAoBvN,EAAG,KACjD,OAAQkG,EACHmF,IACK4B,EACE1B,EAAe6B,EAAsBD,GACrCxjB,KAAK8jB,KAAKD,GACVD,EACIJ,EACAxjB,KAAK+jB,KAAKF,IAClBD,CAAkB,CAElC,CACJ,CAEA,OADAL,IACO,CACH3N,KAAOS,IACH,MAAM7c,EAAU4pB,EAAc/M,GAC9B,GAAK2M,EAsBDhe,EAAM+d,KAAO1M,GAAKqG,MAtBO,CACzB,IAAIlS,EAAkB8Y,EACtB,GAAU,IAANjN,EAMA,GAAIuL,EAAe,EAAG,CAClB,MAAMoC,EAAQhkB,KAAKD,IAAI,EAAGsW,EAAIuM,IAC9BpY,EAAkB+X,GAAkB/oB,EAAU4pB,EAAcY,GAAQ3N,EAAI2N,EAC5E,MAEIxZ,EAAkB,EAG1B,MAAMyZ,EAA2BjkB,KAAKqX,IAAI7M,IAAoB6R,EACxD6H,EAA+BlkB,KAAKqX,IAAIkF,EAAK/iB,IAAYspB,EAC/D9d,EAAM+d,KACFkB,GAA4BC,CACpC,CAKA,OADAlf,EAAMjR,MAAQiR,EAAM+d,KAAOxG,EAAK/iB,EACzBwL,CAAK,EAEhBmf,WAAY,KACRb,GAAmBA,GAClBjF,EAAM9B,GAAM,CAACA,EAAI8B,GAClBkF,GAAc,EAG1B,CACAV,GAAOuB,mBAAqB,CAACtlB,EAAGC,IAAmB,iBAAND,GAA+B,iBAANC,EACtE,MAAMskB,GAAQgB,GAAO,EA+BrB,MAAMC,GAAmB,EAAI,GAAM,IAC7BC,GAAwC,oBAAhBC,YACxB,IAAMA,YAAYC,MAClB,IAAMC,KAAKD,MACXE,GAAgC,oBAAXrW,OACpB+B,GAAa/B,OAAOuF,sBAAsBxD,GAC1CA,GAAauU,YAAW,IAAMvU,EAASkU,OAAmBD,IAyFjE,MAAMO,GAAY,CACd9C,MAAO,EACP+C,UAAW,GAIf,IAAIC,IAAoB,EACpBC,IAAe,EACfC,IAAe,EACnB,MAAMC,GAAa,CACf,OACA,SACA,YACA,SACA,cAEEC,GAAQD,GAAWlU,QAAO,CAACoU,EAAKlsB,KAClCksB,EAAIlsB,GAxGR,SAA0B8rB,GAKtB,IAAIK,EAAQ,GACRC,EAAiB,GAIjBC,EAAW,EAKXN,GAAe,EACfO,GAAiB,EAIrB,MAAMC,EAAc,IAAIC,QAClBC,EAAO,CAITC,SAAU,CAACvV,EAAUwV,GAAY,EAAOC,GAAY,KAChD,MAAMC,EAAoBD,GAAab,EACjCe,EAASD,EAAoBV,EAAQC,EAU3C,OATIO,GACAJ,EAAYjU,IAAInB,IAEc,IAA9B2V,EAAOtoB,QAAQ2S,KACf2V,EAAOrgB,KAAK0K,GAER0V,GAAqBd,IACrBM,EAAWF,EAAMpkB,SAElBoP,CAAQ,EAKnB4V,OAAS5V,IACL,MAAM6V,EAAQZ,EAAe5nB,QAAQ2S,IACtB,IAAX6V,GACAZ,EAAetE,OAAOkF,EAAO,GACjCT,EAAY/S,OAAOrC,EAAS,EAKhC8V,QAAUtB,IAMN,GAAII,EACAO,GAAiB,MADrB,CAUA,GANAP,GAAe,GACdI,EAAOC,GAAkB,CAACA,EAAgBD,GAE3CC,EAAerkB,OAAS,EAExBskB,EAAWF,EAAMpkB,OACbskB,EACA,IAAK,IAAIxP,EAAI,EAAGA,EAAIwP,EAAUxP,IAAK,CAC/B,MAAM1F,EAAWgV,EAAMtP,GACvB1F,EAASwU,GACLY,EAAYpoB,IAAIgT,KAChBsV,EAAKC,SAASvV,GACd2U,IAER,CAEJC,GAAe,EACXO,IACAA,GAAiB,EACjBG,EAAKQ,QAAQtB,GApBjB,CAqBA,GAGR,OAAOc,CACX,CAmBeS,EAAiB,IAAOpB,IAAe,IAC3CI,IACR,CAAC,GACEiB,GAAOnB,GAAWlU,QAAO,CAACoU,EAAKlsB,KACjC,MAAMysB,EAAOR,GAAMjsB,GAMnB,OALAksB,EAAIlsB,GAAO,CAACitB,EAASN,GAAY,EAAOC,GAAY,KAC3Cd,IACDsB,KACGX,EAAKC,SAASO,EAASN,EAAWC,IAEtCV,CAAG,GACX,CAAC,GACEmB,GAAarB,GAAWlU,QAAO,CAACoU,EAAKlsB,KACvCksB,EAAIlsB,GAAOisB,GAAMjsB,GAAK+sB,OACfb,IACR,CAAC,GACEoB,GAAYtB,GAAWlU,QAAO,CAACoU,EAAKlsB,KACtCksB,EAAIlsB,GAAO,IAAMisB,GAAMjsB,GAAKitB,QAAQtB,IAC7BO,IACR,CAAC,GACEqB,GAAeC,GAAWvB,GAAMuB,GAAQP,QAAQtB,IAChD8B,GAAgB7B,IAClBE,IAAe,EACfH,GAAU9C,MAAQgD,GACZT,GACAtkB,KAAKD,IAAIC,KAAKF,IAAIglB,EAAYD,GAAUC,UArC/B,IAqCuD,GACtED,GAAUC,UAAYA,EACtBG,IAAe,EACfC,GAAWxwB,QAAQ+xB,IACnBxB,IAAe,EACXD,KACAD,IAAoB,EACpBJ,GAAYgC,IAChB,EAEEL,GAAY,KACdtB,IAAe,EACfD,IAAoB,EACfE,IACDN,GAAYgC,GAAa,EAG3BC,GAAQ,CAAEC,MAvLhB,UAAe,SAAErF,EAAW,EAAC,KAAEnD,EAAO,EAAC,MAAElG,EAAQ,GAAG,aAAE2O,EAAe,IAAG,UAAEhE,EAAY,GAAG,aAAEiE,IAKvF,MAAM/hB,EAAQ,CAAE+d,MAAM,EAAOhvB,MAAOsqB,GACpC,IAAI2I,EAAY7O,EAAQqJ,EACxB,MAAMyF,EAAQ5I,EAAO2I,EACflhB,OAA0BlO,IAAjBmvB,EAA6BE,EAAQF,EAAaE,GAOjE,OAFInhB,IAAWmhB,IACXD,EAAYlhB,EAASuY,GAClB,CACHzI,KAAOS,IACH,MAAM0L,GAASiF,EAAYhnB,KAAKiiB,KAAK5L,EAAIyQ,GAGzC,OAFA9hB,EAAM+d,OAAShB,EAAQe,GAAaf,GAASe,GAC7C9d,EAAMjR,MAAQiR,EAAM+d,KAAOjd,EAASA,EAASic,EACtC/c,CAAK,EAEhBmf,WAAY,OAEpB,EA+JuB+C,UAjcvB,UAAmB,KAAE7I,EAAO,EAAC,GAAE9B,EAAK,EAAC,KAAEnD,EAAI,OAAE7R,EAAM,SAAEmV,EAAW,MAK5D,MAAM1X,EAAQ,CAAE+d,MAAM,EAAOhvB,MAAOsqB,GAI9B7S,EAAS5U,MAAMC,QAAQ0lB,GAAMA,EAAK,CAAC8B,EAAM9B,GAIzC4K,EAhBV,SAA8B5f,EAAQmV,GAClC,OAAOnV,EAAO6T,KAAKgM,GAAMA,EAAI1K,GACjC,CAckB2K,CAGd9f,GAAUA,EAAOtG,SAAWuK,EAAOvK,OAC7BsG,EAxBV,SAAuBiE,GACnB,MAAMgQ,EAAYhQ,EAAOvK,OACzB,OAAOuK,EAAO4P,KAAI,CAACkM,EAAQvR,IAAY,IAANA,EAAUA,GAAKyF,EAAY,GAAK,GACrE,CAsBU+L,CAAc/b,GAASkR,GAC7B,SAAS8K,IACL,OAAOhH,GAAY2G,EAAO3b,EAAQ,CAC9B4N,KAAMxiB,MAAMC,QAAQuiB,GAAQA,EAAO2H,GAAcvV,EAAQ4N,IAEjE,CACA,IAAIyH,EAAe2G,IACnB,MAAO,CACH5R,KAAOS,IACHrR,EAAMjR,MAAQ8sB,EAAaxK,GAC3BrR,EAAM+d,KAAO1M,GAAKqG,EACX1X,GAEXmf,WAAY,KACR3Y,EAAOoV,UACPC,EAAe2G,GAAoB,EAG/C,EA6ZkC3E,WAClC,SAAS4E,GAAYC,EAAShL,EAAUiL,EAAQ,GAC5C,OAAOD,EAAUhL,EAAWiL,CAChC,CASA,MAAMC,GAAaC,IACf,MAAMC,EAAgB,EAAG/F,WAAY8F,EAAO9F,GAC5C,MAAO,CACHhrB,MAAO,IAAMsvB,GAAKwB,OAAOC,GAAe,GACxCC,KAAM,IAAMxB,GAAWsB,OAAOC,GACjC,EAEL,SAASE,IAAU,KAAE3J,EAAI,SAAE4J,GAAW,EAAI,OAAEC,EAASN,GAAS,QAAEF,EAAU,EAAGS,OAAQC,EAAY,EAAC,WAAEC,EAAa,OAAM,YAAEC,EAAc,EAAC,OAAEC,EAAM,OAAEC,EAAM,WAAEC,EAAU,SAAEC,EAAQ,SAAEC,EAAQ,KAAE/oB,EAAO,eAAgBsF,IAC7M,IAAI8B,EAAI4U,EACR,IACIgN,EAIA3gB,EAGA4gB,GARA,GAAEtM,GAAOrX,EAET4jB,EAAc,EACdC,EAAmB7jB,EAClBwX,SAEDsM,GAAa,EACbC,GAAoB,EAExB,MAAMC,EAAWtC,GAAMhwB,MAAMC,QAAQ0lB,GAAM,YAAc3c,IACP,QAA7Cgc,GAAM5U,EAAKkiB,GAAU9E,0BAAuC,IAAPxI,OAAgB,EAASA,EAAGnlB,KAAKuQ,EAAIqX,EAAM9B,MACjGsM,EAAwBrI,GAAY,CAAC,EAAG,KAAM,CAACnC,EAAM9B,GAAK,CACtD1c,OAAO,IAEXwe,EAAO,EACP9B,EAAK,KAET,MAAM/jB,EAAY0wB,EAAS,IAAKhkB,EAASmZ,OAAM9B,OAC/C,SAAS4L,IACLW,IACmB,YAAfT,GACAY,EAAoBH,EAAc,GAAM,EACxCpB,EAvCZ,SAAwBA,EAAShL,EAAW,EAAGiL,EAAQ,EAAGsB,GAAoB,GAC1E,OAAOA,EACDxB,GAAY/K,GAAYgL,EAAShL,EAAUiL,GAC3CjL,GAAYgL,EAAUhL,GAAYiL,CAC5C,CAmCsBwB,CAAezB,EAASqB,EAAkBT,EAAaW,KAGjEvB,EAAUD,GAAYC,EAASqB,EAAkBT,GAC9B,WAAfD,GACA7vB,EAAU2rB,cAElB6E,GAAa,EACbN,GAAYA,GAChB,CAKA,SAASb,EAAO9F,GAIZ,GAHKkH,IACDlH,GAASA,GACb2F,GAAW3F,GACNiH,EAAY,CACb,MAAMhkB,EAAQxM,EAAUod,KAAK5V,KAAKD,IAAI,EAAG2nB,IACzCzf,EAASjD,EAAMjR,MACX80B,IACA5gB,EAAS4gB,EAAsB5gB,IACnC+gB,EAAaC,EAAoBjkB,EAAM+d,KAAO2E,GAAW,CAC7D,CACAiB,GAAYA,EAAS1gB,GACjB+gB,IACoB,IAAhBF,IACAC,OACyBnxB,IAArBmxB,EAAiCA,EAAmBrB,GAExDoB,EAAcV,EAjE9B,SAA+BV,EAAShL,EAAUiL,EAAOsB,GACrD,OAAOA,EAAoBvB,GAAWhL,EAAWiL,EAAQD,IAAYC,CACzE,CAgEgByB,CAAsB1B,EAASqB,EAAkBT,EAAaW,IAAsBd,KArB5FS,EAAeb,OACfU,GAAcA,KA0BlB,CAOA,OADAR,IAJIM,GAAUA,IACVK,EAAiBV,EAAOL,GACxBe,EAAe7xB,SAGZ,CACHgxB,KAAM,KACFS,GAAUA,IACVI,EAAeb,MAAM,EAGjC,CAqFA,SAASJ,GAAMtX,EAAUgZ,GACrB,MAAMtyB,EAAQytB,YAAYC,MACpB6E,EAAe,EAAGxE,gBACpB,MAAM4C,EAAU5C,EAAY/tB,EACxB2wB,GAAW2B,IACX9C,GAAWgD,KAAKD,GAChBjZ,EAASqX,EAAU2B,GACvB,EAGJ,OADAhD,GAAKkD,KAAKD,GAAc,GACjB,IAAM/C,GAAWgD,KAAKD,EACjC,CAaA,SAASE,IAAoC,KAAEpQ,EAAI,MAAE+N,KAAUnb,IAC3D,MAAM9G,EAAU,IAAK8G,GA8BrB,OA7BImb,IACAjiB,EAAgB,OAAIiiB,GAIpBnb,EAAW0Q,WACXxX,EAAkB,SAAI8Q,GAAsBhK,EAAW0Q,WACvD1Q,EAAWsc,cACXpjB,EAAQojB,YAActS,GAAsBhK,EAAWsc,cAIvDlP,IACAlU,EAAc,KAAIiU,GAAcC,GAC1BA,EAAKgC,IAAIvC,IACTA,GAA2BO,IAKb,UAApBpN,EAAWpM,OACXsF,EAAQtF,KAAO,aAMK,WAApBoM,EAAWpM,OACXsF,EAAQtF,KAAO,aACZsF,CACX,CAIA,SAASukB,GAAuBzd,EAAY9S,GACxC,MAAMwwB,EAAkBC,GAAmB3d,EAAY9S,IAAQ,CAAC,EAChE,YAAiCtB,IAA1B8xB,EAAgB/B,MACjB+B,EAAgB/B,WACK/vB,IAArBoU,EAAW2b,MACP3b,EAAW2b,MACX,CACd,CAQA,SAASiC,GAA6B5d,EAAY9G,EAAShM,GAcvD,OAbItC,MAAMC,QAAQqO,EAAQqX,UAA+B3kB,IAAxBoU,EAAW0Q,WACxC1Q,EAAW0Q,SAAW,IAT9B,SAA0BxX,GAClBtO,MAAMC,QAAQqO,EAAQqX,KAAyB,OAAlBrX,EAAQqX,GAAG,KACxCrX,EAAQqX,GAAK,IAAIrX,EAAQqX,IACzBrX,EAAQqX,GAAG,GAAKrX,EAAQmZ,KAGhC,CAKIwL,CAAiB3kB,GA7DrB,UAA6B,KAAE4kB,EAAMnC,MAAOoC,EAAM,cAAEC,EAAa,gBAAEC,EAAe,iBAAEC,EAAgB,OAAE/B,EAAM,WAAEE,EAAU,YAAEC,EAAW,KAAEjK,KAASrS,IAC5I,QAASpY,OAAOa,KAAKuX,GAAY/K,MACrC,CA+DSkpB,CAAoBne,KACrBA,EAAa,IACNA,KACA8Q,GAAqB5jB,EAAKgM,EAAQqX,MAGtC,IACArX,KACAskB,GAAoCxd,GAE/C,CAIA,SAASoe,GAAalxB,EAAKnF,EAAO+R,EAAQkG,EAAYyc,GAClD,MAAMiB,EAAkBC,GAAmB3d,EAAY9S,IAAQ,CAAC,GAC1D,QAAEwuB,EAAU,GAAM1b,EACxB0d,EAAgBhC,QACZA,EAAU1R,GAAsBhK,EAAW2b,OAAS,GACxD,IAAIrgB,OAAkC1P,IAAzB8xB,EAAgBrL,KAAqBqL,EAAgBrL,KAAOtqB,EAAMe,MAC/E,MAAMu1B,EAAqBpO,GAAa/iB,EAAK4M,GAC9B,SAAXwB,GAAqB+iB,GAAwC,iBAAXvkB,EAKlDwB,EAASwU,GAAkB5iB,EAAK4M,GAE3BwkB,GAAOhjB,IAA6B,iBAAXxB,EAC9BwB,EAASijB,GAAYzkB,IAEflP,MAAMC,QAAQiP,IACpBwkB,GAAOxkB,IACW,iBAAXwB,IACPxB,EAASykB,GAAYjjB,IAEzB,MAAMkjB,EAAqBvO,GAAa/iB,EAAKoO,GA4B7C,SAAShK,IACL,MAAMmtB,EAAc5f,GAA6B/E,GAKjD,OAJA/R,EAAMuJ,IAAImtB,GACVhC,IACAiB,EAAgBf,UAAYe,EAAgBf,SAAS8B,GACrDf,EAAgBjB,YAAciB,EAAgBjB,aACvC,MACX,CAlCAx0B,EAAU6rB,QAAQ0K,IAAuBH,EAAoB,6BAA6BnxB,WAAaoO,UAAexB,OAAYwB,+DAAoEA,8BAAmCxB,iCAsCzO,OAH6B0kB,IACxBH,IACwB,IAAzBX,EAAgB9pB,KAEd8pB,EAAgBhC,QACZ,IAAMC,GAAMrqB,GAAMosB,EAAgBhC,SAClCpqB,IAxCV,WACI,MAAM4H,EAAU,CACZmZ,KAAM/W,EACNiV,GAAIzW,EACJ0b,SAAUztB,EAAMwK,cAChBkqB,aACAE,SAAWhyB,GAAM5C,EAAMuJ,IAAI3G,IAEzB6B,EAAqC,YAAzBkxB,EAAgB9pB,MACL,UAAzB8pB,EAAgB9pB,KArN5B,UAAiB,KAAEye,EAAO,EAAC,SAAEmD,EAAW,EAAC,IAAE1hB,EAAG,IAAEC,EAAG,MAAEoY,EAAQ,GAAG,aAAE2O,EAAe,IAAG,gBAAE4D,EAAkB,IAAG,cAAEC,EAAgB,GAAE,UAAE7H,EAAY,EAAC,aAAEiE,EAAY,OAAEmB,EAAM,SAAES,EAAQ,WAAEF,EAAU,OAAED,IACxL,IAAIoC,EACJ,SAASC,EAAcl0B,GACnB,YAAgBiB,IAARkI,GAAqBnJ,EAAImJ,QAAiBlI,IAARmI,GAAqBpJ,EAAIoJ,CACvE,CACA,SAAS+qB,EAAgBn0B,GACrB,YAAYiB,IAARkI,EACOC,OACCnI,IAARmI,GAEGC,KAAKqX,IAAIvX,EAAMnJ,GAAKqJ,KAAKqX,IAAItX,EAAMpJ,GAD/BmJ,EAC0CC,CACzD,CACA,SAASgrB,EAAe7lB,GACpB0lB,SAAoEA,EAAiB7C,OACrF6C,EAAmB5C,GAAU,IACtB9iB,EACHgjB,SACAS,SAAWhyB,IACP,IAAIqQ,EACJ2hB,SAAoDA,EAAShyB,GACjC,QAA3BqQ,EAAK9B,EAAQyjB,gBAA6B,IAAP3hB,GAAyBA,EAAGvQ,KAAKyO,EAASvO,EAAE,EAEpF8xB,aACAD,UAER,CACA,SAASwC,EAAY9lB,GACjB6lB,EAAe,CACXnrB,KAAM,SACNuc,UAAWuO,EACXtO,QAASuO,EACT7H,eACG5d,GAEX,CACA,GAAI2lB,EAAcxM,GAEd2M,EAAY,CAAE3M,OAAMmD,WAAUjF,GAAIuO,EAAgBzM,SAEjD,CASD,IAAIvY,EAASqS,EAAQqJ,EAAWnD,OACJ,IAAjB0I,IACPjhB,EAASihB,EAAajhB,IAC1B,MAAMmlB,EAAWH,EAAgBhlB,GAC3BolB,EAAUD,IAAanrB,GAAO,EAAI,EACxC,IAAI+V,EACArc,EACJ,MAAM2xB,EAAiBx0B,IACnBkf,EAAOrc,EACPA,EAAU7C,EACV6qB,EAAWe,GAAkB5rB,EAAIkf,EAAMgP,GAAU9C,QAChC,IAAZmJ,GAAiBv0B,EAAIs0B,IACR,IAAbC,GAAkBv0B,EAAIs0B,IACvBD,EAAY,CAAE3M,KAAM1nB,EAAG4lB,GAAI0O,EAAUzJ,YACzC,EAEJuJ,EAAe,CACXnrB,KAAM,QACNye,OACAmD,WACAsF,eACA3O,QACA2K,YACAiE,eACA4B,SAAUkC,EAAc/kB,GAAUqlB,OAAgBvzB,GAE1D,CACA,MAAO,CACHmwB,KAAM,IAAM6C,aAA2D,EAASA,EAAiB7C,OAEzG,CAwIcqD,CAAQ,IAAKlmB,KAAYwkB,IACzB1B,GAAU,IACL4B,GAA6BF,EAAiBxkB,EAAShM,GAC1DyvB,SAAWhyB,IACPuO,EAAQyjB,SAAShyB,GACjB+yB,EAAgBf,UACZe,EAAgBf,SAAShyB,EAAE,EAEnC8xB,WAAY,KACRvjB,EAAQujB,aACRiB,EAAgBjB,YACZiB,EAAgBjB,YAAY,IAG5C,MAAO,IAAMjwB,EAAUuvB,MAC3B,CAgBMhxB,EACV,CACA,SAASuzB,GAAOv2B,GACZ,OAAkB,IAAVA,GACc,iBAAVA,GACkB,IAAtBoM,WAAWpM,KACa,IAAxBA,EAAM2J,QAAQ,IAC1B,CACA,SAAS6sB,GAAYc,GACjB,MAAoC,iBAAtBA,EACR,EACAvP,GAAkB,GAAIuP,EAChC,CACA,SAAS1B,GAAmB3d,EAAY9S,GACpC,OAAO8S,EAAW9S,IAAQ8S,EAAoB,SAAKA,CACvD,CAKA,SAAS+e,GAAe7xB,EAAKnF,EAAO+R,EAAQkG,EAAa,CAAC,GAItD,OAHIoS,GAAsB5kB,UACtBwS,EAAa,CAAEpM,MAAM,IAElB7L,EAAMgD,OAAO0xB,GACT2B,GAAalxB,EAAKnF,EAAO+R,EAAQ,IAAKkG,EAAY2b,MAAO8B,GAAuBzd,EAAY9S,IAAQuvB,IAEnH,CAKA,MAAM6C,GAAqB30B,GAAM,iBAAiBgH,KAAKhH,GAKjD40B,GAAqB50B,GAAM,aAAagH,KAAKhH,GAEnD,SAAS60B,GAAcC,EAAKC,IACG,IAAvBD,EAAI/tB,QAAQguB,IACZD,EAAI9lB,KAAK+lB,EACjB,CACA,SAASC,GAAWF,EAAKC,GACrB,MAAMxF,EAAQuF,EAAI/tB,QAAQguB,GACtBxF,GAAS,GACTuF,EAAIzK,OAAOkF,EAAO,EAC1B,CAYA,MAAM0F,GACFC,cACI7xB,KAAK8xB,cAAgB,EACzB,CACAta,IAAI7E,GAEA,OADA6e,GAAcxxB,KAAK8xB,cAAenf,GAC3B,IAAMgf,GAAW3xB,KAAK8xB,cAAenf,EAChD,CACA1Q,OAAO6C,EAAGC,EAAG4a,GACT,MAAMoS,EAAmB/xB,KAAK8xB,cAAc7qB,OAC5C,GAAK8qB,EAEL,GAAyB,IAArBA,EAIA/xB,KAAK8xB,cAAc,GAAGhtB,EAAGC,EAAG4a,QAG5B,IAAK,IAAI5D,EAAI,EAAGA,EAAIgW,EAAkBhW,IAAK,CAKvC,MAAMpJ,EAAU3S,KAAK8xB,cAAc/V,GACnCpJ,GAAWA,EAAQ7N,EAAGC,EAAG4a,EAC7B,CAER,CACAqS,UACI,OAAOhyB,KAAK8xB,cAAc7qB,MAC9B,CACAgrB,QACIjyB,KAAK8xB,cAAc7qB,OAAS,CAChC,EAWJ,MAAMirB,GASFL,YAAYvyB,GAjBA,IAACvF,EAsBTiG,KAAKmyB,QAAU,QAMfnyB,KAAKoyB,UAAY,EAMjBpyB,KAAKqyB,YAAc,EAMnBryB,KAAKsyB,kBAAoB,IAAIV,GAM7B5xB,KAAKuyB,0BAA4B,IAAIX,GAMrC5xB,KAAKwyB,kBAAoB,IAAIZ,GAQ7B5xB,KAAKyyB,kBAAmB,EACxBzyB,KAAK0yB,gBAAkB,CAAC/1B,EAAGwD,GAAS,KAChCH,KAAK6b,KAAO7b,KAAKR,QACjBQ,KAAKR,QAAU7C,EAEf,MAAM,MAAEorB,EAAK,UAAE+C,GAAcD,GACzB7qB,KAAKqyB,cAAgBvH,IACrB9qB,KAAKoyB,UAAYrK,EACjB/nB,KAAKqyB,YAAcvH,EACnBuB,GAAKsG,WAAW3yB,KAAK4yB,wBAGrB5yB,KAAK6b,OAAS7b,KAAKR,SACnBQ,KAAKsyB,kBAAkBrwB,OAAOjC,KAAKR,SAGnCQ,KAAKuyB,0BAA0BP,WAC/BhyB,KAAKuyB,0BAA0BtwB,OAAOjC,KAAKuE,eAG3CpE,GACAH,KAAKwyB,kBAAkBvwB,OAAOjC,KAAKR,QACvC,EAUJQ,KAAK4yB,sBAAwB,IAAMvG,GAAKsG,WAAW3yB,KAAK6yB,eAUxD7yB,KAAK6yB,cAAgB,EAAG/H,gBAChBA,IAAc9qB,KAAKqyB,cACnBryB,KAAK6b,KAAO7b,KAAKR,QACjBQ,KAAKuyB,0BAA0BtwB,OAAOjC,KAAKuE,eAC/C,EAEJvE,KAAK8yB,aAAc,EACnB9yB,KAAK6b,KAAO7b,KAAKR,QAAUF,EAC3BU,KAAKyyB,kBA9GI14B,EA8GuBiG,KAAKR,SA7GjCqiB,MAAM1b,WAAWpM,IA8GzB,CAiDAg5B,SAASC,GACL,OAAOhzB,KAAKsyB,kBAAkB9a,IAAIwb,EACtC,CACAC,iBACIjzB,KAAKsyB,kBAAkBL,OAC3B,CASAiB,gBAAgBF,GAGZ,OADAA,EAAahzB,KAAKlF,OACXkF,KAAKwyB,kBAAkBhb,IAAIwb,EACtC,CAMAG,OAAOC,GACHpzB,KAAKozB,cAAgBA,CACzB,CAgBA9vB,IAAI3G,EAAGwD,GAAS,GACPA,GAAWH,KAAKozB,cAIjBpzB,KAAKozB,cAAcz2B,EAAGqD,KAAK0yB,iBAH3B1yB,KAAK0yB,gBAAgB/1B,EAAGwD,EAKhC,CAQArF,MACI,OAAOkF,KAAKR,OAChB,CAIA6zB,cACI,OAAOrzB,KAAK6b,IAChB,CAQAtX,cAEI,OAAOvE,KAAKyyB,iBAEJlK,GAAkBpiB,WAAWnG,KAAKR,SAC9B2G,WAAWnG,KAAK6b,MAAO7b,KAAKoyB,WAClC,CACV,CAaAr1B,MAAMyB,GAEF,OADAwB,KAAK+tB,OACE,IAAIuF,SAASC,IAChBvzB,KAAK8yB,aAAc,EACnB9yB,KAAKwzB,cAAgBh1B,EAAU+0B,EAAQ,IACxCE,MAAK,IAAMzzB,KAAK0zB,kBACvB,CAMA3F,OACQ/tB,KAAKwzB,eACLxzB,KAAKwzB,gBACTxzB,KAAK0zB,gBACT,CAMAC,cACI,QAAS3zB,KAAKwzB,aAClB,CACAE,iBACI1zB,KAAKwzB,cAAgB,IACzB,CAUAI,UACI5zB,KAAKsyB,kBAAkBL,QACvBjyB,KAAKwyB,kBAAkBP,QACvBjyB,KAAK+tB,MACT,EAEJ,SAAS8F,GAAYv0B,GACjB,OAAO,IAAI4yB,GAAY5yB,EAC3B,CAKA,MAAMw0B,GAAiBn3B,GAAOiJ,GAASA,EAAKjC,KAAKhH,GAa3Co3B,GAAsB,CAAC9tB,EAAQmB,GAAID,GAASD,GAASI,GAAID,GARlD,CACT1D,KAAOhH,GAAY,SAANA,EACbuJ,MAAQvJ,GAAMA,IAUZq3B,GAA0Br3B,GAAMo3B,GAAoBlP,KAAKiP,GAAcn3B,IAKvEs3B,GAAa,IAAIF,GAAqBlT,GAAOc,IAI7CuS,GAAiBv3B,GAAMs3B,GAAWpP,KAAKiP,GAAcn3B,IAkB3D,SAASw3B,GAAev4B,EAAe0U,EAAYvN,GAC/C,MAAM7F,EAAQtB,EAAc4d,WAC5B,OAAOnJ,GAAwBnT,EAAOoT,OAAuB1S,IAAXmF,EAAuBA,EAAS7F,EAAM6F,OAf5F,SAAoBnH,GAChB,MAAM4D,EAAU,CAAC,EAEjB,OADA5D,EAAc4V,OAAO9W,SAAQ,CAACX,EAAOmF,IAASM,EAAQN,GAAOnF,EAAMe,QAC5D0E,CACX,CAWoG40B,CAAWx4B,GAP/G,SAAuBA,GACnB,MAAM4rB,EAAW,CAAC,EAElB,OADA5rB,EAAc4V,OAAO9W,SAAQ,CAACX,EAAOmF,IAASsoB,EAAStoB,GAAOnF,EAAMwK,gBAC7DijB,CACX,CAG+H6M,CAAcz4B,GAC7I,CAMA,SAAS04B,GAAe14B,EAAesD,EAAKnF,GACpC6B,EAAc24B,SAASr1B,GACvBtD,EAAc44B,SAASt1B,GAAKoE,IAAIvJ,GAGhC6B,EAAc64B,SAASv1B,EAAK20B,GAAY95B,GAEhD,CACA,SAAS26B,GAAU94B,EAAe0U,GAC9B,MAAMwB,EAAWqiB,GAAev4B,EAAe0U,GAC/C,IAAI,cAAEyB,EAAgB,CAAC,EAAC,WAAEC,EAAa,CAAC,KAAMlG,GAAWgG,EAAWlW,EAAc+4B,qBAAqB7iB,GAAU,GAAS,CAAC,EAC3HhG,EAAS,IAAKA,KAAWiG,GACzB,IAAK,MAAM7S,KAAO4M,EAAQ,CAEtBwoB,GAAe14B,EAAesD,EADhB2R,GAA6B/E,EAAO5M,IAEtD,CACJ,CACA,SAAS01B,GAAYh5B,EAAei5B,GACT,IAAIA,GAAejO,UAC3BlsB,SAASwE,IACpB,IAAI8N,EACJ,MAAM8nB,EAAUl5B,EAAcm5B,WAAW71B,GACzC41B,GAAWJ,GAAU94B,EAAek5B,GACK,QAAxC9nB,EAAKpR,EAAco5B,uBAAoC,IAAPhoB,GAAyBA,EAAGtS,SAASgc,IAClFke,GAAYle,EAAOme,EAAc,GACnC,GAEV,CAYA,SAASI,GAAwBr5B,EAAekQ,EAAQwB,GACpD,IAAIN,EAAI4U,EACR,MAAMsT,EAAet7B,OAAOa,KAAKqR,GAAQwX,QAAQpkB,IAAStD,EAAc24B,SAASr1B,KAC3Ei2B,EAAeD,EAAajuB,OAClC,GAAKkuB,EAEL,IAAK,IAAIpZ,EAAI,EAAGA,EAAIoZ,EAAcpZ,IAAK,CACnC,MAAM7c,EAAMg2B,EAAanZ,GACnBqZ,EAActpB,EAAO5M,GAC3B,IAAInF,EAAQ,KAKR6C,MAAMC,QAAQu4B,KACdr7B,EAAQq7B,EAAY,IAOV,OAAVr7B,IACAA,EAAoG,QAA3F6nB,EAA4B,QAAtB5U,EAAKM,EAAOpO,UAAyB,IAAP8N,EAAgBA,EAAKpR,EAAcy5B,UAAUn2B,UAAyB,IAAP0iB,EAAgBA,EAAK9V,EAAO5M,IAMxInF,UAEiB,iBAAVA,IACNu3B,GAAkBv3B,IAAUw3B,GAAkBx3B,IAE/CA,EAAQoM,WAAWpM,IAEbm6B,GAAcn6B,IAAU4nB,GAAQhe,KAAKyxB,KAC3Cr7B,EAAQ+nB,GAAkB5iB,EAAKk2B,IAEnCx5B,EAAc64B,SAASv1B,EAAK20B,GAAY95B,SACpB6D,IAAhB0P,EAAOpO,KACPoO,EAAOpO,GAAOnF,GAEJ,OAAVA,GACA6B,EAAc05B,cAAcp2B,EAAKnF,GACzC,CACJ,CACA,SAASw7B,GAAwBr2B,EAAK8S,GAClC,IAAKA,EACD,OAEJ,OADwBA,EAAW9S,IAAQ8S,EAAoB,SAAKA,GAC7CqS,IAC3B,CACA,SAASmR,GAAU1pB,EAAQkG,EAAYpW,GACnC,IAAIoR,EACJ,MAAMM,EAAS,CAAC,EAChB,IAAK,MAAMpO,KAAO4M,EAAQ,CACtB,MAAM2pB,EAAmBF,GAAwBr2B,EAAK8S,GACtD1E,EAAOpO,QACkBtB,IAArB63B,EACMA,EACuC,QAAtCzoB,EAAKpR,EAAc44B,SAASt1B,UAAyB,IAAP8N,OAAgB,EAASA,EAAGlS,KACzF,CACA,OAAOwS,CACX,CAEA,SAASooB,GAAwB37B,GAC7B,OAAOwD,QAAQ+G,EAAcvK,IAAUA,EAAMyd,IACjD,CAEA,MAAMme,GAAgB,CAAC9zB,EAAI9H,IAAU,GAAG8H,MAAO9H,IAE/C,SAAS67B,GAAgC/zB,EAAIxE,GACzC,MAAM,uBAAEw4B,GAA2BvhB,OAC7BwhB,EAAcH,GAAc9zB,EAAIoC,EAAeZ,IAAIhG,GAAQ,YAAcA,GACzEmB,EAAYq3B,GAA0BA,EAAuB/6B,IAAIg7B,GACvE,OAAIt3B,GAQA6tB,GAAKlsB,QAAO,KAIR,IACI3B,EAAUytB,SACV4J,EAAuBnd,OAAOod,EAEtB,CAAZ,MAAO17B,GAAK,KAEToE,EAAUu3B,aAAe,GAGzB,CAEf,CAEA,MAAMC,GAAwB,iBACxBC,GAA+B,QAAU9mB,GAAY6mB,IAE3D,SAASE,GAAqBt6B,EAAe0U,EAAYpF,EAAU,CAAC,GAEhE,IAAI1M,EACJ,GAFA5C,EAAcqG,OAAO,iBAAkBqO,GAEnC1T,MAAMC,QAAQyT,GAAa,CAC3B,MAAM6lB,EAAa7lB,EAAW8Q,KAAK0T,GAAYsB,GAAex6B,EAAek5B,EAAS5pB,KACtF1M,EAAY80B,QAAQza,IAAIsd,EAC5B,MACK,GAA0B,iBAAf7lB,EACZ9R,EAAY43B,GAAex6B,EAAe0U,EAAYpF,OAErD,CACD,MAAMmrB,EAA2C,mBAAf/lB,EAC5B6jB,GAAev4B,EAAe0U,EAAYpF,EAAQnI,QAClDuN,EACN9R,EAAY83B,GAAc16B,EAAey6B,EAAoBnrB,EACjE,CACA,OAAO1M,EAAUi1B,MAAK,IAAM73B,EAAcqG,OAAO,oBAAqBqO,IAC1E,CACA,SAAS8lB,GAAex6B,EAAek5B,EAAS5pB,EAAU,CAAC,GACvD,IAAI8B,EACJ,MAAM8E,EAAWqiB,GAAev4B,EAAek5B,EAAS5pB,EAAQnI,QAChE,IAAI,WAAEiP,EAAapW,EAAcknB,wBAA0B,CAAC,GAAMhR,GAAY,CAAC,EAC3E5G,EAAQqrB,qBACRvkB,EAAa9G,EAAQqrB,oBAMzB,MAAMnG,EAAete,EACf,IAAMwkB,GAAc16B,EAAekW,EAAU5G,GAC7C,IAAMooB,QAAQC,UAKdiD,GAA+D,QAAxCxpB,EAAKpR,EAAco5B,uBAAoC,IAAPhoB,OAAgB,EAASA,EAAGvE,MACnG,CAACguB,EAAe,KACd,MAAM,cAAEzG,EAAgB,EAAC,gBAAEC,EAAe,iBAAEC,GAAsBle,EAClE,OAsEZ,SAAyBpW,EAAek5B,EAAS9E,EAAgB,EAAGC,EAAkB,EAAGC,EAAmB,EAAGhlB,GAC3G,MAAMirB,EAAa,GACbO,GAAsB96B,EAAco5B,gBAAgBvsB,KAAO,GAAKwnB,EAChE0G,EAA+C,IAArBzG,EAC1B,CAACnU,EAAI,IAAMA,EAAIkU,EACf,CAAClU,EAAI,IAAM2a,EAAqB3a,EAAIkU,EAS1C,OARArzB,MAAMynB,KAAKzoB,EAAco5B,iBACpBxvB,KAAKoxB,IACLl8B,SAAQ,CAACgc,EAAOqF,KACjBoa,EAAWxqB,KAAKyqB,GAAe1f,EAAOoe,EAAS,IACxC5pB,EACHyiB,MAAOqC,EAAgB2G,EAAwB5a,KAChD0X,MAAK,IAAM/c,EAAMzU,OAAO,oBAAqB6yB,KAAU,IAEvDxB,QAAQza,IAAIsd,EACvB,CArFmBU,CAAgBj7B,EAAek5B,EAAS9E,EAAgByG,EAAcxG,EAAiBC,EAAkBhlB,EAAQ,EAE1H,IAAMooB,QAAQC,WAKd,KAAEzD,GAAS9d,EACjB,GAAI8d,EAAM,CACN,MAAOgH,EAAOC,GAAiB,mBAATjH,EAChB,CAACM,EAAcoG,GACf,CAACA,EAAoBpG,GAC3B,OAAO0G,IAAQrD,KAAKsD,EACxB,CAEI,OAAOzD,QAAQza,IAAI,CAACuX,IAAgBoG,EAAmBtrB,EAAQyiB,QAEvE,CAIA,SAAS2I,GAAc16B,EAAe0U,GAAY,MAAEqd,EAAQ,EAAC,mBAAE4I,EAAkB,KAAE3wB,GAAS,CAAC,GACzF,IAAIoH,EACJ,IAAI,WAAEgF,EAAapW,EAAcknB,uBAAsB,cAAE/Q,KAAkBjG,GAAWlQ,EAAc+4B,qBAAqBrkB,GACzH,MAAM0mB,EAAap7B,EAAc44B,SAAS,cACtC+B,IACAvkB,EAAaukB,GACjB,MAAMJ,EAAa,GACbc,EAAqBrxB,IAAiD,QAAvCoH,EAAKpR,EAAcmG,sBAAmC,IAAPiL,OAAgB,EAASA,EAAGkqB,WAAWtxB,IAC3H,IAAK,MAAM1G,KAAO4M,EAAQ,CACtB,MAAM/R,EAAQ6B,EAAc44B,SAASt1B,GAC/B+S,EAAcnG,EAAO5M,GAC3B,IAAKnF,QACe6D,IAAhBqU,GACCglB,GACGE,GAAqBF,EAAoB/3B,GAC7C,SAEJ,IAAIwwB,EAAkB,CAAE/B,QAAOD,QAAS,KAAM1b,GAe9C,GAXIpW,EAAcw7B,oBAAsBnzB,EAAeZ,IAAInE,KACvDwwB,EAAkB,IACXA,EACH9pB,MAAM,EACN+nB,MAAO,KAOV5zB,EAAM+4B,YAAa,CACpB,MAAMuE,EAAWz7B,EAAc4d,WAAWyc,IACtCoB,IACA3H,EAAgBhC,QAAUkI,GAAgCyB,EAAUn4B,GAE5E,CACA,IAAIV,EAAYuyB,GAAe7xB,EAAKnF,EAAOkY,EAAayd,GACpDgG,GAAwBsB,KACxBA,EAAWxf,IAAItY,GACfV,EAAYA,EAAUi1B,MAAK,IAAMuD,EAAWM,OAAOp4B,MAEvDi3B,EAAWxqB,KAAKnN,EACpB,CACA,OAAO80B,QAAQza,IAAIsd,GAAY1C,MAAK,KAChC1hB,GAAiB2iB,GAAU94B,EAAemW,EAAc,GAEhE,CAoBA,SAAS6kB,GAAgB9xB,EAAGC,GACxB,OAAOD,EAAEyyB,iBAAiBxyB,EAC9B,CAOA,SAASoyB,IAAqB,cAAEK,EAAa,eAAEC,GAAkBv4B,GAC7D,MAAMw4B,EAAcF,EAAch7B,eAAe0C,KAAgC,IAAxBu4B,EAAev4B,GAExE,OADAu4B,EAAev4B,IAAO,EACfw4B,CACX,CAEA,MAAMC,GAAuB,CACzB79B,EAAQ0Y,cAAcolB,QACtB99B,EAAQ0Y,cAAc+G,OACtBzf,EAAQ0Y,cAAc0I,MACtBphB,EAAQ0Y,cAAcgE,MACtB1c,EAAQ0Y,cAAcsI,IACtBhhB,EAAQ0Y,cAAcqlB,KACtB/9B,EAAQ0Y,cAAcslB,MAEpBC,GAAuB,IAAIJ,IAAsB/Q,UACjDoR,GAAoBL,GAAqB1wB,OAI/C,SAASgxB,GAAqBr8B,GAC1B,IAAIuB,EAJR,SAAqBvB,GACjB,OAAQu6B,GAAe7C,QAAQza,IAAIsd,EAAW/U,KAAI,EAAG5iB,YAAW0M,aAAcgrB,GAAqBt6B,EAAe4C,EAAW0M,KACjI,CAEkBgtB,CAAYt8B,GAC1B,MAAMoP,EAoSC,CACH,CAAClR,EAAQ0Y,cAAcolB,SAAUO,IAAgB,GACjD,CAACr+B,EAAQ0Y,cAAc+G,QAAS4e,KAChC,CAACr+B,EAAQ0Y,cAAcgE,OAAQ2hB,KAC/B,CAACr+B,EAAQ0Y,cAAcsI,KAAMqd,KAC7B,CAACr+B,EAAQ0Y,cAAcqlB,MAAOM,KAC9B,CAACr+B,EAAQ0Y,cAAc0I,OAAQid,KAC/B,CAACr+B,EAAQ0Y,cAAcslB,MAAOK,MA1SlC,IAAIC,GAAkB,EAKtB,MAAMC,EAA0B,CAACjN,EAAK9a,KAClC,MAAMwB,EAAWqiB,GAAev4B,EAAe0U,GAC/C,GAAIwB,EAAU,CACV,MAAM,WAAEE,EAAU,cAAED,KAAkBjG,GAAWgG,EACjDsZ,EAAM,IAAKA,KAAQtf,KAAWiG,EAClC,CACA,OAAOqZ,CAAG,EAmBd,SAASppB,EAAekJ,EAASotB,GAC7B,MAAMp7B,EAAQtB,EAAc4d,WACtB7b,EAAU/B,EAAc28B,mBAAkB,IAAS,CAAC,EAKpDpC,EAAa,GAKbqC,EAAc,IAAIt0B,IAMxB,IAAIu0B,EAAkB,CAAC,EAKnBC,EAAsBC,IAO1B,IAAK,IAAI5c,EAAI,EAAGA,EAAIic,GAAmBjc,IAAK,CACxC,MAAMnW,EAAOmyB,GAAqBhc,GAC5B6c,EAAY5tB,EAAMpF,GAClB3H,OAAuBL,IAAhBV,EAAM0I,GAAsB1I,EAAM0I,GAAQjI,EAAQiI,GACzDizB,EAAgBn8B,EAAeuB,GAK/B66B,EAAclzB,IAAS0yB,EAAoBM,EAAUxiB,SAAW,MAClD,IAAhB0iB,IACAJ,EAAsB3c,GAO1B,IAAIgd,EAAc96B,IAASN,EAAQiI,IAAS3H,IAASf,EAAM0I,IAASizB,EAepE,GAXIE,GACAX,GACAx8B,EAAco9B,yBACdD,GAAc,GAMlBH,EAAUpB,cAAgB,IAAKiB,IAI7BG,EAAUxiB,UAA4B,OAAhB0iB,IAElB76B,IAAS26B,EAAUK,UAErBn8B,EAAoBmB,IACJ,kBAATA,EACP,SAOJ,MAAMi7B,EAAmBC,GAAuBP,EAAUK,SAAUh7B,GACpE,IAAIm7B,EAAoBF,GAEnBtzB,IAAS0yB,GACNM,EAAUxiB,WACT2iB,GACDF,GAEH9c,EAAI2c,GAAuBG,EAKhC,MAAMQ,EAAiBz8B,MAAMC,QAAQoB,GAAQA,EAAO,CAACA,GAKrD,IAAIq7B,EAAiBD,EAAeriB,OAAOqhB,EAAyB,CAAC,IACjD,IAAhBS,IACAQ,EAAiB,CAAC,GAUtB,MAAM,mBAAEC,EAAqB,CAAC,GAAMX,EAC9BY,EAAU,IACTD,KACAD,GAEDG,EAAiBv6B,IACnBk6B,GAAoB,EACpBZ,EAAY9f,OAAOxZ,GACnB05B,EAAUnB,eAAev4B,IAAO,CAAI,EAExC,IAAK,MAAMA,KAAOs6B,EAAS,CACvB,MAAM5d,EAAO0d,EAAep6B,GACtB2c,EAAO0d,EAAmBr6B,GAE5Bu5B,EAAgBj8B,eAAe0C,KAK/B0c,IAASC,EAKLpL,GAAkBmL,IAASnL,GAAkBoL,IACxCF,GAAeC,EAAMC,IAASqd,EAC/BO,EAAcv6B,GAOd05B,EAAUpB,cAAct4B,IAAO,OAGrBtB,IAATge,EAEL6d,EAAcv6B,GAIds5B,EAAYhhB,IAAItY,QAGNtB,IAATge,GAAsB4c,EAAYn1B,IAAInE,GAK3Cu6B,EAAcv6B,GAOd05B,EAAUpB,cAAct4B,IAAO,EAEvC,CAKA05B,EAAUK,SAAWh7B,EACrB26B,EAAUW,mBAAqBD,EAI3BV,EAAUxiB,WACVqiB,EAAkB,IAAKA,KAAoBa,IAE3ClB,GAAmBx8B,EAAckG,wBACjCs3B,GAAoB,GAOpBA,IAAsBL,GACtB5C,EAAWxqB,QAAQ0tB,EAAejY,KAAK5iB,IAAc,CACjDA,UAAWA,EACX0M,QAAS,CAAEtF,UAASsF,OAGhC,CAMA,GAAIstB,EAAY/vB,KAAM,CAClB,MAAMixB,EAAoB,CAAC,EAC3BlB,EAAY99B,SAASwE,IACjB,MAAMy6B,EAAiB/9B,EAAcg+B,cAAc16B,QAC5BtB,IAAnB+7B,IACAD,EAAkBx6B,GAAOy6B,EAC7B,IAEJxD,EAAWxqB,KAAK,CAAEnN,UAAWk7B,GACjC,CACA,IAAIG,EAAgBt8B,QAAQ44B,EAAWlvB,QAOvC,OANImxB,IACkB,IAAlBl7B,EAAMQ,UACL9B,EAAco9B,yBACfa,GAAgB,GAEpBzB,GAAkB,EACXyB,EAAgB18B,EAAQg5B,GAAc7C,QAAQC,SACzD,CAkBA,MAAO,CACHvxB,iBACAuU,UAhBJ,SAAmB3Q,EAAMwQ,EAAUlL,GAC/B,IAAI8B,EAEJ,GAAIhC,EAAMpF,GAAMwQ,WAAaA,EACzB,OAAOkd,QAAQC,UAEsB,QAAxCvmB,EAAKpR,EAAco5B,uBAAoC,IAAPhoB,GAAyBA,EAAGtS,SAASgc,IAAY,IAAI1J,EAAI,OAAuC,QAA/BA,EAAK0J,EAAM3U,sBAAmC,IAAPiL,OAAgB,EAASA,EAAGuJ,UAAU3Q,EAAMwQ,EAAS,IAC9MpL,EAAMpF,GAAMwQ,SAAWA,EACvB,MAAM+f,EAAan0B,EAAekJ,EAAStF,GAC3C,IAAK,MAAM1G,KAAO8L,EACdA,EAAM9L,GAAKs4B,cAAgB,CAAC,EAEhC,OAAOrB,CACX,EAII2D,mBA5PJ,SAA4BC,GACxB58B,EAAU48B,EAAan+B,EAC3B,EA2PIs7B,SAAU,IAAMlsB,EAExB,CACA,SAASmuB,GAAuBtd,EAAMD,GAClC,MAAoB,iBAATA,EACAA,IAASC,IAEXjf,MAAMC,QAAQ+e,KACXD,GAAeC,EAAMC,EAGrC,CACA,SAASsc,GAAgB/hB,GAAW,GAChC,MAAO,CACHA,WACAohB,cAAe,CAAC,EAChBC,eAAgB,CAAC,EACjB8B,mBAAoB,CAAC,EAE7B,CAaA,MAAMpD,GAAa,CACf33B,UAAWsb,IAAwB,EAAGle,gBAAeuB,cAMjDvB,EAAcmG,iBAAmBnG,EAAcmG,eAAiBk2B,GAAqBr8B,IAIjFkB,EAAoBK,IACpBnD,EAAMkC,WAAU,IAAMiB,EAAQ68B,UAAUp+B,IAAgB,CAACuB,GAC7D,IAEJsB,KAAMqb,IAAyB5c,IAC3B,MAAM,OAAE6F,EAAM,cAAEnH,GAAkBsB,GAC3Bqe,EAAW0e,GAAgB3e,KAC5B9Z,EAAkBxH,EAAM2B,WAAWE,GACzC7B,EAAMkC,WAAU,KACZN,EAAc2f,UAAYA,EAC1B,MAAM/c,EAAY5C,EAAcmG,gBAC5BnG,EAAcmG,eAAewU,UAAUzc,EAAQ0Y,cAAcslB,MAAOvc,EAAW,CAC3ExY,OAASvB,GAAmBA,EAAgBuB,QACxCA,IAERvE,IAAc+c,GACd/c,EAAUi1B,KAAKwG,EACnB,GACD,CAAC1e,GAAW,KAIjBrR,GAAW,CAACpF,EAAGC,IAAMiB,KAAKqX,IAAIvY,EAAIC,GACxC,SAASm1B,GAAWp1B,EAAGC,GAEnB,MAAMo1B,EAASjwB,GAASpF,EAAEL,EAAGM,EAAEN,GACzB21B,EAASlwB,GAASpF,EAAEJ,EAAGK,EAAEL,GAC/B,OAAOsB,KAAKwc,KAAK2X,GAAU,EAAIC,GAAU,EAC7C,CAKA,MAAMC,GACFxI,YAAY5e,EAAOqnB,GAAU,mBAAEj/B,GAAuB,CAAC,GA2DnD,GAvDA2E,KAAKu6B,WAAa,KAIlBv6B,KAAKw6B,cAAgB,KAIrBx6B,KAAKy6B,kBAAoB,KAIzBz6B,KAAKs6B,SAAW,CAAC,EACjBt6B,KAAK06B,YAAc,KACf,IAAM16B,KAAKw6B,gBAAiBx6B,KAAKy6B,kBAC7B,OACJ,MAAMnkB,EAAOqkB,GAAW36B,KAAKy6B,kBAAmBz6B,KAAK46B,SAC/CC,EAAmC,OAApB76B,KAAKu6B,WAIpBO,EAA0BZ,GAAW5jB,EAAK/I,OAAQ,CAAE9I,EAAG,EAAGC,EAAG,KAAQ,EAC3E,IAAKm2B,IAAiBC,EAClB,OACJ,MAAM,MAAElnB,GAAU0C,GACZ,UAAEwU,GAAcD,GACtB7qB,KAAK46B,QAAQjvB,KAAK,IAAKiI,EAAOkX,cAC9B,MAAM,QAAEiQ,EAAO,OAAEC,GAAWh7B,KAAKs6B,SAC5BO,IACDE,GAAWA,EAAQ/6B,KAAKw6B,cAAelkB,GACvCtW,KAAKu6B,WAAav6B,KAAKw6B,eAE3BQ,GAAUA,EAAOh7B,KAAKw6B,cAAelkB,EAAK,EAE9CtW,KAAKi7B,kBAAoB,CAAChoB,EAAOqD,KAC7BtW,KAAKw6B,cAAgBvnB,EACrBjT,KAAKy6B,kBAAoBS,GAAe5kB,EAAMtW,KAAK3E,oBAE/C2X,GAAaC,IAA4B,IAAlBA,EAAMkoB,QAC7Bn7B,KAAKo7B,gBAAgBnoB,EAAOqD,GAIhC+V,GAAKwB,OAAO7tB,KAAK06B,aAAa,EAAK,EAEvC16B,KAAKo7B,gBAAkB,CAACnoB,EAAOqD,KAC3BtW,KAAKq7B,MACL,MAAM,MAAEC,EAAK,aAAEC,GAAiBv7B,KAAKs6B,SAC/BkB,EAAUb,GAAWO,GAAe5kB,EAAMtW,KAAK3E,oBAAqB2E,KAAK46B,SAC3E56B,KAAKu6B,YAAce,GACnBA,EAAMroB,EAAOuoB,GAEjBD,GAAgBA,EAAatoB,EAAOuoB,EAAQ,EAG5CnoB,GAAaJ,IAAUA,EAAMK,QAAQrM,OAAS,EAC9C,OACJjH,KAAKs6B,SAAWA,EAChBt6B,KAAK3E,mBAAqBA,EAC1B,MACMogC,EAAcP,GADPnnB,GAAiBd,GACWjT,KAAK3E,qBACxC,MAAEuY,GAAU6nB,GACZ,UAAE3Q,GAAcD,GACtB7qB,KAAK46B,QAAU,CAAC,IAAKhnB,EAAOkX,cAC5B,MAAM,eAAE4Q,GAAmBpB,EAC3BoB,GACIA,EAAezoB,EAAO0nB,GAAWc,EAAaz7B,KAAK46B,UACvD56B,KAAK27B,gBAAkB7kB,GAAKvB,GAAgBjB,OAAQ,cAAetU,KAAKi7B,mBAAoB1lB,GAAgBjB,OAAQ,YAAatU,KAAKo7B,iBAAkB7lB,GAAgBjB,OAAQ,gBAAiBtU,KAAKo7B,iBAC1M,CACAQ,eAAetB,GACXt6B,KAAKs6B,SAAWA,CACpB,CACAe,MACIr7B,KAAK27B,iBAAmB37B,KAAK27B,kBAC7BpP,GAAWsB,OAAO7tB,KAAK06B,YAC3B,EAEJ,SAASQ,GAAe5kB,EAAMjb,GAC1B,OAAOA,EAAqB,CAAEuY,MAAOvY,EAAmBib,EAAK1C,QAAW0C,CAC5E,CACA,SAASulB,GAAc/2B,EAAGC,GACtB,MAAO,CAAEN,EAAGK,EAAEL,EAAIM,EAAEN,EAAGC,EAAGI,EAAEJ,EAAIK,EAAEL,EACtC,CACA,SAASi2B,IAAW,MAAE/mB,GAASgnB,GAC3B,MAAO,CACHhnB,QACAmU,MAAO8T,GAAcjoB,EAAOkoB,GAAgBlB,IAC5CrtB,OAAQsuB,GAAcjoB,EAAOmoB,GAAiBnB,IAC9CpT,SAAUjjB,GAAYq2B,EAAS,IAEvC,CACA,SAASmB,GAAiBnB,GACtB,OAAOA,EAAQ,EACnB,CACA,SAASkB,GAAgBlB,GACrB,OAAOA,EAAQA,EAAQ3zB,OAAS,EACpC,CACA,SAAS1C,GAAYq2B,EAASxI,GAC1B,GAAIwI,EAAQ3zB,OAAS,EACjB,MAAO,CAAExC,EAAG,EAAGC,EAAG,GAEtB,IAAIqX,EAAI6e,EAAQ3zB,OAAS,EACrB+0B,EAAmB,KACvB,MAAMC,EAAYH,GAAgBlB,GAClC,KAAO7e,GAAK,IACRigB,EAAmBpB,EAAQ7e,KACvBkgB,EAAUnR,UAAYkR,EAAiBlR,UACvC9O,GAAsBoW,MAG1BrW,IAEJ,IAAKigB,EACD,MAAO,CAAEv3B,EAAG,EAAGC,EAAG,GAEtB,MAAMw3B,GAAQD,EAAUnR,UAAYkR,EAAiBlR,WAAa,IAClE,GAAa,IAAToR,EACA,MAAO,CAAEz3B,EAAG,EAAGC,EAAG,GAEtB,MAAM8L,EAAkB,CACpB/L,GAAIw3B,EAAUx3B,EAAIu3B,EAAiBv3B,GAAKy3B,EACxCx3B,GAAIu3B,EAAUv3B,EAAIs3B,EAAiBt3B,GAAKw3B,GAQ5C,OANI1rB,EAAgB/L,IAAMk0B,MACtBnoB,EAAgB/L,EAAI,GAEpB+L,EAAgB9L,IAAMi0B,MACtBnoB,EAAgB9L,EAAI,GAEjB8L,CACX,CAEA,SAAS2rB,GAAWC,GAChB,OAAOA,EAAKr2B,IAAMq2B,EAAKt2B,GAC3B,CACA,SAASu2B,GAAOtiC,EAAO+R,EAAS,EAAGwwB,EAAc,KAC7C,OAAOt2B,KAAKqX,IAAItjB,EAAQ+R,IAAWwwB,CACvC,CACA,SAASC,GAAcxU,EAAOhc,EAAQD,EAAQwB,EAAS,IACnDya,EAAMza,OAASA,EACfya,EAAMyU,YAAc7rB,GAAI5E,EAAOjG,IAAKiG,EAAOhG,IAAKgiB,EAAMza,QACtDya,EAAM1hB,MAAQ81B,GAAWrwB,GAAUqwB,GAAWpwB,IAC1CswB,GAAOtU,EAAM1hB,MAAO,EAAG,OAAWwb,MAAMkG,EAAM1hB,UAC9C0hB,EAAM1hB,MAAQ,GAClB0hB,EAAM0U,UACF9rB,GAAI7E,EAAOhG,IAAKgG,EAAO/F,IAAKgiB,EAAMza,QAAUya,EAAMyU,aAClDH,GAAOtU,EAAM0U,YAAc5a,MAAMkG,EAAM0U,cACvC1U,EAAM0U,UAAY,EAC1B,CACA,SAASC,GAAa3U,EAAOhc,EAAQD,EAAQwB,GACzCivB,GAAcxU,EAAMtjB,EAAGsH,EAAOtH,EAAGqH,EAAOrH,EAAG6I,aAAuC,EAASA,EAAO9C,SAClG+xB,GAAcxU,EAAMrjB,EAAGqH,EAAOrH,EAAGoH,EAAOpH,EAAG4I,aAAuC,EAASA,EAAO7C,QACtG,CACA,SAASkyB,GAAiB7wB,EAAQ8wB,EAAUt7B,GACxCwK,EAAOhG,IAAMxE,EAAOwE,IAAM82B,EAAS92B,IACnCgG,EAAO/F,IAAM+F,EAAOhG,IAAMq2B,GAAWS,EACzC,CAKA,SAASC,GAAyB/wB,EAAQ1H,EAAQ9C,GAC9CwK,EAAOhG,IAAM1B,EAAO0B,IAAMxE,EAAOwE,IACjCgG,EAAO/F,IAAM+F,EAAOhG,IAAMq2B,GAAW/3B,EACzC,CACA,SAAS04B,GAAqBhxB,EAAQ1H,EAAQ9C,GAC1Cu7B,GAAyB/wB,EAAOrH,EAAGL,EAAOK,EAAGnD,EAAOmD,GACpDo4B,GAAyB/wB,EAAOpH,EAAGN,EAAOM,EAAGpD,EAAOoD,EACxD,CAuBA,SAASq4B,GAA4BX,EAAMt2B,EAAKC,GAC5C,MAAO,CACHD,SAAalI,IAARkI,EAAoBs2B,EAAKt2B,IAAMA,OAAMlI,EAC1CmI,SAAanI,IAARmI,EACCq2B,EAAKr2B,IAAMA,GAAOq2B,EAAKr2B,IAAMq2B,EAAKt2B,UAClClI,EAEd,CAcA,SAASo/B,GAA4BC,EAAYC,GAC7C,IAAIp3B,EAAMo3B,EAAgBp3B,IAAMm3B,EAAWn3B,IACvCC,EAAMm3B,EAAgBn3B,IAAMk3B,EAAWl3B,IAO3C,OAJIm3B,EAAgBn3B,IAAMm3B,EAAgBp3B,IACtCm3B,EAAWl3B,IAAMk3B,EAAWn3B,OAC3BA,EAAKC,GAAO,CAACA,EAAKD,IAEhB,CAAEA,MAAKC,MAClB,CAuCA,MAAMo3B,GAAiB,IAgBvB,SAASC,GAAmBC,EAAaC,EAAUC,GAC/C,MAAO,CACHz3B,IAAK03B,GAAoBH,EAAaC,GACtCv3B,IAAKy3B,GAAoBH,EAAaE,GAE9C,CACA,SAASC,GAAoBH,EAAaI,GACtC,MAA8B,iBAAhBJ,EACRA,EACAA,EAAYI,IAAU,CAChC,CAEA,MAMMC,GAAc,KAAM,CACtBj5B,EAP0B,CAC1Bg4B,UAAW,EACXp2B,MAAO,EACPiH,OAAQ,EACRkvB,YAAa,GAIb93B,EAR0B,CAC1B+3B,UAAW,EACXp2B,MAAO,EACPiH,OAAQ,EACRkvB,YAAa,KAOXmB,GAAY,KAAM,CACpBl5B,EAFqB,CAAGqB,IAAK,EAAGC,IAAK,GAGrCrB,EAHqB,CAAGoB,IAAK,EAAGC,IAAK,KAMzC,SAAS63B,GAASvnB,GACd,MAAO,CAACA,EAAS,KAAMA,EAAS,KACpC,CAOA,SAASwnB,IAAwB,IAAEn1B,EAAG,KAAEG,EAAI,MAAEF,EAAK,OAAEC,IACjD,MAAO,CACHnE,EAAG,CAAEqB,IAAK+C,EAAM9C,IAAK4C,GACrBjE,EAAG,CAAEoB,IAAK4C,EAAK3C,IAAK6C,GAE5B,CAsBA,SAASk1B,GAAgBz3B,GACrB,YAAiBzI,IAAVyI,GAAiC,IAAVA,CAClC,CACA,SAAS03B,IAAS,MAAE13B,EAAK,OAAEuD,EAAM,OAAEC,IAC/B,OAASi0B,GAAgBz3B,KACpBy3B,GAAgBl0B,KAChBk0B,GAAgBj0B,EACzB,CACA,SAASyB,GAAakG,GAClB,OAAQusB,GAASvsB,IACbwsB,GAAexsB,IACfA,EAAO7M,GACP6M,EAAOhI,QACPgI,EAAO/H,SACP+H,EAAO9H,OACf,CACA,SAASs0B,GAAexsB,GACpB,OAAOysB,GAAczsB,EAAO/M,IAAMw5B,GAAczsB,EAAO9M,EAC3D,CACA,SAASu5B,GAAclkC,GACnB,OAAOA,GAAmB,OAAVA,CACpB,CAKA,SAASmkC,GAAWtqB,EAAOvN,EAAOm2B,GAG9B,OAAOA,EADQn2B,GADYuN,EAAQ4oB,EAGvC,CAIA,SAAS2B,GAAgBvqB,EAAO6oB,EAAWp2B,EAAOm2B,EAAa4B,GAI3D,YAHiBxgC,IAAbwgC,IACAxqB,EAAQsqB,GAAWtqB,EAAOwqB,EAAU5B,IAEjC0B,GAAWtqB,EAAOvN,EAAOm2B,GAAeC,CACnD,CAIA,SAAS4B,GAAejC,EAAMK,EAAY,EAAGp2B,EAAQ,EAAGm2B,EAAa4B,GACjEhC,EAAKt2B,IAAMq4B,GAAgB/B,EAAKt2B,IAAK22B,EAAWp2B,EAAOm2B,EAAa4B,GACpEhC,EAAKr2B,IAAMo4B,GAAgB/B,EAAKr2B,IAAK02B,EAAWp2B,EAAOm2B,EAAa4B,EACxE,CAIA,SAASE,GAAcC,GAAK,EAAE95B,EAAC,EAAEC,IAC7B25B,GAAeE,EAAI95B,EAAGA,EAAEg4B,UAAWh4B,EAAE4B,MAAO5B,EAAE+3B,aAC9C6B,GAAeE,EAAI75B,EAAGA,EAAE+3B,UAAW/3B,EAAE2B,MAAO3B,EAAE83B,YAClD,CAgDA,SAASgC,GAAcn4B,GACnB,OAAIo4B,OAAOC,UAAUr4B,IAEdA,EAAQ,iBAAmBA,EAAQ,cAD/BA,EACwD,CACvE,CACA,SAASs4B,GAAcvC,EAAMlyB,GACzBkyB,EAAKt2B,IAAMs2B,EAAKt2B,IAAMoE,EACtBkyB,EAAKr2B,IAAMq2B,EAAKr2B,IAAMmE,CAC1B,CAMA,SAAS00B,GAAcxC,EAAMyC,GAAa3/B,EAAK4/B,EAAUC,IACrD,MAAMC,OAAuCphC,IAA1BihC,EAAWE,GAA2BF,EAAWE,GAAa,GAC3EvC,EAAc7rB,GAAIyrB,EAAKt2B,IAAKs2B,EAAKr2B,IAAKi5B,GAE5CX,GAAejC,EAAMyC,EAAW3/B,GAAM2/B,EAAWC,GAAWtC,EAAaqC,EAAWx4B,MACxF,CAIA,MAAM44B,GAAU,CAAC,IAAK,SAAU,WAC1BC,GAAU,CAAC,IAAK,SAAU,WAIhC,SAASC,GAAaZ,EAAKt5B,GACvB25B,GAAcL,EAAI95B,EAAGQ,EAAWg6B,IAChCL,GAAcL,EAAI75B,EAAGO,EAAWi6B,GACpC,CAEA,SAASE,GAAmB58B,EAAU04B,GAClC,OAAO2C,GApJX,SAA4BjqB,EAAOsnB,GAC/B,IAAKA,EACD,OAAOtnB,EACX,MAAMyrB,EAAUnE,EAAe,CAAEz2B,EAAGmP,EAAM/K,KAAMnE,EAAGkP,EAAMlL,MACnD42B,EAAcpE,EAAe,CAAEz2B,EAAGmP,EAAMjL,MAAOjE,EAAGkP,EAAMhL,SAC9D,MAAO,CACHF,IAAK22B,EAAQ36B,EACbmE,KAAMw2B,EAAQ56B,EACdmE,OAAQ02B,EAAY56B,EACpBiE,MAAO22B,EAAY76B,EAE3B,CAyImC86B,CAAmB/8B,EAAS4P,wBAAyB8oB,GACxF,CAWA,MAAMsE,GAAsB,IAAI9nB,QAKhC,MAAM+nB,GACF5N,YAAYj2B,GAIRoE,KAAK0/B,eAAiB,KACtB1/B,KAAK2/B,YAAa,EAClB3/B,KAAK4/B,iBAAmB,KACxB5/B,KAAKw8B,YAAc,CAAE/3B,EAAG,EAAGC,EAAG,GAI9B1E,KAAK6/B,aAAc,EACnB7/B,KAAK8/B,uBAAwB,EAI7B9/B,KAAK+/B,QAAUpC,KACf39B,KAAKpE,cAAgBA,CACzB,CACAmB,MAAMijC,GAAa,aAAEC,GAAe,GAAU,CAAC,GAI3C,IAAqC,IAAjCjgC,KAAKpE,cAAc2f,UACnB,OAmFJvb,KAAKkgC,WAAa,IAAI7F,GAAW2F,EAAa,CAC1CtE,eAnFoBzoB,IAGpBjT,KAAKwzB,gBACDyM,GACAjgC,KAAKigC,aAAalsB,GAAiBd,EAAO,QAAQW,MACtD,EA8EAmnB,QA5EY,CAAC9nB,EAAOqD,KACpB,IAAItJ,EAEJ,MAAM,KAAEtO,EAAI,gBAAEyhC,EAAe,YAAEC,GAAgBpgC,KAAKwZ,aAChD9a,GAASyhC,IACLngC,KAAK0/B,gBACL1/B,KAAK0/B,iBACT1/B,KAAK0/B,eAAiB5pB,GAAcpX,GAE/BsB,KAAK0/B,mBAGd1/B,KAAK2/B,YAAa,EAClB3/B,KAAK4/B,iBAAmB,KACxB5/B,KAAKqgC,qBACDrgC,KAAKpE,cAAc6T,aACnBzP,KAAKpE,cAAc6T,WAAW6wB,oBAAqB,EACnDtgC,KAAKpE,cAAc6T,WAAW3D,YAASlO,GAK3CggC,IAAUxB,IACN,IAAIpvB,EAAI4U,EACR,IAAIpiB,EAAUQ,KAAKugC,mBAAmBnE,GAAMthC,OAAS,EAIrD,GAAIqM,GAAQxD,KAAKnE,GAAU,CACvB,MAAMghC,EAA8G,QAA9F5e,EAA8C,QAAxC5U,EAAKhN,KAAKpE,cAAc6T,kBAA+B,IAAPzC,OAAgB,EAASA,EAAG5I,cAA2B,IAAPwd,OAAgB,EAASA,EAAG6e,UAAUrE,GAClK,GAAIoE,EAAc,CAEdhhC,EADe28B,GAAWqE,IACNr6B,WAAW3G,GAAW,IAC9C,CACJ,CACAQ,KAAKw8B,YAAYJ,GAAQ58B,CAAO,IAGpC4gC,SAA0DA,EAAYntB,EAAOqD,GAChC,QAA5CtJ,EAAKhN,KAAKpE,cAAcmG,sBAAmC,IAAPiL,GAAyBA,EAAGuJ,UAAUzc,EAAQ0Y,cAAcqlB,MAAM,GAAK,EAsC5HmD,OApCW,CAAC/nB,EAAOqD,KAEnB,MAAM,gBAAE6pB,EAAe,kBAAEO,EAAiB,gBAAEC,EAAe,OAAEC,GAAY5gC,KAAKwZ,WAE9E,IAAK2mB,IAAoBngC,KAAK0/B,eAC1B,OACJ,MAAM,OAAEnyB,GAAW+I,EAEnB,GAAIoqB,GAA+C,OAA1B1gC,KAAK4/B,iBAM1B,OALA5/B,KAAK4/B,iBA6UrB,SAA6BryB,EAAQszB,EAAgB,IACjD,IAAIC,EAAY,KACZ96B,KAAKqX,IAAI9P,EAAO7I,GAAKm8B,EACrBC,EAAY,IAEP96B,KAAKqX,IAAI9P,EAAO9I,GAAKo8B,IAC1BC,EAAY,KAEhB,OAAOA,CACX,CAtVwCC,CAAoBxzB,QAEd,OAA1BvN,KAAK4/B,mBACLe,SAAkEA,EAAgB3gC,KAAK4/B,oBAK/F5/B,KAAKghC,WAAW,IAAK1qB,EAAK1C,MAAOrG,GACjCvN,KAAKghC,WAAW,IAAK1qB,EAAK1C,MAAOrG,GAOjCvN,KAAKpE,cAAcuE,SAKnBygC,SAAgDA,EAAO3tB,EAAOqD,EAAK,EAOnEilB,aALiB,CAACtoB,EAAOqD,IAAStW,KAAK+tB,KAAK9a,EAAOqD,IAMpD,CAAEjb,mBAAoB2E,KAAKpE,cAAcqlC,yBAChD,CACAlT,KAAK9a,EAAOqD,GACR,MAAMqpB,EAAa3/B,KAAK2/B,WAExB,GADA3/B,KAAKisB,UACA0T,EACD,OACJ,MAAM,SAAEnY,GAAalR,EACrBtW,KAAK+wB,eAAevJ,GACpB,MAAM,UAAE0Z,GAAclhC,KAAKwZ,WAC3B0nB,SAAsDA,EAAUjuB,EAAOqD,EAC3E,CACA2V,SACI,IAAIjf,EAAI4U,EACR5hB,KAAK2/B,YAAa,EACd3/B,KAAKpE,cAAc6T,aACnBzP,KAAKpE,cAAc6T,WAAW6wB,oBAAqB,GAE5B,QAA1BtzB,EAAKhN,KAAKkgC,kBAA+B,IAAPlzB,GAAyBA,EAAGquB,MAC/Dr7B,KAAKkgC,gBAAatiC,EAClB,MAAM,gBAAEuiC,GAAoBngC,KAAKwZ,YAC5B2mB,GAAmBngC,KAAK0/B,iBACzB1/B,KAAK0/B,iBACL1/B,KAAK0/B,eAAiB,MAEmB,QAA5C9d,EAAK5hB,KAAKpE,cAAcmG,sBAAmC,IAAP6f,GAAyBA,EAAGrL,UAAUzc,EAAQ0Y,cAAcqlB,MAAM,EAC3H,CACAmJ,WAAW5E,EAAM+E,EAAQ5zB,GACrB,MAAM,KAAE7O,GAASsB,KAAKwZ,WAEtB,IAAKjM,IAAW6zB,GAAWhF,EAAM19B,EAAMsB,KAAK4/B,kBACxC,OACJ,MAAMyB,EAAYrhC,KAAKugC,mBAAmBnE,GAC1C,IAAIxgB,EAAO5b,KAAKw8B,YAAYJ,GAAQ7uB,EAAO6uB,GAEvCp8B,KAAK6/B,aAAe7/B,KAAK6/B,YAAYzD,KACrCxgB,EAndZ,SAA0BhI,GAAO,IAAE9N,EAAG,IAAEC,GAAOg6B,GAS3C,YARYniC,IAARkI,GAAqB8N,EAAQ9N,EAE7B8N,EAAQmsB,EAAUpvB,GAAI7K,EAAK8N,EAAOmsB,EAAQj6B,KAAOE,KAAKD,IAAI6N,EAAO9N,QAEpDlI,IAARmI,GAAqB6N,EAAQ7N,IAElC6N,EAAQmsB,EAAUpvB,GAAI5K,EAAK6N,EAAOmsB,EAAQh6B,KAAOC,KAAKF,IAAI8N,EAAO7N,IAE9D6N,CACX,CAycmB0tB,CAAiB1lB,EAAM5b,KAAK6/B,YAAYzD,GAAOp8B,KAAK+/B,QAAQ3D,KAEvEiF,EAAU/9B,IAAIsY,EAClB,CACAykB,qBACI,MAAM,gBAAEkB,EAAe,YAAElE,GAAgBr9B,KAAKwZ,YACxC,OAAEpV,GAAWpE,KAAKpE,cAAc6T,YAAc,CAAC,EAC/C+xB,EAAkBxhC,KAAK6/B,YACzB0B,GAAmBllC,EAAYklC,GAC1BvhC,KAAK6/B,cACN7/B,KAAK6/B,YAAc7/B,KAAKyhC,yBAKxBzhC,KAAK6/B,eADL0B,IAAmBn9B,IArcnC,SAAiCq8B,GAAW,IAAE/3B,EAAG,KAAEG,EAAI,OAAED,EAAM,MAAED,IAC7D,MAAO,CACHlE,EAAGs4B,GAA4B0D,EAAUh8B,EAAGoE,EAAMF,GAClDjE,EAAGq4B,GAA4B0D,EAAU/7B,EAAGgE,EAAKE,GAEzD,CAicmC84B,CAAwBt9B,EAAOq8B,UAAWc,GAMrEvhC,KAAK+/B,QA9Yb,SAA4B1C,EAAcF,IAOtC,OANoB,IAAhBE,EACAA,EAAc,GAEO,IAAhBA,IACLA,EAAcF,IAEX,CACH14B,EAAG24B,GAAmBC,EAAa,OAAQ,SAC3C34B,EAAG04B,GAAmBC,EAAa,MAAO,UAElD,CAmYuBsE,CAAmBtE,GAK9BmE,IAAoBxhC,KAAK6/B,aACzBz7B,GACApE,KAAK6/B,cACJ7/B,KAAK8/B,uBACNlC,IAAUxB,IACFp8B,KAAKugC,mBAAmBnE,KACxBp8B,KAAK6/B,YAAYzD,GAvarC,SAA+Bh4B,EAAQy7B,GACnC,MAAM+B,EAAsB,CAAC,EAO7B,YANwBhkC,IAApBiiC,EAAY/5B,MACZ87B,EAAoB97B,IAAM+5B,EAAY/5B,IAAM1B,EAAO0B,UAE/BlI,IAApBiiC,EAAY95B,MACZ67B,EAAoB77B,IAAM85B,EAAY95B,IAAM3B,EAAO0B,KAEhD87B,CACX,CA8Z6CC,CAAsBz9B,EAAOq8B,UAAUrE,GAAOp8B,KAAK6/B,YAAYzD,IAC5F,GAGZ,CACAqF,wBACI,MAAQF,gBAAiB1B,EAAW,yBAAEiC,GAA6B9hC,KAAKwZ,WACxE,IAAKqmB,IAAgBxjC,EAAYwjC,GAC7B,OAAO,EACX,MAAMkC,EAAqBlC,EAAYrgC,QACvCvF,EAAU6kB,UAAiC,OAAvBijB,EAA6B,0GACjD,MAAM,WAAEtyB,GAAezP,KAAKpE,cAE5B,IAAK6T,IAAeA,EAAWrL,OAC3B,OAAO,EACX,MAAM49B,EAnNd,SAAwBzyB,EAAS0yB,EAAoB5mC,GACjD,MAAM6mC,EAAc9C,GAAmB7vB,EAASlU,IAC1C,OAAE8mC,GAAWF,EAKnB,OAJIE,IACAxD,GAAcuD,EAAYz9B,EAAG09B,EAAO50B,OAAO9I,GAC3Ck6B,GAAcuD,EAAYx9B,EAAGy9B,EAAO50B,OAAO7I,IAExCw9B,CACX,CA2M+BE,CAAeL,EAAoBtyB,EAAWyI,KAAMlY,KAAKpE,cAAcqlC,yBAC9F,IAAIoB,EAhdZ,SAAiC5B,EAAWuB,GACxC,MAAO,CACHv9B,EAAGu4B,GAA4ByD,EAAUh8B,EAAGu9B,EAAev9B,GAC3DC,EAAGs4B,GAA4ByD,EAAU/7B,EAAGs9B,EAAet9B,GAEnE,CA2ckC49B,CAAwB7yB,EAAWrL,OAAOq8B,UAAWuB,GAK/E,GAAIF,EAA0B,CAC1B,MAAMS,EAAkBT,EAxXpC,UAAiC,EAAEr9B,EAAC,EAAEC,IAClC,MAAO,CAAEgE,IAAKhE,EAAEoB,IAAK6C,MAAOlE,EAAEsB,IAAK6C,OAAQlE,EAAEqB,IAAK8C,KAAMpE,EAAEqB,IAC9D,CAsX6D08B,CAAwBH,IACzEriC,KAAK8/B,wBAA0ByC,EAC3BA,IACAF,EAAsBxE,GAAwB0E,GAEtD,CACA,OAAOF,CACX,CACAtR,eAAevJ,GACX,MAAM,KAAE9oB,EAAI,aAAE+jC,EAAY,YAAEpF,EAAW,eAAEqF,EAAc,iBAAEC,EAAgB,oBAAEC,GAAyB5iC,KAAKwZ,WACnGqmB,EAAc7/B,KAAK6/B,aAAe,CAAC,EACnCgD,EAAqBjF,IAAUxB,IACjC,IAAKgF,GAAWhF,EAAM19B,EAAMsB,KAAK4/B,kBAC7B,OAEJ,IAAI5tB,GAAc6tB,aAAiD,EAASA,EAAYzD,KAAU,CAAC,EAC/FuG,IACA3wB,EAAa,CAAElM,IAAK,EAAGC,IAAK,IAOhC,MAAM2qB,EAAkB2M,EAAc,IAAM,IACtC1M,EAAgB0M,EAAc,GAAK,IACnCjM,EAAU,CACZxrB,KAAM,UACN4hB,SAAUib,EAAejb,EAAS4U,GAAQ,EAC1C1L,kBACAC,gBACA7D,aAAc,IACdhE,UAAW,EACXzG,UAAW,MACRqgB,KACA1wB,GAKP,OAAOhS,KAAK8iC,wBAAwB1G,EAAMhL,EAAQ,IAGtD,OAAOkC,QAAQza,IAAIgqB,GAAoBpP,KAAKmP,EAChD,CACAE,wBAAwB1G,EAAMpqB,GAE1B,OAAO+e,GAAeqL,EADJp8B,KAAKugC,mBAAmBnE,GACH,EAAGpqB,EAC9C,CACAwhB,gBACIoK,IAAUxB,GAASp8B,KAAKugC,mBAAmBnE,GAAMrO,QACrD,CAOAwS,mBAAmBnE,GACf,IAAIpvB,EACJ,MAAM+1B,EAAU,QAAU3G,EAAKhsB,cACzB4yB,EAAsBhjC,KAAKpE,cAAc4d,WAAWupB,GAC1D,OAAOC,GAEDhjC,KAAKpE,cAAc44B,SAAS4H,GAAwD,QAAhDpvB,EAAKhN,KAAKpE,cAAc4d,WAAW9b,eAA4B,IAAPsP,OAAgB,EAASA,EAAGovB,KAAU,EAC5I,CACA6D,aAAarsB,GACTgqB,IAAUxB,IACN,MAAM,KAAE19B,GAASsB,KAAKwZ,WAEtB,IAAK4nB,GAAWhF,EAAM19B,EAAMsB,KAAK4/B,kBAC7B,OACJ,MAAM,WAAEnwB,GAAezP,KAAKpE,cACtBylC,EAAYrhC,KAAKugC,mBAAmBnE,GAC1C,GAAI3sB,GAAcA,EAAWrL,OAAQ,CACjC,MAAM,IAAE0B,EAAG,IAAEC,GAAQ0J,EAAWrL,OAAOq8B,UAAUrE,GACjDiF,EAAU/9B,IAAIsQ,EAAMwoB,GAAQzrB,GAAI7K,EAAKC,EAAK,IAC9C,IAER,CAMAk9B,iCACI,IAAIj2B,EACJ,IAAKhN,KAAKpE,cAAc4D,QACpB,OACJ,MAAM,KAAEd,EAAI,gBAAE6iC,GAAoBvhC,KAAKwZ,YACjC,WAAE/J,GAAezP,KAAKpE,cAC5B,IAAKS,EAAYklC,KAAqB9xB,IAAezP,KAAK6/B,YACtD,OAKJ7/B,KAAKwzB,gBAKL,MAAM0P,EAAc,CAAEz+B,EAAG,EAAGC,EAAG,GAC/Bk5B,IAAUxB,IACN,MAAMiF,EAAYrhC,KAAKugC,mBAAmBnE,GAC1C,GAAIiF,EAAW,CACX,MAAMpzB,EAASozB,EAAUvmC,MACzBooC,EAAY9G,GAvjB5B,SAAoBrwB,EAAQD,GACxB,IAAIwB,EAAS,GACb,MAAM61B,EAAehH,GAAWpwB,GAC1Bq3B,EAAejH,GAAWrwB,GAOhC,OANIs3B,EAAeD,EACf71B,EAASgX,GAASxY,EAAOhG,IAAKgG,EAAO/F,IAAMo9B,EAAcp3B,EAAOjG,KAE3Dq9B,EAAeC,IACpB91B,EAASgX,GAASvY,EAAOjG,IAAKiG,EAAOhG,IAAMq9B,EAAct3B,EAAOhG,MAE7DD,EAAM,EAAG,EAAGyH,EACvB,CA4iBoC+1B,CAAW,CAAEv9B,IAAKmI,EAAQlI,IAAKkI,GAAUjO,KAAK6/B,YAAYzD,GAClF,KAKJ,MAAM,kBAAE92B,GAAsBtF,KAAKpE,cAAc4d,WACjDxZ,KAAKpE,cAAc4D,QAAQ2L,MAAMlG,UAAYK,EACvCA,EAAkB,CAAC,EAAG,IACtB,OACqB,QAA1B0H,EAAKyC,EAAWyI,YAAyB,IAAPlL,GAAyBA,EAAGs2B,eAC/D7zB,EAAW8zB,eACXvjC,KAAKqgC,qBAKLzC,IAAUxB,IACN,IAAKgF,GAAWhF,EAAM19B,EAAM,MACxB,OAIJ,MAAM2iC,EAAYrhC,KAAKugC,mBAAmBnE,IACpC,IAAEt2B,EAAG,IAAEC,GAAQ/F,KAAK6/B,YAAYzD,GACtCiF,EAAU/9B,IAAIqN,GAAI7K,EAAKC,EAAKm9B,EAAY9G,IAAO,GAEvD,CACAoH,eACI,IAAIx2B,EACJ,IAAKhN,KAAKpE,cAAc4D,QACpB,OACJggC,GAAoBl8B,IAAItD,KAAKpE,cAAeoE,MAC5C,MAIMyjC,EAAsBluB,GAJZvV,KAAKpE,cAAc4D,QAIkB,eAAgByT,IACjE,MAAM,KAAEvU,EAAI,aAAE2N,GAAe,GAASrM,KAAKwZ,WAC3C9a,GAAQ2N,GAAgBrM,KAAKjD,MAAMkW,EAAM,IAEvCywB,EAAyB,KAC3B,MAAM,gBAAEnC,GAAoBvhC,KAAKwZ,WAC7Bnd,EAAYklC,KACZvhC,KAAK6/B,YAAc7/B,KAAKyhC,wBAC5B,GAEE,WAAEhyB,GAAezP,KAAKpE,cACtB+nC,EAA4Bl0B,EAAWoD,iBAAiB,UAAW6wB,GACrEj0B,IAAeA,EAAWrL,SACC,QAA1B4I,EAAKyC,EAAWyI,YAAyB,IAAPlL,GAAyBA,EAAGs2B,eAC/D7zB,EAAW8zB,gBAEfG,IAKA,MAAME,EAAqBnxB,GAAY6B,OAAQ,UAAU,IAAMtU,KAAKijC,mCAK9DY,EAA2Bp0B,EAAWoD,iBAAiB,aAAa,EAAIkV,QAAO+b,uBAC7E9jC,KAAK2/B,YAAcmE,IACnBlG,IAAUxB,IACN,MAAMvI,EAAc7zB,KAAKugC,mBAAmBnE,GACvCvI,IAEL7zB,KAAKw8B,YAAYJ,IAASrU,EAAMqU,GAAMK,UACtC5I,EAAYvwB,IAAIuwB,EAAY/4B,MAAQitB,EAAMqU,GAAMK,WAAU,IAE9Dz8B,KAAKpE,cAAcuE,SAE1B,IACD,MAAO,KACHyjC,IACAH,IACAE,IACAE,SAAoFA,GAA0B,CAEtH,CACArqB,WACI,MAAMtc,EAAQ8C,KAAKpE,cAAc4d,YAC3B,KAAE9a,GAAO,EAAK,kBAAEgiC,GAAoB,EAAK,gBAAEP,GAAkB,EAAK,gBAAEoB,GAAkB,EAAK,YAAElE,EAAcF,GAAc,aAAEsF,GAAe,GAAUvlC,EAC1J,MAAO,IACAA,EACHwB,OACAgiC,oBACAP,kBACAoB,kBACAlE,cACAoF,eAER,EAEJ,SAASrB,GAAWN,EAAWpiC,EAAMkhC,GACjC,SAAkB,IAATlhC,GAAiBA,IAASoiC,GACT,OAArBlB,GAA6BA,IAAqBkB,EAC3D,CAyEA,MAAMpiC,GAAO,CACTI,IAAKgb,IA5BT,UAAuB,MAAEiqB,EAAK,WAAEC,EAAU,SAAEC,EAAQ,kBAAEC,EAAiB,cAAEtoC,IACrE,MAAMuoC,EAAeJ,GAASC,GAAcC,GAAYC,EAClDhE,EAAalmC,EAAMuF,OAAO,OAC1B,mBAAElE,GAAuBrB,EAAM2B,WAAWR,GAC1Cm/B,EAAW,CACboB,eAAgBwI,EAChBnJ,QAASiJ,EACThJ,OAAQ+I,EACRzI,MAAO,CAACroB,EAAOqD,KACX4pB,EAAW1gC,QAAU,KACrBykC,GAAYA,EAAShxB,EAAOqD,EAAK,GAGzCtc,EAAMkC,WAAU,KACe,OAAvBgkC,EAAW1gC,SACX0gC,EAAW1gC,QAAQo8B,eAAetB,EACtC,IAOJ9kB,GAAgB5Z,EAAe,cAAeuoC,GAL9C,SAAuBlxB,GACnBitB,EAAW1gC,QAAU,IAAI66B,GAAWpnB,EAAOqnB,EAAU,CACjDj/B,sBAER,GAEAub,IAAiB,IAAMspB,EAAW1gC,SAAW0gC,EAAW1gC,QAAQ67B,OACpE,IAII38B,KAAMob,IAnDV,SAAiB5c,GACb,MAAQknC,aAAcC,EAAiB,cAAEzoC,GAAkBsB,EACrDknC,EAAe/kC,GAAY,IAAM,IAAIogC,GAA0B7jC,KAGrE5B,EAAMkC,WAAU,IAAMmoC,GAAqBA,EAAkBrK,UAAUoK,IAAe,CAACA,EAAcC,IAErGrqC,EAAMkC,WAAU,IAAMkoC,EAAaZ,gBAAgB,CAACY,GACxD,KA8CA,SAASE,GAAcvqC,GACnB,MAAwB,iBAAVA,GAAsBA,EAAMsK,WAAW,SACzD,CAUA,MAAMkgC,GAAmB,uDAQzB,MAAMC,GAAW,EACjB,SAASC,GAAiBjlC,EAAS+P,EAASm1B,EAAQ,GAChDzqC,EAAU6kB,UAAU4lB,GAASF,GAAU,yDAAyDhlC,yDAChG,MAAOmlC,EAAO/qB,GAVlB,SAA0Bpa,GACtB,MAAMogB,EAAQ2kB,GAAiBK,KAAKplC,GACpC,IAAKogB,EACD,MAAO,CAAC,GACZ,MAAO,CAAE+kB,EAAO/qB,GAAYgG,EAC5B,MAAO,CAAC+kB,EAAO/qB,EACnB,CAI8BirB,CAAiBrlC,GAE3C,IAAKmlC,EACD,OAEJ,MAAM7yB,EAAWwC,OAAOwwB,iBAAiBv1B,GAASw1B,iBAAiBJ,GACnE,OAAI7yB,EACOA,EAASrM,OAEX6+B,GAAc1qB,GAEZ6qB,GAAiB7qB,EAAUrK,EAASm1B,EAAQ,GAG5C9qB,CAEf,CA6CA,MAAMorB,GAAiB,IAAI9gC,IAAI,CAC3B,QACA,SACA,MACA,OACA,QACA,SACA,IACA,MAEE+gC,GAAmB/lC,GAAQ8lC,GAAe3hC,IAAInE,GAC9CgmC,GAAoBp5B,GACflS,OAAOa,KAAKqR,GAAQ1O,KAAK6nC,IAE9BE,GAAsB,CAACprC,EAAOwoB,KAGhCxoB,EAAMuJ,IAAIif,GAAI,GACdxoB,EAAMuJ,IAAIif,EAAG,EAEX6iB,GAAiBzoC,GAAMA,IAAMsJ,GAAUtJ,IAAMyK,GACnD,IAAIi+B,IACJ,SAAWA,GACPA,EAA4B,MAAI,QAChCA,EAA6B,OAAI,SACjCA,EAA2B,KAAI,OAC/BA,EAA4B,MAAI,QAChCA,EAA0B,IAAI,MAC9BA,EAA6B,OAAI,QACpC,CAPD,CAOGA,KAAyBA,GAAuB,CAAC,IACpD,MAAMC,GAAmB,CAACC,EAAQC,IAAQr/B,WAAWo/B,EAAOv+B,MAAM,MAAMw+B,IAClEC,GAAyB,CAACC,EAAMC,IAAS,CAACC,GAAS3gC,gBACrD,GAAkB,SAAdA,IAAyBA,EACzB,OAAO,EACX,MAAM4gC,EAAW5gC,EAAU2a,MAAM,sBACjC,GAAIimB,EACA,OAAOP,GAAiBO,EAAS,GAAIF,GAEpC,CACD,MAAMJ,EAAStgC,EAAU2a,MAAM,oBAC/B,OAAI2lB,EACOD,GAAiBC,EAAO,GAAIG,GAG5B,CAEf,GAEExgC,GAAgB,IAAIhB,IAAI,CAAC,IAAK,IAAK,MACnC4hC,GAAgC9hC,EAAmBsf,QAAQpkB,IAASgG,GAAc7B,IAAInE,KAe5F,MAAM6mC,GAAmB,CAErB19B,MAAO,EAAG5D,MAAOyE,cAAc,IAAKF,eAAe,OAAUvE,EAAEsB,IAAMtB,EAAEqB,IAAMK,WAAW+C,GAAe/C,WAAW6C,GAClHT,OAAQ,EAAG7D,MAAOqE,aAAa,IAAKE,gBAAgB,OAAUvE,EAAEqB,IAAMrB,EAAEoB,IAAMK,WAAW4C,GAAc5C,WAAW8C,GAClHP,IAAK,CAACk9B,GAASl9B,SAAUvC,WAAWuC,GACpCG,KAAM,CAAC+8B,GAAS/8B,UAAW1C,WAAW0C,GACtCD,OAAQ,EAAGlE,MAAOgE,SAAUvC,WAAWuC,IAAQhE,EAAEqB,IAAMrB,EAAEoB,KACzD6C,MAAO,EAAGlE,MAAOoE,UAAW1C,WAAW0C,IAASpE,EAAEsB,IAAMtB,EAAEqB,KAE1DrB,EAAGghC,GAAuB,EAAG,IAC7B/gC,EAAG+gC,GAAuB,EAAG,KA+B3BO,GAAmC,CAACpqC,EAAekQ,EAAQwB,EAAS,CAAC,EAAGyE,EAAgB,CAAC,KAC3FjG,EAAS,IAAKA,GACdiG,EAAgB,IAAKA,GACrB,MAAMk0B,EAAuBrsC,OAAOa,KAAKqR,GAAQwX,OAAO2hB,IAGxD,IAAIiB,EAAyB,GACzBC,GAAsC,EAC1C,MAAMC,EAAuB,GA4E7B,GA3EAH,EAAqBvrC,SAASwE,IAC1B,MAAMnF,EAAQ6B,EAAc44B,SAASt1B,GACrC,IAAKtD,EAAc24B,SAASr1B,GACxB,OACJ,IAAImlB,EAAO/W,EAAOpO,GACdmnC,EAAWrS,GAAuB3P,GACtC,MAAM9B,EAAKzW,EAAO5M,GAClB,IAAIonC,EAKJ,GAAI71B,GAAkB8R,GAAK,CACvB,MAAMgkB,EAAehkB,EAAGtb,OAClBu/B,EAAsB,OAAVjkB,EAAG,GAAc,EAAI,EACvC8B,EAAO9B,EAAGikB,GACVH,EAAWrS,GAAuB3P,GAClC,IAAK,IAAItI,EAAIyqB,EAAWzqB,EAAIwqB,EAAcxqB,IACjCuqB,EAMDrsC,EAAU6kB,UAAUkV,GAAuBzR,EAAGxG,MAAQuqB,EAAQ,2CAL9DA,EAAStS,GAAuBzR,EAAGxG,IACnC9hB,EAAU6kB,UAAUwnB,IAAWD,GAC1BjB,GAAciB,IAAajB,GAAckB,GAAU,gEAMpE,MAEIA,EAAStS,GAAuBzR,GAEpC,GAAI8jB,IAAaC,EAGb,GAAIlB,GAAciB,IAAajB,GAAckB,GAAS,CAClD,MAAM9mC,EAAUzF,EAAMe,MACC,iBAAZ0E,GACPzF,EAAMuJ,IAAI6C,WAAW3G,IAEP,iBAAP+iB,EACPzW,EAAO5M,GAAOiH,WAAWoc,GAEpB3lB,MAAMC,QAAQ0lB,IAAO+jB,IAAWl/B,KACrC0E,EAAO5M,GAAOqjB,EAAGnB,IAAIjb,YAE7B,MACUkgC,aAA2C,EAASA,EAASphC,aAClEqhC,aAAuC,EAASA,EAAOrhC,aAC9C,IAATof,GAAqB,IAAP9B,GAGF,IAAT8B,EACAtqB,EAAMuJ,IAAIgjC,EAAOrhC,UAAUof,IAG3BvY,EAAO5M,GAAOmnC,EAASphC,UAAUsd,IAMhC4jB,IACDD,EA9HpB,SAAyCtqC,GACrC,MAAM6qC,EAAoB,GAW1B,OAVAX,GAA8BprC,SAASwE,IACnC,MAAMnF,EAAQ6B,EAAc44B,SAASt1B,QACvBtB,IAAV7D,IACA0sC,EAAkB96B,KAAK,CAACzM,EAAKnF,EAAMe,QACnCf,EAAMuJ,IAAIpE,EAAImF,WAAW,SAAW,EAAI,GAC5C,IAGAoiC,EAAkBx/B,QAClBrL,EAAcuE,SACXsmC,CACX,CAkHwBC,CAAgC9qC,GACpCuqC,GAAsC,GAE1CC,EAAqBz6B,KAAKzM,GAC1B6S,EAAc7S,QACatB,IAAvBmU,EAAc7S,GACR6S,EAAc7S,GACd4M,EAAO5M,GACjBimC,GAAoBprC,EAAOwoB,GAEnC,IAEA6jB,EAAqBn/B,OAAQ,CAC7B,MAAM0/B,EAAUP,EAAqB1iC,QAAQ,WAAa,EACpD4Q,OAAOsyB,YACP,KACAC,EArHmB,EAAC/6B,EAAQlQ,EAAekrC,KACrD,MAAMC,EAAanrC,EAAcwjC,qBAC3B7vB,EAAU3T,EAAc4D,QACxBwnC,EAAuBlC,iBAAiBv1B,IACxC,QAAE03B,GAAYD,EACd15B,EAAS,CAAC,EAGA,SAAZ25B,GACArrC,EAAcsrC,eAAe,UAAWp7B,EAAOm7B,SAAW,SAK9DH,EAAYpsC,SAASwE,IACjBoO,EAAOpO,GAAO6mC,GAAiB7mC,GAAK6nC,EAAYC,EAAqB,IAGzEprC,EAAcuE,SACd,MAAMgnC,EAAavrC,EAAcwjC,qBAQjC,OAPA0H,EAAYpsC,SAASwE,IAGjB,MAAMnF,EAAQ6B,EAAc44B,SAASt1B,GACrCimC,GAAoBprC,EAAOuT,EAAOpO,IAClC4M,EAAO5M,GAAO6mC,GAAiB7mC,GAAKioC,EAAYH,EAAqB,IAElEl7B,CAAM,EA0Fes7B,CAAyBt7B,EAAQlQ,EAAewqC,GAaxE,OAXIF,EAAuBj/B,QACvBi/B,EAAuBxrC,SAAQ,EAAEwE,EAAKnF,MAClC6B,EAAc44B,SAASt1B,GAAKoE,IAAIvJ,EAAM,IAI9C6B,EAAcuE,SAEVrE,GAAyB,OAAZ6qC,GACbryB,OAAO+yB,SAAS,CAAE3+B,IAAKi+B,IAEpB,CAAE76B,OAAQ+6B,EAAiB90B,gBACtC,CAEI,MAAO,CAAEjG,SAAQiG,gBACrB,EAmBJ,MAAMu1B,GAAkB,CAAC1rC,EAAekQ,EAAQwB,EAAQyE,KACpD,MAAMD,EA7QV,SAA6BlW,MAAoBkQ,GAAUiG,GACvD,MAAMxC,EAAU3T,EAAc4D,QAC9B,KAAM+P,aAAmBg4B,SACrB,MAAO,CAAEz7B,SAAQiG,iBAGjBA,IACAA,EAAgB,IAAKA,IAGzBnW,EAAc4V,OAAO9W,SAASX,IAC1B,MAAMyF,EAAUzF,EAAMe,MACtB,IAAKwpC,GAAc9kC,GACf,OACJ,MAAMsS,EAAW2yB,GAAiBjlC,EAAS+P,GACvCuC,GACA/X,EAAMuJ,IAAIwO,EAAS,IAI3B,IAAK,MAAM5S,KAAO4M,EAAQ,CACtB,MAAMtM,EAAUsM,EAAO5M,GACvB,IAAKolC,GAAc9kC,GACf,SACJ,MAAMsS,EAAW2yB,GAAiBjlC,EAAS+P,GACtCuC,IAGLhG,EAAO5M,GAAO4S,EAIVC,QAAwCnU,IAAvBmU,EAAc7S,KAC/B6S,EAAc7S,GAAOM,GAE7B,CACA,MAAO,CAAEsM,SAAQiG,gBACrB,CAwOqBy1B,CAAoB5rC,EAAekQ,EAAQiG,GAG5D,OAdJ,SAAwBnW,EAAekQ,EAAQwB,EAAQyE,GACnD,OAAOmzB,GAAiBp5B,GAClBk6B,GAAiCpqC,EAAekQ,EAAQwB,EAAQyE,GAChE,CAAEjG,SAAQiG,gBACpB,CAUW01B,CAAe7rC,EAFtBkQ,EAASgG,EAAShG,OAE2BwB,EAD7CyE,EAAgBD,EAASC,cAC0C,EAIjE21B,GAAuB,CAAEloC,QAAS,MAClCmoC,GAA2B,CAAEnoC,SAAS,GAE5C,SAASooC,KAEL,GADAD,GAAyBnoC,SAAU,EAC9B1D,EAEL,GAAIwY,OAAOuzB,WAAY,CACnB,MAAMC,EAAmBxzB,OAAOuzB,WAAW,4BACrCE,EAA8B,IAAOL,GAAqBloC,QAAUsoC,EAAiBE,QAC3FF,EAAiBG,YAAYF,GAC7BA,GACJ,MAEIL,GAAqBloC,SAAU,CAEvC,CA2DA,MAAM0oC,GAAetuC,OAAOa,KAAK6D,GAC3B6pC,GAAcD,GAAajhC,OAC3BmhC,GAAoB,CACtB,iBACA,oBACA,SACA,UACA,sBACA,gBACA,uBACA,2BAMJ,MAAMC,GACFxW,aAAY,OAAEvwB,EAAM,MAAEpE,EAAK,oBAAEuE,EAAmB,YAAEJ,GAAgB6J,EAAU,CAAC,GAKzElL,KAAKR,QAAU,KAIfQ,KAAKI,SAAW,IAAI8D,IAIpBlE,KAAK1C,eAAgB,EACrB0C,KAAK/C,uBAAwB,EAQ7B+C,KAAKo3B,mBAAqB,KAM1Bp3B,KAAKwR,OAAS,IAAIrO,IAKlBnD,KAAKub,WAAY,EAKjBvb,KAAKsoC,mBAAqB,IAAInlC,IAM9BnD,KAAKuoC,iBAAmB,CAAC,EAIzBvoC,KAAKwoC,OAAS,CAAC,EAMfxoC,KAAKyoC,uBAAyB,CAAC,EAC/BzoC,KAAK0oC,aAAe,IAAM1oC,KAAKiC,OAAO,SAAUjC,KAAKiL,cACrDjL,KAAKG,OAAS,KACLH,KAAKR,UAEVQ,KAAK2oC,eACL3oC,KAAK4oC,eAAe5oC,KAAKR,QAASQ,KAAK8P,YAAa9P,KAAK9C,MAAMiO,MAAOnL,KAAKyP,YAAW,EAE1FzP,KAAK6oC,eAAiB,IAAMxc,GAAKlsB,OAAOH,KAAKG,QAAQ,GAAO,GAC5D,MAAM,aAAE8K,EAAY,YAAE6E,GAAgBzO,EACtCrB,KAAKiL,aAAeA,EACpBjL,KAAK8oC,WAAa,IAAK79B,GACvBjL,KAAK+oC,cAAgB7rC,EAAMQ,QAAU,IAAKuN,GAAiB,CAAC,EAC5DjL,KAAK8P,YAAcA,EACnB9P,KAAKsB,OAASA,EACdtB,KAAK9C,MAAQA,EACb8C,KAAK0kC,MAAQpjC,EAASA,EAAOojC,MAAQ,EAAI,EACzC1kC,KAAKyB,oBAAsBA,EAC3BzB,KAAKkL,QAAUA,EACflL,KAAK/C,sBAAwBA,EAAsBC,GACnD8C,KAAK1C,cAAgBA,EAAcJ,GAC/B8C,KAAK1C,gBACL0C,KAAKg1B,gBAAkB,IAAI9wB,KAE/BlE,KAAKg5B,uBAAyBz7B,QAAQ+D,GAAUA,EAAO9B,SAWvD,MAAM,WAAEw3B,KAAegS,GAAwBhpC,KAAKmQ,4BAA4BjT,GAChF,IAAK,MAAMgC,KAAO8pC,EAAqB,CACnC,MAAMjvC,EAAQivC,EAAoB9pC,QACRtB,IAAtBqN,EAAa/L,IAAsBoF,EAAcvK,KACjDA,EAAMuJ,IAAI2H,EAAa/L,IAAM,GACzBw2B,GAAwBsB,IACxBA,EAAWxf,IAAItY,GAG3B,CACJ,CAQAiR,4BAA4B84B,GACxB,MAAO,CAAC,CACZ,CACAxmC,MAAMD,GACF,IAAIwK,EACJhN,KAAKR,QAAUgD,EACXxC,KAAKyP,YACLzP,KAAKyP,WAAWhN,MAAMD,GAEtBxC,KAAKsB,QAAUtB,KAAK1C,gBAAkB0C,KAAK/C,wBAC3C+C,KAAKkpC,sBAA+C,QAAtBl8B,EAAKhN,KAAKsB,cAA2B,IAAP0L,OAAgB,EAASA,EAAGm8B,gBAAgBnpC,OAE5GA,KAAKwR,OAAO9W,SAAQ,CAACX,EAAOmF,IAAQc,KAAKopC,kBAAkBlqC,EAAKnF,KAC3D4tC,GAAyBnoC,SAC1BooC,KAEJ5nC,KAAKo3B,mBAC4B,UAA7Bp3B,KAAKyB,sBAE8B,WAA7BzB,KAAKyB,qBAEDimC,GAAqBloC,SAC/BQ,KAAKsB,QACLtB,KAAKsB,OAAOlB,SAASoX,IAAIxX,MAC7BA,KAAKC,SAASD,KAAK9C,MACvB,CACAwF,UACI,IAAIsK,EAAI4U,EAAIynB,EACe,QAA1Br8B,EAAKhN,KAAKyP,kBAA+B,IAAPzC,GAAyBA,EAAGtK,UAC/D6pB,GAAWsB,OAAO7tB,KAAK0oC,cACvBnc,GAAWpsB,OAAOH,KAAKG,QACvBH,KAAKsoC,mBAAmB5tC,SAAS48B,GAAWA,MACN,QAArC1V,EAAK5hB,KAAKkpC,6BAA0C,IAAPtnB,GAAyBA,EAAGnlB,KAAKuD,MACxD,QAAtBqpC,EAAKrpC,KAAKsB,cAA2B,IAAP+nC,GAAyBA,EAAGjpC,SAASsY,OAAO1Y,MAC3E,IAAK,MAAMd,KAAOc,KAAKwoC,OACnBxoC,KAAKwoC,OAAOtpC,GAAK+yB,QAErBjyB,KAAKR,QAAU,IACnB,CACA4pC,kBAAkBlqC,EAAKnF,GACnB,MAAMuvC,EAAmBrlC,EAAeZ,IAAInE,GACtCqqC,EAAiBxvC,EAAMg5B,UAAUyW,IACnCxpC,KAAKiL,aAAa/L,GAAOsqC,EACzBxpC,KAAK9C,MAAMyxB,UACPtC,GAAKwB,OAAO7tB,KAAK0oC,cAAc,GAAO,GACtCY,GAAoBtpC,KAAKyP,aACzBzP,KAAKyP,WAAWg6B,kBAAmB,EACvC,IAEEC,EAAwB3vC,EAAMm5B,gBAAgBlzB,KAAK6oC,gBACzD7oC,KAAKsoC,mBAAmBhlC,IAAIpE,GAAK,KAC7BqqC,IACAG,GAAuB,GAE/B,CACAnS,iBAAiBoS,GAIb,OAAK3pC,KAAKR,SACLQ,KAAK4pC,0BACN5pC,KAAK4F,OAAS+jC,EAAM/jC,KAEjB5F,KAAK4pC,yBAAyB5pC,KAAKR,QAASmqC,EAAMnqC,SAD9C,CAEf,CACAR,aAAa6qC,EAAeC,EAAUppC,EAAmBU,EAAc2oC,EAA2B3nC,GAC9F,MAAMnD,EAAW,GAKL,eAARgY,IAAwBvW,GAAqBopC,GAC7C7vC,EAAU6kB,WAAU,EAAO,oJAE/B,IAAK,IAAI/C,EAAI,EAAGA,EAAIosB,GAAapsB,IAAK,CAClC,MAAM1e,EAAO6qC,GAAansB,IACpB,UAAE1d,EAAS,UAAEe,GAAcd,EAAmBjB,GAMhDgB,EAAUwrC,IAAkBzqC,GAC5BH,EAAS0M,KAAK3R,EAAMqI,cAAcjD,EAAW,CACzCF,IAAK7B,KACFwsC,EACHjuC,cAAeoE,OAG3B,CACA,IAAKA,KAAKyP,YAAcs6B,EAA2B,CAC/C/pC,KAAKyP,WAAa,IAAIs6B,EAA0B3oC,EAAcpB,KAAKiL,aAAcjL,KAAKsB,QAAUtB,KAAKsB,OAAOmO,YAC5G,MAAM,SAAEvO,EAAQ,OAAEkD,EAAM,KAAE1F,EAAI,gBAAE6iC,EAAe,aAAEyI,GAAiBH,EAClE7pC,KAAKyP,WAAWw6B,WAAW,CACvB/oC,WACAkD,SACA8lC,oBAAqB3sC,QAAQmB,IACxB6iC,GAAmBllC,EAAYklC,GACpC3lC,cAAeoE,KACf6oC,eAAgB,IAAM7oC,KAAK6oC,iBAQ3BsB,cAAiC,iBAAX/lC,EAAsBA,EAAS,OACrDgmC,uBAAwBhoC,EACxB4nC,gBAER,CACA,OAAO/qC,CACX,CACA0pC,eACI3oC,KAAKqqC,MAAMrqC,KAAK8P,YAAa9P,KAAKiL,aAAcjL,KAAKkL,QAASlL,KAAK9C,MACvE,CAMAkiC,qBACI,OAAOp/B,KAAKR,QACNQ,KAAKsqC,2BAA2BtqC,KAAKR,QAASQ,KAAK9C,OACnDygC,IACV,CACA4M,eAAerrC,GACX,OAAOc,KAAKiL,aAAa/L,EAC7B,CACAgoC,eAAehoC,EAAKnF,GAChBiG,KAAKiL,aAAa/L,GAAOnF,CAC7B,CAQA46B,qBAAqB7oB,EAAQ0+B,GAAY,GACrC,OAAOxqC,KAAKyqC,iCAAiC3+B,EAAQ9L,KAAK9C,MAAOstC,EACrE,CAKAvqC,SAAS/C,IACDA,EAAMoI,mBAAqBtF,KAAK9C,MAAMoI,oBACtCtF,KAAK6oC,iBAET7oC,KAAK9C,MAAQA,EAIb,IAAK,IAAI6e,EAAI,EAAGA,EAAIqsB,GAAkBnhC,OAAQ8U,IAAK,CAC/C,MAAM7c,EAAMkpC,GAAkBrsB,GAC1B/b,KAAKyoC,uBAAuBvpC,KAC5Bc,KAAKyoC,uBAAuBvpC,YACrBc,KAAKyoC,uBAAuBvpC,IAEvC,MAAMgV,EAAWhX,EAAM,KAAOgC,GAC1BgV,IACAlU,KAAKyoC,uBAAuBvpC,GAAOc,KAAK0qC,GAAGxrC,EAAKgV,GAExD,CACAlU,KAAKuoC,iBA3Vb,SAAqCh5B,EAASqM,EAAMC,GAChD,MAAM,WAAEmb,GAAepb,EACvB,IAAK,MAAM1c,KAAO0c,EAAM,CACpB,MAAM+uB,EAAY/uB,EAAK1c,GACjB0rC,EAAY/uB,EAAK3c,GACvB,GAAIoF,EAAcqmC,GAKdp7B,EAAQklB,SAASv1B,EAAKyrC,GAClBjV,GAAwBsB,IACxBA,EAAWxf,IAAItY,QAUlB,GAAIoF,EAAcsmC,GAKnBr7B,EAAQklB,SAASv1B,EAAK20B,GAAY8W,IAC9BjV,GAAwBsB,IACxBA,EAAWM,OAAOp4B,QAGrB,GAAI0rC,IAAcD,EAMnB,GAAIp7B,EAAQglB,SAASr1B,GAAM,CACvB,MAAM2rC,EAAgBt7B,EAAQilB,SAASt1B,IAEtC2rC,EAAc/X,aAAe+X,EAAcvnC,IAAIqnC,EACpD,KACK,CACD,MAAMnB,EAAcj6B,EAAQg7B,eAAerrC,GAC3CqQ,EAAQklB,SAASv1B,EAAK20B,QAA4Bj2B,IAAhB4rC,EAA4BA,EAAcmB,GAChF,CAER,CAEA,IAAK,MAAMzrC,KAAO2c,OACIje,IAAdge,EAAK1c,IACLqQ,EAAQu7B,YAAY5rC,GAE5B,OAAO0c,CACX,CAoSgCmvB,CAA4B/qC,KAAMA,KAAKmQ,4BAA4BjT,GAAQ8C,KAAKuoC,iBAC5G,CACA/uB,WACI,OAAOxZ,KAAK9C,KAChB,CAIA63B,WAAW13B,GACP,IAAI2P,EACJ,OAAsC,QAA9BA,EAAKhN,KAAK9C,MAAMM,gBAA6B,IAAPwP,OAAgB,EAASA,EAAG3P,EAC9E,CAIAylB,uBACI,OAAO9iB,KAAK9C,MAAM8U,UACtB,CACAivB,wBACI,OAAOjhC,KAAK9C,MAAM7B,kBACtB,CACA2vC,wBACI,IAAIh+B,EACJ,OAAOhN,KAAK1C,cAAgB0C,KAA8B,QAAtBgN,EAAKhN,KAAKsB,cAA2B,IAAP0L,OAAgB,EAASA,EAAGg+B,uBAClG,CACAzS,kBAAkB0S,GAAgB,GAC9B,IAAIj+B,EAAI4U,EACR,GAAIqpB,EACA,OAA8B,QAAtBj+B,EAAKhN,KAAKsB,cAA2B,IAAP0L,OAAgB,EAASA,EAAGurB,oBACtE,IAAKv4B,KAAK/C,sBAAuB,CAC7B,MAAMU,GAAkC,QAAtBikB,EAAK5hB,KAAKsB,cAA2B,IAAPsgB,OAAgB,EAASA,EAAG2W,sBAAwB,CAAC,EAIrG,YAH2B36B,IAAvBoC,KAAK9C,MAAMQ,UACXC,EAAQD,QAAUsC,KAAK9C,MAAMQ,SAE1BC,CACX,CACA,MAAMA,EAAU,CAAC,EACjB,IAAK,IAAIoe,EAAI,EAAGA,EAAImvB,GAAiBnvB,IAAK,CACtC,MAAM1e,EAAO8tC,GAAapvB,GACpB9d,EAAO+B,KAAK9C,MAAMG,IACpBX,EAAeuB,KAAkB,IAATA,KACxBN,EAAQN,GAAQY,EAExB,CACA,OAAON,CACX,CAIAwrC,gBAAgBzyB,GACZ,IAAI1J,EACJ,MAAMo+B,EAAqBprC,KAAKgrC,wBAChC,GAAII,EAEA,OAD8C,QAA7Cp+B,EAAKo+B,EAAmBpW,uBAAoC,IAAPhoB,GAAyBA,EAAGwK,IAAId,GAC/E,IAAM00B,EAAmBpW,gBAAgBtc,OAAOhC,EAE/D,CAIA+d,SAASv1B,EAAKnF,GAENiG,KAAKu0B,SAASr1B,IACdc,KAAK8qC,YAAY5rC,GACrBc,KAAKwR,OAAOlO,IAAIpE,EAAKnF,GACrBiG,KAAKiL,aAAa/L,GAAOnF,EAAMe,MAC/BkF,KAAKopC,kBAAkBlqC,EAAKnF,EAChC,CAIA+wC,YAAY5rC,GACR,IAAI8N,EACJhN,KAAKwR,OAAOkH,OAAOxZ,GACyB,QAA3C8N,EAAKhN,KAAKsoC,mBAAmBxtC,IAAIoE,UAAyB,IAAP8N,GAAyBA,IAC7EhN,KAAKsoC,mBAAmB5vB,OAAOxZ,UACxBc,KAAKiL,aAAa/L,GACzBc,KAAKqrC,2BAA2BnsC,EAAKc,KAAK8P,YAC9C,CAIAykB,SAASr1B,GACL,OAAOc,KAAKwR,OAAOnO,IAAInE,EAC3B,CAKAs1B,SAASt1B,EAAKkkB,GACV,GAAIpjB,KAAK9C,MAAMsU,QAAUxR,KAAK9C,MAAMsU,OAAOtS,GACvC,OAAOc,KAAK9C,MAAMsU,OAAOtS,GAE7B,IAAInF,EAAQiG,KAAKwR,OAAO1W,IAAIoE,GAK5B,YAJctB,IAAV7D,QAAwC6D,IAAjBwlB,IACvBrpB,EAAQ85B,GAAYzQ,GACpBpjB,KAAKy0B,SAASv1B,EAAKnF,IAEhBA,CACX,CAMAs7B,UAAUn2B,GACN,YAAkCtB,IAA3BoC,KAAKiL,aAAa/L,IAAuBc,KAAKR,QAE/CQ,KAAKsrC,sBAAsBtrC,KAAKR,QAASN,EAAKc,KAAKkL,SADnDlL,KAAKiL,aAAa/L,EAE5B,CAKAo2B,cAAcp2B,EAAKnF,GACfiG,KAAK8oC,WAAW5pC,GAAOnF,CAC3B,CAKA6/B,cAAc16B,GACV,IAAI8N,EACJ,MAAM,QAAEtP,GAAYsC,KAAK9C,MACnBquC,EAAsC,iBAAZ7tC,GAA2C,iBAAZA,EACD,QAAvDsP,EAAKqD,GAAwBrQ,KAAK9C,MAAOQ,UAA6B,IAAPsP,OAAgB,EAASA,EAAG9N,QAC5FtB,EAIN,GAAIF,QAAgCE,IAArB2tC,EACX,OAAOA,EAMX,MAAMz/B,EAAS9L,KAAKwrC,uBAAuBxrC,KAAK9C,MAAOgC,GACvD,YAAetB,IAAXkO,GAAyBxH,EAAcwH,QAMRlO,IAA5BoC,KAAK+oC,cAAc7pC,SACDtB,IAArB2tC,OACE3tC,EACAoC,KAAK8oC,WAAW5pC,GARX4M,CASf,CACA4+B,GAAGh4B,EAAW2D,GAIV,OAHKrW,KAAKwoC,OAAO91B,KACb1S,KAAKwoC,OAAO91B,GAAa,IAAIkf,IAE1B5xB,KAAKwoC,OAAO91B,GAAW8E,IAAInB,EACtC,CACApU,OAAOyQ,KAAc+4B,GACjB,IAAIz+B,EAC8B,QAAjCA,EAAKhN,KAAKwoC,OAAO91B,UAA+B,IAAP1F,GAAyBA,EAAG/K,UAAUwpC,EACpF,EAEJ,MAAMN,GAAe,CAAC,aAAcxT,IAC9BuT,GAAkBC,GAAalkC,OAErC,MAAMykC,WAAyBrD,GAC3BuB,yBAAyB9kC,EAAGC,GAMxB,OAAsC,EAA/BD,EAAE6mC,wBAAwB5mC,GAAS,GAAK,CACnD,CACAymC,uBAAuBtuC,EAAOgC,GAC1B,IAAI8N,EACJ,OAA8B,QAAtBA,EAAK9P,EAAMiO,aAA0B,IAAP6B,OAAgB,EAASA,EAAG9N,EACtE,CACAmsC,2BAA2BnsC,GAAK,KAAEkM,EAAI,MAAED,WAC7BC,EAAKlM,UACLiM,EAAMjM,EACjB,CACAurC,kCAAiC,WAAEz4B,EAAU,cAAED,KAAkBjG,IAAU,gBAAEI,GAAmB0/B,GAC5F,IAAIt+B,EAASkoB,GAAU1pB,EAAQkG,GAAc,CAAC,EAAGhS,MAYjD,GARIkM,IACI6F,IACAA,EAAgB7F,EAAgB6F,IAChCjG,IACAA,EAASI,EAAgBJ,IACzBwB,IACAA,EAASpB,EAAgBoB,KAE7Bs+B,EAAW,CACX3W,GAAwBj1B,KAAM8L,EAAQwB,GACtC,MAAMyU,EAASulB,GAAgBtnC,KAAM8L,EAAQwB,EAAQyE,GACrDA,EAAgBgQ,EAAOhQ,cACvBjG,EAASiW,EAAOjW,MACpB,CACA,MAAO,CACHkG,aACAD,mBACGjG,EAEX,EAMJ,MAAM+/B,WAA0BH,GAC5BJ,sBAAsB9oC,EAAUtD,GAC5B,GAAI+E,EAAeZ,IAAInE,GAAM,CACzB,MAAM4sC,EAAc5nB,GAAoBhlB,GACxC,OAAO4sC,GAAcA,EAAYxlC,SAAe,CACpD,CACK,CACD,MAAMylC,GAVUx8B,EAUyB/M,EAT1C8R,OAAOwwB,iBAAiBv1B,IAUjBxV,GAAS2L,EAAgBxG,GACzB6sC,EAAchH,iBAAiB7lC,GAC/B6sC,EAAc7sC,KAAS,EAC7B,MAAwB,iBAAVnF,EAAqBA,EAAM0L,OAAS1L,CACtD,CAfR,IAA4BwV,CAgBxB,CACA+6B,2BAA2B9nC,GAAU,mBAAEnH,IACnC,OAAO+jC,GAAmB58B,EAAUnH,EACxC,CACAgvC,MAAMv6B,EAAa7E,EAAcC,EAAShO,GACtC6N,GAAgB+E,EAAa7E,EAAcC,EAAShO,EAAMoI,kBAC9D,CACA6K,4BAA4BjT,GACxB,OAAO+S,GAA8B/S,EACzC,CACA0rC,eAAepmC,EAAUsN,EAAaN,EAAWC,GAC7CH,GAAW9M,EAAUsN,EAAaN,EAAWC,EACjD,EAGJ,MAAMu8B,WAAyBN,GAC3B7Z,cACIoa,SAASC,WACTlsC,KAAKkO,UAAW,CACpB,CACAs9B,uBAAuBtuC,EAAOgC,GAC1B,OAAOhC,EAAMgC,EACjB,CACAosC,sBAAsB9oC,EAAUtD,GAC5B,IAAI8N,EACJ,OAAI/I,EAAeZ,IAAInE,IACyB,QAAnC8N,EAAKkX,GAAoBhlB,UAAyB,IAAP8N,OAAgB,EAASA,EAAG1G,UAAY,GAEhGpH,EAAO0Q,GAAoBvM,IAAInE,GAA0BA,EAAnBiQ,GAAYjQ,GAC3CsD,EAAS2pC,aAAajtC,GACjC,CACAorC,6BACI,OAAO3M,IACX,CACAxtB,4BAA4BjT,GACxB,OAAOiT,GAA4BjT,EACvC,CACAmtC,MAAMv6B,EAAa7E,EAAcC,EAAShO,GACtCyQ,GAAcmC,EAAa7E,EAAcC,EAASlL,KAAKkO,SAAUhR,EAAMoI,kBAC3E,CACAsjC,eAAepmC,EAAUsN,EAAaN,EAAWC,GAC7CI,GAAUrN,EAAUsN,EAAaN,EAAWC,EAChD,CACAhN,MAAMD,GACFxC,KAAKkO,SAAWA,GAAS1L,EAAS6P,SAClC45B,MAAMxpC,MAAMD,EAChB,EAGJ,MAAM4pC,GAAyB,CAAChtC,EAAW8L,IAChC1H,EAAepE,GAChB,IAAI4sC,GAAiB9gC,EAAS,CAAE/F,4BAA4B,IAC5D,IAAI0mC,GAAkB3gC,EAAS,CAAE/F,4BAA4B,IAGvE,SAASknC,GAAgBC,EAAQlQ,GAC7B,OAAIA,EAAKr2B,MAAQq2B,EAAKt2B,IACX,EACHwmC,GAAUlQ,EAAKr2B,IAAMq2B,EAAKt2B,KAAQ,GAC9C,CAQA,MAAMymC,GAAsB,CACxBC,QAAS,CAACv+B,EAAQw+B,KACd,IAAKA,EAAK3gC,OACN,OAAOmC,EAKX,GAAsB,iBAAXA,EAAqB,CAC5B,IAAI7G,GAAGzD,KAAKsK,GAIR,OAAOA,EAHPA,EAAS9H,WAAW8H,EAK5B,CAOA,MAAO,GAFGo+B,GAAgBp+B,EAAQw+B,EAAK3gC,OAAOrH,OACpC4nC,GAAgBp+B,EAAQw+B,EAAK3gC,OAAOpH,KAC1B,GAItBgoC,GAAW,QACXC,GAAmB,CACrBH,QAAS,CAACv+B,GAAU2+B,YAAWC,sBAC3B,MAAMC,EAAW7+B,EAIX8+B,EAAuB9+B,EAAOxK,SAAS,QACvCupC,EAAe,GACjBD,IACA9+B,EAASA,EAAOoB,QAAQk1B,IAAmB3kB,IACvCotB,EAAarhC,KAAKiU,GACX8sB,OAGf,MAAMO,EAAStrB,GAAQzb,MAAM+H,GAE7B,GAAIg/B,EAAOhmC,OAAS,EAChB,OAAO6lC,EACX,MAAMnnB,EAAWhE,GAAQJ,kBAAkBtT,GACrCV,EAA8B,iBAAd0/B,EAAO,GAAkB,EAAI,EAE7CC,EAASL,EAAgBpoC,EAAE4B,MAAQumC,EAAUnoC,EAC7C0oC,EAASN,EAAgBnoC,EAAE2B,MAAQumC,EAAUloC,EACnDuoC,EAAO,EAAI1/B,IAAW2/B,EACtBD,EAAO,EAAI1/B,IAAW4/B,EAOtB,MAAMC,EAAez8B,GAAIu8B,EAAQC,EAAQ,IAEP,iBAAvBF,EAAO,EAAI1/B,KAClB0/B,EAAO,EAAI1/B,IAAW6/B,GAEQ,iBAAvBH,EAAO,EAAI1/B,KAClB0/B,EAAO,EAAI1/B,IAAW6/B,GAC1B,IAAI3rB,EAASkE,EAASsnB,GACtB,GAAIF,EAAsB,CACtB,IAAIhxB,EAAI,EACR0F,EAASA,EAAOpS,QAAQq9B,IAAU,KAC9B,MAAMW,EAAcL,EAAajxB,GAEjC,OADAA,IACOsxB,CAAW,GAE1B,CACA,OAAO5rB,CAAM,GAIrB,MAAM6rB,WAAiCryC,EAAwB,QAAEmE,UAM7DmuC,oBACI,MAAM,cAAE3xC,EAAa,YAAE4xC,EAAW,kBAAEC,EAAiB,SAAEvsC,GAAalB,KAAK9C,OACnE,WAAEuS,GAAe7T,EACvBiI,EAAkB6pC,IACdj+B,IACI+9B,EAAYG,OACZH,EAAYG,MAAMn2B,IAAI/H,GACtBg+B,GAAqBA,EAAkBhyB,UAAYva,GACnDusC,EAAkBhyB,SAAShM,GAE/BA,EAAWyI,KAAK01B,YAChBn+B,EAAWoD,iBAAiB,qBAAqB,KAC7C7S,KAAKi6B,cAAc,IAEvBxqB,EAAWw6B,WAAW,IACfx6B,EAAWvE,QACdsQ,eAAgB,IAAMxb,KAAKi6B,kBAGnCx6B,EAAsBE,gBAAiB,CAC3C,CACAI,wBAAwB8tC,GACpB,MAAM,iBAAEC,EAAgB,cAAElyC,EAAa,KAAE8C,EAAI,UAAE6c,GAAcvb,KAAK9C,MAC5DuS,EAAa7T,EAAc6T,WACjC,OAAKA,GASLA,EAAW8L,UAAYA,EACnB7c,GACAmvC,EAAUC,mBAAqBA,QACVlwC,IAArBkwC,EACAr+B,EAAWs+B,aAGX/tC,KAAKi6B,eAEL4T,EAAUtyB,YAAcA,IACpBA,EACA9L,EAAWu+B,UAELv+B,EAAWw+B,YAMjB5hB,GAAKsG,YAAW,KACZ,IAAI3lB,GACmC,QAAhCA,EAAKyC,EAAWy+B,kBAA+B,IAAPlhC,OAAgB,EAASA,EAAGmhC,QAAQlnC,SAC/EjH,KAAKi6B,cACT,KAIL,MAnCI,IAoCf,CACA/5B,qBACI,MAAM,WAAEuP,GAAezP,KAAK9C,MAAMtB,cAC9B6T,IACAA,EAAWyI,KAAK01B,aACXn+B,EAAWmhB,kBAAoBnhB,EAAW2+B,UAC3CpuC,KAAKi6B,eAGjB,CACAoU,uBACI,MAAM,cAAEzyC,EAAa,YAAE4xC,EAAaC,kBAAmBa,GAAoBtuC,KAAK9C,OAC1E,WAAEuS,GAAe7T,EACnB6T,IACAA,EAAW8+B,6BACPf,aAAiD,EAASA,EAAYG,QACtEH,EAAYG,MAAMrW,OAAO7nB,IACzB6+B,aAAuD,EAASA,EAAeE,aAC/EF,EAAeE,WAAW/+B,GAEtC,CACAwqB,eACI,MAAM,aAAEA,GAAiBj6B,KAAK9C,MAC9B+8B,SAA4DA,GAChE,CACA95B,SACI,OAAO,IACX,EAOJ,MAAMutC,GAAyB,CAC3B3lC,aAAc,IACPwkC,GACHkC,QAAS,CACL,sBACA,uBACA,yBACA,4BAGRxmC,oBAAqBskC,GACrBrkC,qBAAsBqkC,GACtBnkC,uBAAwBmkC,GACxBpkC,wBAAyBokC,GACzBmC,UAAW/B,IAGTgC,GAAiB,CACnBpwC,cAvBJ,SAAuBrB,GACnB,MAAOqe,EAAW0e,GAAgB3e,KAC5BkyB,EAAcxzC,EAAM2B,WAAWkE,GACrC,OAAQ5E,EAAwB,QAAEoH,cAAcirC,GAA0B,IAAKpwC,EAAOswC,YAAaA,EAAaC,kBAAmBzzC,EAAM2B,WAAW0E,GAA2Bkb,UAAWA,EAAW0e,aAAcA,GACvN,GAiDA,SAAS98B,GAAQknB,EAAM9B,EAAIvQ,EAAa,CAAC,GACrC,MAAMjY,EAAQuK,EAAc+f,GAAQA,EAAOwP,GAAYxP,GAEvD,OADA0M,GAAe,GAAIh3B,EAAOwoB,EAAIvQ,GACvB,CACH+b,KAAM,IAAMh0B,EAAMg0B,OAClB4F,YAAa,IAAM55B,EAAM45B,cAEjC,CAEA,MAAMib,GAAU,CAAC,UAAW,WAAY,aAAc,eAChDC,GAAaD,GAAQ3nC,OACrB6nC,GAAY/0C,GAA2B,iBAAVA,EAAqBoM,WAAWpM,GAASA,EACtEg1C,GAAQh1C,GAA2B,iBAAVA,GAAsBqN,GAAGzD,KAAK5J,GA0C7D,SAASi1C,GAAUx9B,EAAQy9B,GACvB,YAA8BrxC,IAAvB4T,EAAOy9B,GACRz9B,EAAOy9B,GACPz9B,EAAOzJ,YACjB,CAwBA,MAAMmnC,GAAkBC,GAAS,EAAG,GAAKnxB,IACnCoxB,GAAmBD,GAAS,GAAK,IAAMjzB,IAC7C,SAASizB,GAASrpC,EAAKC,EAAKyX,GACxB,OAAQliB,GAEAA,EAAIwK,EACG,EACPxK,EAAIyK,EACG,EACJyX,EAAO8G,GAASxe,EAAKC,EAAKzK,GAEzC,CAOA,SAAS+zC,GAAajT,EAAMkT,GACxBlT,EAAKt2B,IAAMwpC,EAAWxpC,IACtBs2B,EAAKr2B,IAAMupC,EAAWvpC,GAC1B,CAMA,SAASwpC,GAAYhR,EAAKiR,GACtBH,GAAa9Q,EAAI95B,EAAG+qC,EAAU/qC,GAC9B4qC,GAAa9Q,EAAI75B,EAAG8qC,EAAU9qC,EAClC,CAKA,SAAS+qC,GAAiB77B,EAAO6oB,EAAWp2B,EAAOm2B,EAAa4B,GAM5D,OAJAxqB,EAAQsqB,GADRtqB,GAAS6oB,EACiB,EAAIp2B,EAAOm2B,QACpB5+B,IAAbwgC,IACAxqB,EAAQsqB,GAAWtqB,EAAO,EAAIwqB,EAAU5B,IAErC5oB,CACX,CAsBA,SAAS87B,GAAqBtT,EAAMyC,GAAa3/B,EAAK4/B,EAAUC,GAAYzxB,EAAQqiC,IAlBpF,SAAyBvT,EAAMK,EAAY,EAAGp2B,EAAQ,EAAGiH,EAAS,GAAK8wB,EAAUkR,EAAalT,EAAMuT,EAAavT,GACzGj1B,GAAQxD,KAAK84B,KACbA,EAAYt2B,WAAWs2B,GAEvBA,EADyB9rB,GAAIg/B,EAAW7pC,IAAK6pC,EAAW5pC,IAAK02B,EAAY,KAC1CkT,EAAW7pC,KAE9C,GAAyB,iBAAd22B,EACP,OACJ,IAAID,EAAc7rB,GAAI2+B,EAAWxpC,IAAKwpC,EAAWvpC,IAAKuH,GAClD8uB,IAASkT,IACT9S,GAAeC,GACnBL,EAAKt2B,IAAM2pC,GAAiBrT,EAAKt2B,IAAK22B,EAAWp2B,EAAOm2B,EAAa4B,GACrEhC,EAAKr2B,IAAM0pC,GAAiBrT,EAAKr2B,IAAK02B,EAAWp2B,EAAOm2B,EAAa4B,EACzE,CAMIwR,CAAgBxT,EAAMyC,EAAW3/B,GAAM2/B,EAAWC,GAAWD,EAAWE,GAAYF,EAAWx4B,MAAOiH,EAAQqiC,EAClH,CAIA,MAAME,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAK9B,SAASC,GAAoBxR,EAAKM,EAAY2Q,EAAWQ,GACrDN,GAAqBnR,EAAI95B,EAAGo6B,EAAYgR,GAAOL,aAA6C,EAASA,EAAU/qC,EAAGurC,aAA6C,EAASA,EAAUvrC,GAClLirC,GAAqBnR,EAAI75B,EAAGm6B,EAAYiR,GAAON,aAA6C,EAASA,EAAU9qC,EAAGsrC,aAA6C,EAASA,EAAUtrC,EACtL,CAEA,SAASurC,GAAgBloB,GACrB,OAA2B,IAApBA,EAAM0U,WAAmC,IAAhB1U,EAAM1hB,KAC1C,CACA,SAAS6pC,GAAYnoB,GACjB,OAAOkoB,GAAgBloB,EAAMtjB,IAAMwrC,GAAgBloB,EAAMrjB,EAC7D,CACA,SAASyrC,GAAUrrC,EAAGC,GAClB,OAAQD,EAAEL,EAAEqB,MAAQf,EAAEN,EAAEqB,KACpBhB,EAAEL,EAAEsB,MAAQhB,EAAEN,EAAEsB,KAChBjB,EAAEJ,EAAEoB,MAAQf,EAAEL,EAAEoB,KAChBhB,EAAEJ,EAAEqB,MAAQhB,EAAEL,EAAEqB,GACxB,CACA,SAASqqC,GAAY7R,GACjB,OAAOpC,GAAWoC,EAAI95B,GAAK03B,GAAWoC,EAAI75B,EAC9C,CAEA,MAAM2rC,GACFxe,cACI7xB,KAAKmuC,QAAU,EACnB,CACA32B,IAAIi1B,GACAjb,GAAcxxB,KAAKmuC,QAAS1B,GAC5BA,EAAK5D,gBACT,CACAvR,OAAOmV,GAKH,GAJA9a,GAAW3xB,KAAKmuC,QAAS1B,GACrBA,IAASzsC,KAAKswC,WACdtwC,KAAKswC,cAAW1yC,GAEhB6uC,IAASzsC,KAAKuwC,KAAM,CACpB,MAAMD,EAAWtwC,KAAKmuC,QAAQnuC,KAAKmuC,QAAQlnC,OAAS,GAChDqpC,GACAtwC,KAAKguC,QAAQsC,EAErB,CACJ,CACArC,SAASxB,GACL,MAAM+D,EAAcxwC,KAAKmuC,QAAQsC,WAAWC,GAAWjE,IAASiE,IAChE,GAAoB,IAAhBF,EACA,OAAO,EAIX,IAAIF,EACJ,IAAK,IAAIv0B,EAAIy0B,EAAaz0B,GAAK,EAAGA,IAAK,CACnC,MAAM20B,EAAS1wC,KAAKmuC,QAAQpyB,GAC5B,IAAyB,IAArB20B,EAAOn1B,UAAqB,CAC5B+0B,EAAWI,EACX,KACJ,CACJ,CACA,QAAIJ,IACAtwC,KAAKguC,QAAQsC,IACN,EAKf,CACAtC,QAAQvB,EAAMkE,GACV,IAAI3jC,EACJ,MAAMsjC,EAAWtwC,KAAKuwC,KACtB,GAAI9D,IAAS6D,IAEbtwC,KAAKswC,SAAWA,EAChBtwC,KAAKuwC,KAAO9D,EACZA,EAAKmE,OACDN,GAAU,CACVA,EAAS9tC,UAAY8tC,EAASzH,iBAC9B4D,EAAK5D,iBACL4D,EAAKoE,WAAaP,EACdK,IACAlE,EAAKoE,WAAWC,iBAAkB,GAElCR,EAASS,WACTtE,EAAKsE,SAAWT,EAASS,SACzBtE,EAAKsE,SAAS9lC,aACVqlC,EAASU,iBAAmBV,EAASrlC,eAEpB,QAApB+B,EAAKy/B,EAAKv0B,YAAyB,IAAPlL,OAAgB,EAASA,EAAGikC,cACzDxE,EAAKyE,eAAgB,GAEzB,MAAM,UAAEC,GAAc1E,EAAKvhC,SACT,IAAdimC,GACAb,EAASc,MAcjB,CACJ,CACAC,wBACIrxC,KAAKmuC,QAAQzzC,SAAS+xC,IAClB,IAAIz/B,EAAI4U,EAAIynB,EAAIiI,EAAIC,EAC0B,QAA7C3vB,GAAM5U,EAAKy/B,EAAKvhC,SAASsQ,sBAAmC,IAAPoG,GAAyBA,EAAGnlB,KAAKuQ,GACmB,QAAzGukC,EAAkC,QAA5BlI,EAAKoD,EAAK+E,oBAAiC,IAAPnI,OAAgB,GAAUiI,EAAKjI,EAAGn+B,SAASsQ,sBAAmC,IAAP+1B,GAAyBA,EAAG90C,KAAK60C,EAAG,GAE9J,CACAzI,iBACI7oC,KAAKmuC,QAAQzzC,SAAS+xC,IAClBA,EAAKjqC,UAAYiqC,EAAK5D,gBAAe,EAAM,GAEnD,CAKA4I,qBACQzxC,KAAKuwC,MAAQvwC,KAAKuwC,KAAKQ,WACvB/wC,KAAKuwC,KAAKQ,cAAWnzC,EAE7B,EAGJ,SAAS8zC,GAAyB3pB,EAAO6kB,EAAW+E,GAChD,IAAI1sC,EAAY,GAOhB,MAAM2sC,EAAa7pB,EAAMtjB,EAAEg4B,UAAYmQ,EAAUnoC,EAC3CotC,EAAa9pB,EAAMrjB,EAAE+3B,UAAYmQ,EAAUloC,EAWjD,IAVIktC,GAAcC,KACd5sC,EAAY,eAAe2sC,QAAiBC,YAM5B,IAAhBjF,EAAUnoC,GAA2B,IAAhBmoC,EAAUloC,IAC/BO,GAAa,SAAS,EAAI2nC,EAAUnoC,MAAM,EAAImoC,EAAUloC,OAExDitC,EAAiB,CACjB,MAAM,OAAEnoC,EAAM,QAAEC,EAAO,QAAEC,GAAYioC,EACjCnoC,IACAvE,GAAa,UAAUuE,UACvBC,IACAxE,GAAa,WAAWwE,UACxBC,IACAzE,GAAa,WAAWyE,SAChC,CAKA,MAAMooC,EAAgB/pB,EAAMtjB,EAAE4B,MAAQumC,EAAUnoC,EAC1CstC,EAAgBhqB,EAAMrjB,EAAE2B,MAAQumC,EAAUloC,EAIhD,OAHsB,IAAlBotC,GAAyC,IAAlBC,IACvB9sC,GAAa,SAAS6sC,MAAkBC,MAErC9sC,GAAa,MACxB,CAEA,MAAM+sC,GAAiB,CAACltC,EAAGC,IAAMD,EAAE4/B,MAAQ3/B,EAAE2/B,MAE7C,MAAMuN,GACFpgB,cACI7xB,KAAKI,SAAW,GAChBJ,KAAKkyC,SAAU,CACnB,CACA16B,IAAId,GACA8a,GAAcxxB,KAAKI,SAAUsW,GAC7B1W,KAAKkyC,SAAU,CACnB,CACA5a,OAAO5gB,GACHib,GAAW3xB,KAAKI,SAAUsW,GAC1B1W,KAAKkyC,SAAU,CACnB,CACAx3C,QAAQ2b,GACJrW,KAAKkyC,SAAWlyC,KAAKI,SAASoF,KAAKwsC,IACnChyC,KAAKkyC,SAAU,EACflyC,KAAKI,SAAS1F,QAAQ2b,EAC1B,EAGJ,MAAM87B,GAAgB,CAAC,GAAI,IAAK,IAAK,KAK/BC,GAAkB,IACxB,IAAIC,GAAO,EACX,SAASC,IAAqB,qBAAEC,EAAoB,cAAEC,EAAa,cAAEC,EAAa,kBAAEC,EAAiB,eAAEC,IACnG,OAAO,MACH9gB,YAAY+gB,EAAW3nC,EAAe,CAAC,EAAG3J,GAASkxC,aAAqD,EAASA,MAI7GxyC,KAAK6B,GAAKwwC,KAIVryC,KAAK81B,YAAc,EAOnB91B,KAAKI,SAAW,IAAI8D,IAKpBlE,KAAKkL,QAAU,CAAC,EAMhBlL,KAAK6yC,iBAAkB,EACvB7yC,KAAKsgC,oBAAqB,EAO1BtgC,KAAKkxC,eAAgB,EACrBlxC,KAAKypC,kBAAmB,EAKxBzpC,KAAK8yC,mBAAoB,EAIzB9yC,KAAK+yC,uBAAwB,EAC7B/yC,KAAKgzC,uBAAwB,EAK7BhzC,KAAKixC,YAAa,EAIlBjxC,KAAKizC,OAAQ,EAKbjzC,KAAKkzC,YAAa,EAIlBlzC,KAAKmzC,sBAAuB,EAS5BnzC,KAAK4sC,UAAY,CAAEnoC,EAAG,EAAGC,EAAG,GAI5B1E,KAAKozC,cAAgB,IAAIjwC,IAEzBnD,KAAKqzC,eAAiB,IAAIlwC,IAC1BnD,KAAKszC,kBAAoB,KACjBtzC,KAAKixC,aACLjxC,KAAKixC,YAAa,EAClBjxC,KAAKuzC,oBACT,EAOJvzC,KAAKwzC,iBAAmB,KACpBxzC,KAAKyzC,MAAM/4C,QAAQg5C,IACnB1zC,KAAKyzC,MAAM/4C,QAAQi5C,IACnB3zC,KAAKyzC,MAAM/4C,QAAQk5C,GAAe,EAEtC5zC,KAAK6zC,cAAe,EACpB7zC,KAAK8zC,WAAY,EACjB9zC,KAAK+zC,kBAAoB,EAKzB/zC,KAAKg0C,YAAc,IAAI7wC,IACvBnD,KAAK4yC,UAAYA,EACjB5yC,KAAKiL,aAAeA,EACpBjL,KAAKkY,KAAO5W,EAASA,EAAO4W,MAAQ5W,EAAStB,KAC7CA,KAAKi0C,KAAO3yC,EAAS,IAAIA,EAAO2yC,KAAM3yC,GAAU,GAChDtB,KAAKsB,OAASA,EACdtB,KAAK0kC,MAAQpjC,EAASA,EAAOojC,MAAQ,EAAI,EACzCkO,GAAa5yC,KAAKkY,KAAKg8B,sBAAsBtB,EAAW5yC,MACxD,IAAK,IAAI+b,EAAI,EAAGA,EAAI/b,KAAKi0C,KAAKhtC,OAAQ8U,IAClC/b,KAAKi0C,KAAKl4B,GAAGo3B,sBAAuB,EAEpCnzC,KAAKkY,OAASlY,OACdA,KAAKyzC,MAAQ,IAAIxB,GACzB,CACAp/B,iBAAiBxV,EAAMsV,GAInB,OAHK3S,KAAKozC,cAAc/vC,IAAIhG,IACxB2C,KAAKozC,cAAc9vC,IAAIjG,EAAM,IAAIu0B,IAE9B5xB,KAAKozC,cAAct4C,IAAIuC,GAAMma,IAAI7E,EAC5C,CACAwhC,gBAAgB92C,KAASouC,GACrB,MAAM2I,EAAsBp0C,KAAKozC,cAAct4C,IAAIuC,GACnD+2C,SAA0EA,EAAoBnyC,UAAUwpC,EAC5G,CACA4I,aAAah3C,GACT,OAAO2C,KAAKozC,cAAc/vC,IAAIhG,EAClC,CACA62C,sBAAsBtB,EAAWnG,GAC7BzsC,KAAKqzC,eAAe/vC,IAAIsvC,EAAWnG,EACvC,CAIAhqC,MAAMD,EAAU0uC,GAAgB,GAC5B,IAAIlkC,EACJ,GAAIhN,KAAKwC,SACL,OACJxC,KAAKizC,MACDzwC,aAAoB8xC,YAAmC,QAArB9xC,EAAS6P,QAC/CrS,KAAKwC,SAAWA,EAChB,MAAM,SAAEtB,EAAQ,OAAEkD,EAAM,cAAExI,GAAkBoE,KAAKkL,QAUjD,GATItP,IAAkBA,EAAc4D,SAChC5D,EAAc6G,MAAMD,GAExBxC,KAAKkY,KAAKu7B,MAAMj8B,IAAIxX,MACG,QAAtBgN,EAAKhN,KAAKsB,cAA2B,IAAP0L,GAAyBA,EAAG5M,SAASoX,IAAIxX,MACxEA,KAAK4yC,WAAa5yC,KAAKkY,KAAKm7B,eAAe36B,OAAO1Y,KAAK4yC,WACnD1B,IAAkB9sC,GAAUlD,KAC5BlB,KAAKkxC,eAAgB,GAErBqB,EAAsB,CACtB,IAAIgC,EACJ,MAAMC,EAAsB,IAAOx0C,KAAKkY,KAAK86B,uBAAwB,EACrET,EAAqB/vC,GAAU,KAC3BxC,KAAKkY,KAAK86B,uBAAwB,EAClCuB,GAAeA,IACfA,EAAc5mB,GAAM6mB,EAAqB,KACrC/0C,EAAsBC,yBACtBD,EAAsBC,wBAAyB,EAC/CM,KAAKyzC,MAAM/4C,QAAQ+5C,IACvB,GAER,CACIvzC,GACAlB,KAAKkY,KAAKw8B,mBAAmBxzC,EAAUlB,OAGd,IAAzBA,KAAKkL,QAAQ/N,SACbvB,IACCsF,GAAYkD,IACbpE,KAAK6S,iBAAiB,aAAa,EAAGkV,QAAO+b,mBAAkB6Q,2BAA0BvwC,OAAQwwC,MAC7F,IAAI5nC,EAAI4U,EAAIynB,EAAIiI,EAAIC,EACpB,GAAIvxC,KAAK60C,yBAGL,OAFA70C,KAAK8L,YAASlO,OACdoC,KAAK80C,oBAAiBl3C,GAI1B,MAAMm3C,EAAmI,QAA/GnzB,EAAwC,QAAlC5U,EAAKhN,KAAKkL,QAAQ8G,kBAA+B,IAAPhF,EAAgBA,EAAKpR,EAAcknB,8BAA2C,IAAPlB,EAAgBA,EAAKozB,IAChK,uBAAEC,EAAsB,0BAAEC,GAA+Bt5C,EAAc4d,WAKvE27B,GAAiBn1C,KAAKo1C,eACvBjF,GAAUnwC,KAAKo1C,aAAcR,IAC9BD,EAMEU,GAAgCvR,GAAoB6Q,EAC1D,IAAgC,QAA1BtL,EAAKrpC,KAAK6wC,kBAA+B,IAAPxH,OAAgB,EAASA,EAAG7mC,WAChE6yC,GACCvR,IACIqR,IAAkBn1C,KAAK4wB,kBAAoB,CAC5C5wB,KAAK6wC,aACL7wC,KAAKwxC,aAAexxC,KAAK6wC,WACzB7wC,KAAKwxC,aAAaA,kBAAe5zC,GAErCoC,KAAKs1C,mBAAmBvtB,EAAOstB,GAC/B,MAAME,EAAmB,IAClB5lB,GAAmBolB,EAAkB,UACxCxmB,OAAQ0mB,EACRxmB,WAAYymB,GAEZt5C,EAAcw7B,qBACdme,EAAiB5nB,MAAQ,EACzB4nB,EAAiB3vC,MAAO,GAE5B5F,KAAK+wB,eAAewkB,EACxB,MAOSzR,GAC0B,IAA3B9jC,KAAK+zC,mBACLU,GAAgBz0C,MAEpBA,KAAKouC,WAA2D,QAA7CmD,GAAMD,EAAKtxC,KAAKkL,SAASsQ,sBAAmC,IAAP+1B,GAAyBA,EAAG90C,KAAK60C,IAE7GtxC,KAAKo1C,aAAeR,CAAS,GAGzC,CACAlyC,UACI,IAAIsK,EAAI4U,EACR5hB,KAAKkL,QAAQhK,UAAYlB,KAAK+tC,aAC9B/tC,KAAKkY,KAAKu7B,MAAMnc,OAAOt3B,MACI,QAA1BgN,EAAKhN,KAAKkuC,kBAA+B,IAAPlhC,GAAyBA,EAAGsqB,OAAOt3B,MAC/C,QAAtB4hB,EAAK5hB,KAAKsB,cAA2B,IAAPsgB,GAAyBA,EAAGxhB,SAASsY,OAAO1Y,MAC3EA,KAAKwC,cAAW5E,EAChB2uB,GAAWipB,UAAUx1C,KAAKwzC,iBAC9B,CAEAiC,cACIz1C,KAAK+yC,uBAAwB,CACjC,CACA2C,gBACI11C,KAAK+yC,uBAAwB,CACjC,CACA4C,kBACI,OAAO31C,KAAK+yC,uBAAyB/yC,KAAKgzC,qBAC9C,CACA6B,yBACI,IAAI7nC,EACJ,OAAQhN,KAAKsgC,qBACe,QAAtBtzB,EAAKhN,KAAKsB,cAA2B,IAAP0L,OAAgB,EAASA,EAAG6nC,4BAC5D,CACR,CAEAe,cACI,IAAI5oC,EACAhN,KAAK21C,oBAET31C,KAAKixC,YAAa,EACI,QAArBjkC,EAAKhN,KAAKyzC,aAA0B,IAAPzmC,GAAyBA,EAAGtS,QAAQm7C,IAClE71C,KAAK81B,cACT,CACAiY,WAAW+H,GAAwB,GAC/B,IAAI9oC,EAAI4U,EAAIynB,EACZ,GAAIrpC,KAAKkY,KAAKy9B,kBAEV,YAD8C,QAA7C/zB,GAAM5U,EAAKhN,KAAKkL,SAASsQ,sBAAmC,IAAPoG,GAAyBA,EAAGnlB,KAAKuQ,IAI3F,IADChN,KAAKkY,KAAK+4B,YAAcjxC,KAAKkY,KAAK09B,cAC/B51C,KAAKkxC,cACL,OACJlxC,KAAKkxC,eAAgB,EACrB,IAAK,IAAIn1B,EAAI,EAAGA,EAAI/b,KAAKi0C,KAAKhtC,OAAQ8U,IAAK,CACvC,MAAM0wB,EAAOzsC,KAAKi0C,KAAKl4B,GACvB0wB,EAAK0G,sBAAuB,EAC5B1G,EAAKnJ,aAAa,WACtB,CACA,MAAM,SAAEpiC,EAAQ,OAAEkD,GAAWpE,KAAKkL,QAClC,QAAiBtN,IAAbsD,IAA2BkD,EAC3B,OACJ,MAAMkB,EAA0D,QAArC+jC,EAAKrpC,KAAKkL,QAAQtP,qBAAkC,IAAPytC,OAAgB,EAASA,EAAG7vB,WAAWlU,kBAC/GtF,KAAK+1C,2BAA6BzwC,aAA6D,EAASA,EAAkBtF,KAAKiL,aAAc,IAC7IjL,KAAKg2C,iBACLF,GAAyB91C,KAAKm0C,gBAAgB,aAClD,CAEAvG,YAKI,GAJyB5tC,KAAK21C,kBAQ1B,OAHA31C,KAAK01C,gBACL11C,KAAKuzC,yBACLvzC,KAAKyzC,MAAM/4C,QAAQu7C,IAGlBj2C,KAAKixC,aAEVjxC,KAAKixC,YAAa,EAOdjxC,KAAKqzC,eAAe5qC,OACpBzI,KAAKqzC,eAAe34C,QAAQw7C,IAC5Bl2C,KAAKqzC,eAAephB,SAKxBjyB,KAAKyzC,MAAM/4C,QAAQy7C,IAKnBn2C,KAAKyzC,MAAM/4C,QAAQ6oC,IAKnBvjC,KAAKyzC,MAAM/4C,QAAQ07C,IACnBp2C,KAAKuzC,oBAEL/mB,GAAUqB,SACVrB,GAAUgpB,YACVhpB,GAAUrsB,SACd,CACAozC,oBACIvzC,KAAKyzC,MAAM/4C,QAAQ27C,IACnBr2C,KAAKg0C,YAAYt5C,QAAQ47C,GAC7B,CACAC,2BACIlqB,GAAKmpB,UAAUx1C,KAAKwzC,kBAAkB,GAAO,EACjD,CACAjF,4BAMIliB,GAAKsG,YAAW,KACR3yB,KAAKkxC,cACLlxC,KAAKkY,KAAK01B,YAGV5tC,KAAKkY,KAAKo7B,mBACd,GAER,CAIA0C,kBACQh2C,KAAK+wC,UAAa/wC,KAAKwC,WAE3BxC,KAAK+wC,SAAW/wC,KAAKw2C,UACzB,CACAjT,eACI,IAAIv2B,EACJ,IAAKhN,KAAKwC,SACN,OAGJ,GADAxC,KAAKsjC,iBACCtjC,KAAKkL,QAAQg/B,qBAAuBlqC,KAAKouC,UAC1CpuC,KAAKkxC,eACN,OASJ,GAAIlxC,KAAK6wC,aAAe7wC,KAAK6wC,WAAWruC,SACpC,IAAK,IAAIuZ,EAAI,EAAGA,EAAI/b,KAAKi0C,KAAKhtC,OAAQ8U,IAAK,CAC1B/b,KAAKi0C,KAAKl4B,GAClBunB,cACT,CAEJ,MAAMmT,EAAaz2C,KAAKoE,OACxBpE,KAAKoE,OAASpE,KAAKw2C,SAAQ,GAC3Bx2C,KAAK02C,gBAAkB/Y,KACvB39B,KAAKkxC,eAAgB,EACrBlxC,KAAK6sC,qBAAkBjvC,EACvBoC,KAAKm0C,gBAAgB,UAAWn0C,KAAKoE,OAAOq8B,WACN,QAArCzzB,EAAKhN,KAAKkL,QAAQtP,qBAAkC,IAAPoR,GAAyBA,EAAG/K,OAAO,gBAAiBjC,KAAKoE,OAAOq8B,UAAWgW,aAA+C,EAASA,EAAWhW,UAChM,CACA6C,aAAaqT,EAAQ,WACjB,IAAIC,EAAmBr5C,QAAQyC,KAAKkL,QAAQ8+B,cAAgBhqC,KAAKwC,UAC7DxC,KAAKmiC,QACLniC,KAAKmiC,OAAOrM,cAAgB91B,KAAKkY,KAAK4d,aACtC91B,KAAKmiC,OAAOwU,QAAUA,IACtBC,GAAmB,GAEnBA,IACA52C,KAAKmiC,OAAS,CACVrM,YAAa91B,KAAKkY,KAAK4d,YACvB6gB,QACAE,OAAQnE,EAAkB1yC,KAAKwC,UAC/B+K,OAAQklC,EAAczyC,KAAKwC,WAGvC,CACAmwC,iBACI,IAAI3lC,EACJ,IAAK2lC,EACD,OACJ,MAAMmE,EAAmB92C,KAAKkxC,eAAiBlxC,KAAKmzC,qBAC9C4D,EAAgB/2C,KAAK6sC,kBAAoBqD,GAAYlwC,KAAK6sC,iBAC1DvnC,EAA0D,QAArC0H,EAAKhN,KAAKkL,QAAQtP,qBAAkC,IAAPoR,OAAgB,EAASA,EAAGwM,WAAWlU,kBACzG0xC,EAAyB1xC,aAA6D,EAASA,EAAkBtF,KAAKiL,aAAc,IACpIgsC,EAA8BD,IAA2Bh3C,KAAK+1C,2BAChEe,IACCC,GACGzrC,GAAatL,KAAKiL,eAClBgsC,KACJtE,EAAe3yC,KAAKwC,SAAUw0C,GAC9Bh3C,KAAKmzC,sBAAuB,EAC5BnzC,KAAK6oC,iBAEb,CACA2N,QAAQU,GAAkB,GACtB,MAAMC,EAAUn3C,KAAKoiC,iBACrB,IAAI3B,EAAYzgC,KAAKo3C,oBAAoBD,GA00BrD,IAAkB5Y,EAh0BN,OAJI2Y,IACAzW,EAAYzgC,KAAKk3C,gBAAgBzW,IAo0B7C4W,IADc9Y,EAj0BGkC,GAk0BHh8B,GACd4yC,GAAU9Y,EAAI75B,GAl0BC,CACHoxB,YAAa91B,KAAKkY,KAAK4d,YACvBwhB,YAAaH,EACb1W,YACAx1B,aAAc,CAAC,EACfc,OAAQ/L,KAAK6B,GAErB,CACAugC,iBACI,MAAM,cAAExmC,GAAkBoE,KAAKkL,QAC/B,IAAKtP,EACD,OAAO+hC,KACX,MAAMY,EAAM3iC,EAAcwjC,sBAEpB,OAAE+C,GAAWniC,KAAKkY,KAKxB,OAJIiqB,IACAxD,GAAcJ,EAAI95B,EAAG09B,EAAO50B,OAAO9I,GACnCk6B,GAAcJ,EAAI75B,EAAGy9B,EAAO50B,OAAO7I,IAEhC65B,CACX,CACA6Y,oBAAoB7Y,GAChB,MAAMgZ,EAAmB5Z,KACzB4R,GAAYgI,EAAkBhZ,GAK9B,IAAK,IAAIxiB,EAAI,EAAGA,EAAI/b,KAAKi0C,KAAKhtC,OAAQ8U,IAAK,CACvC,MAAM0wB,EAAOzsC,KAAKi0C,KAAKl4B,IACjB,OAAEomB,EAAM,QAAEj3B,GAAYuhC,EAC5B,GAAIA,IAASzsC,KAAKkY,MAAQiqB,GAAUj3B,EAAQ8+B,aAAc,CAKtD,GAAI7H,EAAO0U,OAAQ,CACftH,GAAYgI,EAAkBhZ,GAC9B,MAAQ4D,OAAQqV,GAAex3C,KAAKkY,KAKhCs/B,IACA7Y,GAAc4Y,EAAiB9yC,GAAI+yC,EAAWjqC,OAAO9I,GACrDk6B,GAAc4Y,EAAiB7yC,GAAI8yC,EAAWjqC,OAAO7I,GAE7D,CACAi6B,GAAc4Y,EAAiB9yC,EAAG09B,EAAO50B,OAAO9I,GAChDk6B,GAAc4Y,EAAiB7yC,EAAGy9B,EAAO50B,OAAO7I,EACpD,CACJ,CACA,OAAO6yC,CACX,CACAE,eAAelZ,EAAKmZ,GAAgB,GAChC,MAAMC,EAAiBha,KACvB4R,GAAYoI,EAAgBpZ,GAC5B,IAAK,IAAIxiB,EAAI,EAAGA,EAAI/b,KAAKi0C,KAAKhtC,OAAQ8U,IAAK,CACvC,MAAM0wB,EAAOzsC,KAAKi0C,KAAKl4B,IAClB27B,GACDjL,EAAKvhC,QAAQ8+B,cACbyC,EAAKtK,QACLsK,IAASA,EAAKv0B,MACdinB,GAAawY,EAAgB,CACzBlzC,GAAIgoC,EAAKtK,OAAO50B,OAAO9I,EACvBC,GAAI+nC,EAAKtK,OAAO50B,OAAO7I,IAG1B4G,GAAamhC,EAAKxhC,eAEvBk0B,GAAawY,EAAgBlL,EAAKxhC,aACtC,CAIA,OAHIK,GAAatL,KAAKiL,eAClBk0B,GAAawY,EAAgB33C,KAAKiL,cAE/B0sC,CACX,CACAT,gBAAgB3Y,GACZ,IAAIvxB,EACJ,MAAM4qC,EAAsBja,KAC5B4R,GAAYqI,EAAqBrZ,GACjC,IAAK,IAAIxiB,EAAI,EAAGA,EAAI/b,KAAKi0C,KAAKhtC,OAAQ8U,IAAK,CACvC,MAAM0wB,EAAOzsC,KAAKi0C,KAAKl4B,GACvB,IAAK0wB,EAAKjqC,SACN,SACJ,IAAK8I,GAAamhC,EAAKxhC,cACnB,SACJ8yB,GAAS0O,EAAKxhC,eAAiBwhC,EAAKuJ,iBACpC,MAAMhG,EAAYrS,KAElB4R,GAAYS,EADIvD,EAAKrK,kBAErB2N,GAAoB6H,EAAqBnL,EAAKxhC,aAAuC,QAAxB+B,EAAKy/B,EAAKsE,gBAA6B,IAAP/jC,OAAgB,EAASA,EAAGyzB,UAAWuP,EACxI,CAIA,OAHI1kC,GAAatL,KAAKiL,eAClB8kC,GAAoB6H,EAAqB53C,KAAKiL,cAE3C2sC,CACX,CAIAC,eAAe9vB,GACX/nB,KAAK83C,YAAc/vB,EACnB/nB,KAAK8yC,mBAAoB,EACzB9yC,KAAKkY,KAAKq+B,0BACd,CACAtM,WAAW/+B,GACPlL,KAAKkL,QAAU,IACRlL,KAAKkL,WACLA,EACHimC,eAAiCvzC,IAAtBsN,EAAQimC,WAA0BjmC,EAAQimC,UAE7D,CACA8E,oBACIj2C,KAAKmiC,YAASvkC,EACdoC,KAAKoE,YAASxG,EACdoC,KAAK+wC,cAAWnzC,EAChBoC,KAAK+1C,gCAA6Bn4C,EAClCoC,KAAK83C,iBAAcl6C,EACnBoC,KAAK8L,YAASlO,EACdoC,KAAKkxC,eAAgB,CACzB,CAIAyC,qBACI,IAAI3mC,EAMJ,MAAMujC,EAAOvwC,KAAK+3C,UAOlB,GANA/3C,KAAK8yC,oBAAsB9yC,KAAK8yC,kBAAoBvC,EAAKuC,mBACzD9yC,KAAKypC,mBAAqBzpC,KAAKypC,iBAAmB8G,EAAK9G,mBAKlDzpC,KAAK8yC,oBAAsB9yC,KAAKg4C,+BACjC,OACJ,MAAM,OAAE5zC,EAAM,SAAElD,GAAalB,KAAKkL,QAIlC,GAAKlL,KAAKoE,SAAYA,GAAUlD,GAAhC,CAQA,IAAKlB,KAAK83C,cAAgB93C,KAAK80C,eAAgB,CAE3C,MAAMmD,EAAiBj4C,KAAKk4C,6BACxBD,GAAkBA,EAAe7zC,QACjCpE,KAAKi4C,eAAiBA,EACtBj4C,KAAK80C,eAAiBnX,KACtB39B,KAAKm4C,qBAAuBxa,KAC5Bb,GAAqB98B,KAAKm4C,qBAAsBn4C,KAAKoE,OAAOq8B,UAAWwX,EAAe7zC,OAAOq8B,WAC7F8O,GAAYvvC,KAAK80C,eAAgB90C,KAAKm4C,uBAGtCn4C,KAAKi4C,eAAiBj4C,KAAK80C,oBAAiBl3C,CAEpD,CA96FZ,IAAyBkO,EAAQ8wB,EAAUt7B,EAm7F/B,GAAKtB,KAAK80C,gBAAmB90C,KAAK83C,YAuClC,GAlCK93C,KAAK8L,SACN9L,KAAK8L,OAAS6xB,KACd39B,KAAKo4C,qBAAuBza,MAK5B39B,KAAK80C,gBACL90C,KAAKm4C,uBAC2B,QAA9BnrC,EAAKhN,KAAKi4C,sBAAmC,IAAPjrC,OAAgB,EAASA,EAAGlB,SAj8F3DA,EAk8FO9L,KAAK8L,OAl8FJ8wB,EAk8FY58B,KAAK80C,eAl8FPxzC,EAk8FuBtB,KAAKi4C,eAAensC,OAj8FlF6wB,GAAiB7wB,EAAOrH,EAAGm4B,EAASn4B,EAAGnD,EAAOmD,GAC9Ck4B,GAAiB7wB,EAAOpH,EAAGk4B,EAASl4B,EAAGpD,EAAOoD,IAq8F7B1E,KAAK83C,aACNv6C,QAAQyC,KAAKwxC,cAEbxxC,KAAK8L,OAAS9L,KAAKy3C,eAAez3C,KAAKoE,OAAOq8B,WAG9C8O,GAAYvvC,KAAK8L,OAAQ9L,KAAKoE,OAAOq8B,WAEzCnC,GAAct+B,KAAK8L,OAAQ9L,KAAK83C,cAMhCvI,GAAYvvC,KAAK8L,OAAQ9L,KAAKoE,OAAOq8B,WAKrCzgC,KAAKg4C,+BAAgC,CACrCh4C,KAAKg4C,gCAAiC,EACtC,MAAMC,EAAiBj4C,KAAKk4C,6BACxBD,GACA16C,QAAQ06C,EAAezG,gBACnBj0C,QAAQyC,KAAKwxC,gBAChByG,EAAe/sC,QAAQ8+B,cACxBiO,EAAensC,QACf9L,KAAKi4C,eAAiBA,EACtBj4C,KAAK80C,eAAiBnX,KACtB39B,KAAKm4C,qBAAuBxa,KAC5Bb,GAAqB98B,KAAKm4C,qBAAsBn4C,KAAK8L,OAAQmsC,EAAensC,QAC5EyjC,GAAYvvC,KAAK80C,eAAgB90C,KAAKm4C,uBAGtCn4C,KAAKi4C,eAAiBj4C,KAAK80C,oBAAiBl3C,CAEpD,CAjFU,CAkFd,CACAs6C,6BACI,GAAKl4C,KAAKsB,SACNy8B,GAAS/9B,KAAKsB,OAAO2J,gBACrB+yB,GAAeh+B,KAAKsB,OAAO2J,cAE/B,OAAKjL,KAAKsB,OAAOwzC,gBAAkB90C,KAAKsB,OAAOw2C,cAC3C93C,KAAKsB,OAAO8C,OACLpE,KAAKsB,OAGLtB,KAAKsB,OAAO42C,4BAE3B,CACAtE,iBACI,IAAI5mC,EACJ,MAAM,kBAAE8lC,EAAiB,iBAAErJ,GAAqBzpC,KAChDA,KAAK8yC,kBAAoB9yC,KAAKypC,kBAAmB,EACjD,MAAM8G,EAAOvwC,KAAK+3C,UACZM,EAAW96C,QAAQyC,KAAKwxC,eAAiBxxC,OAASuwC,EACxD,IAAI+H,GAAU,EAKd,GAJIxF,IACAwF,GAAU,GACVD,GAAY5O,IACZ6O,GAAU,GACVA,EACA,OACJ,MAAM,OAAEl0C,EAAM,SAAElD,GAAalB,KAAKkL,QAWlC,GANAlL,KAAK6yC,gBAAkBt1C,SAAgC,QAAtByP,EAAKhN,KAAKsB,cAA2B,IAAP0L,OAAgB,EAASA,EAAG6lC,kBACvF7yC,KAAK4wB,kBACL5wB,KAAKu4C,kBACJv4C,KAAK6yC,kBACN7yC,KAAK83C,YAAc93C,KAAK80C,oBAAiBl3C,IAExCoC,KAAKoE,SAAYA,IAAUlD,EAC5B,OAKJquC,GAAYvvC,KAAK02C,gBAAiB12C,KAAKoE,OAAOq8B,WApyF1D,SAAyBlC,EAAKqO,EAAW4L,EAAUC,GAAqB,GACpE,IAAIzrC,EAAI4U,EACR,MAAM82B,EAAaF,EAASvxC,OAC5B,IAAKyxC,EACD,OAGJ,IAAIjM,EACA1kB,EAFJ6kB,EAAUnoC,EAAImoC,EAAUloC,EAAI,EAG5B,IAAK,IAAIqX,EAAI,EAAGA,EAAI28B,EAAY38B,IAC5B0wB,EAAO+L,EAASz8B,GAChBgM,EAAQ0kB,EAAKI,gBACuH,cAAjD,QAA7EjrB,EAA8B,QAAxB5U,EAAKy/B,EAAKjqC,gBAA6B,IAAPwK,OAAgB,EAASA,EAAG7B,aAA0B,IAAPyW,OAAgB,EAASA,EAAGqlB,WAEnHwR,GACAhM,EAAKvhC,QAAQ8+B,cACbyC,EAAKtK,QACLsK,IAASA,EAAKv0B,MACdinB,GAAaZ,EAAK,CACd95B,GAAIgoC,EAAKtK,OAAO50B,OAAO9I,EACvBC,GAAI+nC,EAAKtK,OAAO50B,OAAO7I,IAG3BqjB,IAEA6kB,EAAUnoC,GAAKsjB,EAAMtjB,EAAE4B,MACvBumC,EAAUloC,GAAKqjB,EAAMrjB,EAAE2B,MAEvBi4B,GAAcC,EAAKxW,IAEnB0wB,GAAsBntC,GAAamhC,EAAKxhC,eACxCk0B,GAAaZ,EAAKkO,EAAKxhC,eAO/B2hC,EAAUnoC,EAAI+5B,GAAcoO,EAAUnoC,GACtCmoC,EAAUloC,EAAI85B,GAAcoO,EAAUloC,EAC1C,CAiwFYi0C,CAAgB34C,KAAK02C,gBAAiB12C,KAAK4sC,UAAW5sC,KAAKi0C,KAAMoE,GACjE,MAAM,OAAEvsC,GAAWykC,EACnB,IAAKzkC,EACD,OACC9L,KAAK6sC,kBACN7sC,KAAK6sC,gBAAkBnP,KACvB19B,KAAK44C,6BAA+Blb,MAExC,MAAMmb,EAAiB74C,KAAK4sC,UAAUnoC,EAChCq0C,EAAiB94C,KAAK4sC,UAAUloC,EAChCq0C,EAA0B/4C,KAAKg5C,oBAUrCtc,GAAa18B,KAAK6sC,gBAAiB7sC,KAAK02C,gBAAiB5qC,EAAQ9L,KAAKiL,cACtEjL,KAAKg5C,oBAAsBtH,GAAyB1xC,KAAK6sC,gBAAiB7sC,KAAK4sC,WAC3E5sC,KAAKg5C,sBAAwBD,GAC7B/4C,KAAK4sC,UAAUnoC,IAAMo0C,GACrB74C,KAAK4sC,UAAUloC,IAAMo0C,IACrB94C,KAAK6zC,cAAe,EACpB7zC,KAAK6oC,iBACL7oC,KAAKm0C,gBAAgB,mBAAoBroC,GAEjD,CACAslC,OACIpxC,KAAK8zC,WAAY,CAErB,CACAlD,OACI5wC,KAAK8zC,WAAY,CAErB,CACAjL,eAAeoQ,GAAY,GACvB,IAAIjsC,EAAI4U,EAAIynB,EACkC,QAA7CznB,GAAM5U,EAAKhN,KAAKkL,SAAS29B,sBAAmC,IAAPjnB,GAAyBA,EAAGnlB,KAAKuQ,GACvFisC,IAAyC,QAA1B5P,EAAKrpC,KAAKkuC,kBAA+B,IAAP7E,GAAyBA,EAAGR,kBACzE7oC,KAAKwxC,eAAiBxxC,KAAKwxC,aAAahvC,WACxCxC,KAAKwxC,kBAAe5zC,EAE5B,CACA03C,mBAAmBvtB,EAAOstB,GAA+B,GACrD,IAAIroC,EAAI4U,EACR,MAAMmvB,EAAW/wC,KAAK+wC,SAChBmI,GAAwBnI,aAA2C,EAASA,EAAS9lC,eAAiB,CAAC,EACvGkuC,EAAc,IAAKn5C,KAAKiL,cACxB6sC,EAAcpa,KACpB19B,KAAK80C,eAAiB90C,KAAKm4C,0BAAuBv6C,EAClDoC,KAAKg4C,gCAAkC3C,EACvC,MAAM+D,EAAiBzb,KACjB0b,GAA2BtI,aAA2C,EAASA,EAAShlC,WAAoC,QAAtBiB,EAAKhN,KAAKoE,cAA2B,IAAP4I,OAAgB,EAASA,EAAGjB,QAChKutC,IAA4C,QAA1B13B,EAAK5hB,KAAKkuC,kBAA+B,IAAPtsB,OAAgB,EAASA,EAAGusB,QAAQlnC,SAAW,IAAM,EACzGsyC,EAAyBh8C,QAAQ87C,IAClCC,IAC0B,IAA3Bt5C,KAAKkL,QAAQimC,YACZnxC,KAAKi0C,KAAK72C,KAAKo8C,KACpBx5C,KAAK+zC,kBAAoB,EACzB/zC,KAAKy5C,eAAkBxrC,IACnB,IAAIjB,EACJ,MAAMsX,EAAWrW,EAAS,IA2c1C,IAAgBwT,EAAQ4C,EAAM9B,EAAIjnB,EA1clBo+C,GAAa5B,EAAYrzC,EAAGsjB,EAAMtjB,EAAG6f,GACrCo1B,GAAa5B,EAAYpzC,EAAGqjB,EAAMrjB,EAAG4f,GACrCtkB,KAAK63C,eAAeC,GAChB93C,KAAK80C,gBACL90C,KAAKm4C,sBACLn4C,KAAKoE,SAC2B,QAA9B4I,EAAKhN,KAAKi4C,sBAAmC,IAAPjrC,OAAgB,EAASA,EAAG5I,UACpE04B,GAAqBsc,EAAgBp5C,KAAKoE,OAAOq8B,UAAWzgC,KAAKi4C,eAAe7zC,OAAOq8B,WAmc3Fhf,EAlcWzhB,KAAK80C,eAkcRzwB,EAlcwBrkB,KAAKm4C,qBAkcvB51B,EAlc6C62B,EAkczC99C,EAlcyDgpB,EAmcvFq1B,GAAQl4B,EAAOhd,EAAG4f,EAAK5f,EAAG8d,EAAG9d,EAAGnJ,GAChCq+C,GAAQl4B,EAAO/c,EAAG2f,EAAK3f,EAAG6d,EAAG7d,EAAGpJ,IAlchB+9C,IACAr5C,KAAKgxC,gBAAkBmI,EAlnC3C,SAAmBrtC,EAAQ8tC,EAAQrJ,EAAMjsB,EAAUi1B,EAAwBD,GACnEC,GACAztC,EAAOvB,QAAUoG,GAAI,OAEJ/S,IAAjB2yC,EAAKhmC,QAAwBgmC,EAAKhmC,QAAU,EAAG2kC,GAAgB5qB,IAC/DxY,EAAO+tC,YAAclpC,QAAuB/S,IAAnBg8C,EAAOrvC,QAAwBqvC,EAAOrvC,QAAU,EAAG,EAAG6kC,GAAiB9qB,KAE3Fg1B,IACLxtC,EAAOvB,QAAUoG,QAAuB/S,IAAnBg8C,EAAOrvC,QAAwBqvC,EAAOrvC,QAAU,OAAoB3M,IAAjB2yC,EAAKhmC,QAAwBgmC,EAAKhmC,QAAU,EAAG+Z,IAK3H,IAAK,IAAIvI,EAAI,EAAGA,EAAI8yB,GAAY9yB,IAAK,CACjC,MAAM+9B,EAAc,SAASlL,GAAQ7yB,WACrC,IAAIg+B,EAAe/K,GAAU4K,EAAQE,GACjCE,EAAahL,GAAUuB,EAAMuJ,QACZl8C,IAAjBm8C,QAA6Cn8C,IAAfo8C,IAElCD,IAAiBA,EAAe,GAChCC,IAAeA,EAAa,GACI,IAAjBD,GACI,IAAfC,GACAjL,GAAKgL,KAAkBhL,GAAKiL,IAE5BluC,EAAOguC,GAAe9zC,KAAKD,IAAI4K,GAAIm+B,GAASiL,GAAejL,GAASkL,GAAa11B,GAAW,IACxFnd,GAAQxD,KAAKq2C,IAAe7yC,GAAQxD,KAAKo2C,MACzCjuC,EAAOguC,IAAgB,MAI3BhuC,EAAOguC,GAAeE,EAE9B,EAIIJ,EAAOpwC,QAAU+mC,EAAK/mC,UACtBsC,EAAOtC,OAASmH,GAAIipC,EAAOpwC,QAAU,EAAG+mC,EAAK/mC,QAAU,EAAG8a,GAElE,CA2kCoB21B,CAAUd,EAAaD,EAAsBl5C,KAAKiL,aAAcqZ,EAAUi1B,EAAwBD,IAEtGt5C,KAAKkY,KAAKq+B,2BACVv2C,KAAK6oC,iBACL7oC,KAAK+zC,kBAAoBzvB,CAAQ,EAErCtkB,KAAKy5C,eAAe,EACxB,CACA1oB,eAAe7lB,GACX,IAAI8B,EAAI4U,EACR5hB,KAAKm0C,gBAAgB,kBACY,QAAhCnnC,EAAKhN,KAAK4wB,wBAAqC,IAAP5jB,GAAyBA,EAAG+gB,OACjE/tB,KAAKwxC,eACyC,QAA7C5vB,EAAK5hB,KAAKwxC,aAAa5gB,wBAAqC,IAAPhP,GAAyBA,EAAGmM,QAElF/tB,KAAKu4C,mBACLhsB,GAAWsB,OAAO7tB,KAAKu4C,kBACvBv4C,KAAKu4C,sBAAmB36C,GAO5BoC,KAAKu4C,iBAAmBlsB,GAAKwB,QAAO,KAChCpuB,EAAsBC,wBAAyB,EAC/CM,KAAK4wB,iBAAmBzzB,GAAQ,EAAGi1C,GAAiB,IAC7ClnC,EACHyjB,SAAW1gB,IACP,IAAIjB,EACJhN,KAAKy5C,eAAexrC,GACQ,QAA3BjB,EAAK9B,EAAQyjB,gBAA6B,IAAP3hB,GAAyBA,EAAGvQ,KAAKyO,EAAS+C,EAAO,EAEzFwgB,WAAY,KACR,IAAIzhB,EAC0B,QAA7BA,EAAK9B,EAAQujB,kBAA+B,IAAPzhB,GAAyBA,EAAGvQ,KAAKyO,GACvElL,KAAKk6C,mBAAmB,IAG5Bl6C,KAAKwxC,eACLxxC,KAAKwxC,aAAa5gB,iBAAmB5wB,KAAK4wB,kBAE9C5wB,KAAKu4C,sBAAmB36C,CAAS,GAEzC,CACAs8C,oBACI,IAAIltC,EACAhN,KAAKwxC,eACLxxC,KAAKwxC,aAAa5gB,sBAAmBhzB,EACrCoC,KAAKwxC,aAAaV,qBAAkBlzC,GAEb,QAA1BoP,EAAKhN,KAAKkuC,kBAA+B,IAAPlhC,GAAyBA,EAAGqkC,wBAC/DrxC,KAAKwxC,aACDxxC,KAAK4wB,iBACD5wB,KAAKgxC,qBACDpzC,EACZoC,KAAKm0C,gBAAgB,oBACzB,CACAM,kBACI,IAAIznC,EACAhN,KAAK4wB,mBAC0B,QAA9B5jB,EAAKhN,KAAKy5C,sBAAmC,IAAPzsC,GAAyBA,EAAGvQ,KAAKuD,KAAMoyC,IAC9EpyC,KAAK4wB,iBAAiB7C,QAE1B/tB,KAAKk6C,mBACT,CACAC,0BACI,MAAM5J,EAAOvwC,KAAK+3C,UAClB,IAAI,qBAAEK,EAAoB,OAAEtsC,EAAM,OAAE1H,EAAM,aAAE6G,GAAiBslC,EAC7D,GAAK6H,GAAyBtsC,GAAW1H,EAAzC,CAOA,GAAIpE,OAASuwC,GACTvwC,KAAKoE,QACLA,GACAg2C,GAA0Bp6C,KAAKkL,QAAQi/B,cAAenqC,KAAKoE,OAAOq8B,UAAWr8B,EAAOq8B,WAAY,CAChG30B,EAAS9L,KAAK8L,QAAU6xB,KACxB,MAAM0c,EAAUle,GAAWn8B,KAAKoE,OAAOq8B,UAAUh8B,GACjDqH,EAAOrH,EAAEqB,IAAMyqC,EAAKzkC,OAAOrH,EAAEqB,IAC7BgG,EAAOrH,EAAEsB,IAAM+F,EAAOrH,EAAEqB,IAAMu0C,EAC9B,MAAMC,EAAUne,GAAWn8B,KAAKoE,OAAOq8B,UAAU/7B,GACjDoH,EAAOpH,EAAEoB,IAAMyqC,EAAKzkC,OAAOpH,EAAEoB,IAC7BgG,EAAOpH,EAAEqB,IAAM+F,EAAOpH,EAAEoB,IAAMw0C,CAClC,CACA/K,GAAY6I,EAAsBtsC,GAMlCqzB,GAAaiZ,EAAsBntC,GAOnCyxB,GAAa18B,KAAK44C,6BAA8B54C,KAAK02C,gBAAiB0B,EAAsBntC,EA/BlF,CAgCd,CACAypC,mBAAmBxzC,EAAUurC,GACzB,IAAIz/B,EAAI4U,EAAIynB,EACPrpC,KAAKg0C,YAAY3wC,IAAInC,IACtBlB,KAAKg0C,YAAY1wC,IAAIpC,EAAU,IAAImvC,IAEzBrwC,KAAKg0C,YAAYl5C,IAAIoG,GAC7BsW,IAAIi1B,GACVA,EAAKuB,QAAQ,CACTh8B,WAA2D,QAA9ChF,EAAKy/B,EAAKvhC,QAAQk/B,8BAA2C,IAAPp9B,OAAgB,EAASA,EAAGgF,WAC/F2+B,sBAAiJ,QAAzHtH,EAAoD,QAA9CznB,EAAK6qB,EAAKvhC,QAAQk/B,8BAA2C,IAAPxoB,OAAgB,EAASA,EAAG24B,mCAAgD,IAAPlR,OAAgB,EAASA,EAAG5sC,KAAKmlB,EAAI6qB,IAEtM,CACA2B,SACI,MAAMoM,EAAQx6C,KAAKkuC,WACnB,OAAOsM,GAAQA,EAAMjK,OAASvwC,IAClC,CACA+3C,UACI,IAAI/qC,EACJ,MAAM,SAAE9L,GAAalB,KAAKkL,QAC1B,OAAOhK,IAAuC,QAA1B8L,EAAKhN,KAAKkuC,kBAA+B,IAAPlhC,OAAgB,EAASA,EAAGujC,OAAgBvwC,IACtG,CACAy6C,cACI,IAAIztC,EACJ,MAAM,SAAE9L,GAAalB,KAAKkL,QAC1B,OAAOhK,EAAsC,QAA1B8L,EAAKhN,KAAKkuC,kBAA+B,IAAPlhC,OAAgB,EAASA,EAAGsjC,cAAW1yC,CAChG,CACAswC,WACI,MAAM,SAAEhtC,GAAalB,KAAKkL,QAC1B,GAAIhK,EACA,OAAOlB,KAAKkY,KAAK87B,YAAYl5C,IAAIoG,EACzC,CACA8sC,SAAQ,WAAEkF,EAAU,WAAElhC,EAAU,sBAAE2+B,GAA2B,CAAC,GAC1D,MAAM6J,EAAQx6C,KAAKkuC,WACfsM,GACAA,EAAMxM,QAAQhuC,KAAM2wC,GACpBuC,IACAlzC,KAAK6sC,qBAAkBjvC,EACvBoC,KAAKkzC,YAAa,GAElBlhC,GACAhS,KAAKiqC,WAAW,CAAEj4B,cAC1B,CACAi8B,WACI,MAAMuM,EAAQx6C,KAAKkuC,WACnB,QAAIsM,GACOA,EAAMvM,SAASjuC,KAK9B,CACA61C,gBACI,MAAM,cAAEj6C,GAAkBoE,KAAKkL,QAC/B,IAAKtP,EACD,OAEJ,IAAI8+C,GAAY,EAKhB,MAAM,aAAEzvC,GAAiBrP,EAQzB,IAPIqP,EAAazB,QACbyB,EAAaxB,SACbwB,EAAavB,SACbuB,EAAatB,WACb+wC,GAAY,IAGXA,EACD,OACJ,MAAMC,EAAc,CAAC,EAErB,IAAK,IAAI5+B,EAAI,EAAGA,EAAIo2B,GAAclrC,OAAQ8U,IAAK,CAC3C,MAAM7c,EAAM,SAAWizC,GAAcp2B,GAEjC9Q,EAAa/L,KACby7C,EAAYz7C,GAAO+L,EAAa/L,GAChCtD,EAAcsrC,eAAehoC,EAAK,GAE1C,CAGAtD,SAA8DA,EAAcuE,SAE5E,IAAK,MAAMjB,KAAOy7C,EACd/+C,EAAcsrC,eAAehoC,EAAKy7C,EAAYz7C,IAIlDtD,EAAcitC,gBAClB,CACAn5B,oBAAoBF,EAAY,CAAC,GAC7B,IAAIxC,EAAI4U,EAAIynB,EAEZ,MAAMuR,EAAS,CAAC,EAChB,IAAK56C,KAAKwC,UAAYxC,KAAKizC,MACvB,OAAO2H,EACX,IAAK56C,KAAK8zC,UACN,MAAO,CAAE+G,WAAY,UAGrBD,EAAOC,WAAa,GAExB,MAAMv1C,EAA0D,QAArC0H,EAAKhN,KAAKkL,QAAQtP,qBAAkC,IAAPoR,OAAgB,EAASA,EAAGwM,WAAWlU,kBAC/G,GAAItF,KAAKkzC,WAQL,OAPAlzC,KAAKkzC,YAAa,EAClB0H,EAAOrwC,QAAU,GACjBqwC,EAAOE,cACHhqC,GAAmBtB,EAAUsrC,gBAAkB,GACnDF,EAAO31C,UAAYK,EACbA,EAAkBtF,KAAKiL,aAAc,IACrC,OACC2vC,EAEX,MAAMrK,EAAOvwC,KAAK+3C,UAClB,IAAK/3C,KAAK6sC,kBAAoB7sC,KAAKoE,SAAWmsC,EAAKzkC,OAAQ,CACvD,MAAMivC,EAAc,CAAC,EAerB,OAdI/6C,KAAKkL,QAAQhK,WACb65C,EAAYxwC,aACsB3M,IAA9BoC,KAAKiL,aAAaV,QACZvK,KAAKiL,aAAaV,QAClB,EACVwwC,EAAYD,cACRhqC,GAAmBtB,EAAUsrC,gBAAkB,IAEnD96C,KAAK6zC,eAAiBvoC,GAAatL,KAAKiL,gBACxC8vC,EAAY91C,UAAYK,EAClBA,EAAkB,CAAC,EAAG,IACtB,OACNtF,KAAK6zC,cAAe,GAEjBkH,CACX,CACA,MAAMC,EAAiBzK,EAAKS,iBAAmBT,EAAKtlC,aACpDjL,KAAKm6C,0BACLS,EAAO31C,UAAYysC,GAAyB1xC,KAAK44C,6BAA8B54C,KAAK4sC,UAAWoO,GAC3F11C,IACAs1C,EAAO31C,UAAYK,EAAkB01C,EAAgBJ,EAAO31C,YAEhE,MAAM,EAAER,EAAC,EAAEC,GAAM1E,KAAK6sC,gBACtB+N,EAAOvvC,gBAAkB,GAAc,IAAX5G,EAAE6I,WAA4B,IAAX5I,EAAE4I,YAC7CijC,EAAKS,gBAKL4J,EAAOrwC,QACHgmC,IAASvwC,KACiG,QAAnGqpC,EAAuC,QAAjCznB,EAAKo5B,EAAezwC,eAA4B,IAAPqX,EAAgBA,EAAK5hB,KAAKiL,aAAaV,eAA4B,IAAP8+B,EAAgBA,EAAK,EACjIrpC,KAAK8wC,gBACD9wC,KAAKiL,aAAaV,QAClBywC,EAAenB,YAO7Be,EAAOrwC,QACHgmC,IAASvwC,UACwBpC,IAA3Bo9C,EAAezwC,QACXywC,EAAezwC,QACf,QAC2B3M,IAA/Bo9C,EAAenB,YACXmB,EAAenB,YACf,EAKlB,IAAK,MAAM36C,KAAO0E,EAAiB,CAC/B,QAA4BhG,IAAxBo9C,EAAe97C,GACf,SACJ,MAAM,QAAEstC,EAAO,QAAEiC,GAAY7qC,EAAgB1E,GACvC+7C,EAAYzO,EAAQwO,EAAe97C,GAAMqxC,GAC/C,GAAI9B,EAAS,CACT,MAAMyM,EAAMzM,EAAQxnC,OACpB,IAAK,IAAI8U,EAAI,EAAGA,EAAIm/B,EAAKn/B,IACrB6+B,EAAOnM,EAAQ1yB,IAAMk/B,CAE7B,MAEIL,EAAO17C,GAAO+7C,CAEtB,CAYA,OANIj7C,KAAKkL,QAAQhK,WACb05C,EAAOE,cACHvK,IAASvwC,KACH8Q,GAAmBtB,EAAUsrC,gBAAkB,GAC/C,QAEPF,CACX,CACAvE,gBACIr2C,KAAK6wC,WAAa7wC,KAAK+wC,cAAWnzC,CACtC,CAEAu9C,YACIn7C,KAAKkY,KAAKu7B,MAAM/4C,SAAS+xC,IAAW,IAAIz/B,EAAI,OAAwC,QAAhCA,EAAKy/B,EAAK7b,wBAAqC,IAAP5jB,OAAgB,EAASA,EAAG+gB,MAAM,IAC9H/tB,KAAKkY,KAAKu7B,MAAM/4C,QAAQu7C,IACxBj2C,KAAKkY,KAAK87B,YAAY/hB,OAC1B,EAER,CACA,SAASsR,GAAakJ,GAClBA,EAAKlJ,cACT,CACA,SAAS6S,GAAmB3J,GACxB,IAAIz/B,EAAI4U,EAAIynB,EACZ,MAAM0H,GAAuC,QAA1B/jC,EAAKy/B,EAAKoE,kBAA+B,IAAP7jC,OAAgB,EAASA,EAAG+jC,WAAatE,EAAKsE,SACnG,GAAItE,EAAK2B,UACL3B,EAAKroC,QACL2sC,GACAtE,EAAK4H,aAAa,aAAc,CAChC,MAAQ5T,UAAWr8B,EAAQkzC,YAAa8D,GAAmB3O,EAAKroC,QAC1D,cAAE+lC,GAAkBsC,EAAKvhC,QACzBmtC,EAAWtH,EAAShlC,SAAW0gC,EAAKroC,OAAO2H,OAG3B,SAAlBo+B,EACAvM,IAAUxB,IACN,MAAMif,EAAehD,EACftH,EAASuG,YAAYlb,GACrB2U,EAAStQ,UAAUrE,GACnBn1B,EAASk1B,GAAWkf,GAC1BA,EAAav1C,IAAM1B,EAAOg4B,GAAMt2B,IAChCu1C,EAAat1C,IAAMs1C,EAAav1C,IAAMmB,CAAM,IAG3CmzC,GAA0BjQ,EAAe4G,EAAStQ,UAAWr8B,IAClEw5B,IAAUxB,IACN,MAAMif,EAAehD,EACftH,EAASuG,YAAYlb,GACrB2U,EAAStQ,UAAUrE,GACnBn1B,EAASk1B,GAAW/3B,EAAOg4B,IACjCif,EAAat1C,IAAMs1C,EAAav1C,IAAMmB,CAAM,IAGpD,MAAMq0C,EAAc5d,KACpBhB,GAAa4e,EAAal3C,EAAQ2sC,EAAStQ,WAC3C,MAAM8a,EAAc7d,KAChB2a,EACA3b,GAAa6e,EAAa9O,EAAKgL,eAAe2D,GAAgB,GAAOrK,EAASuG,aAG9E5a,GAAa6e,EAAan3C,EAAQ2sC,EAAStQ,WAE/C,MAAMqD,GAAoBoM,GAAYoL,GACtC,IAAI3G,GAA2B,EAC/B,IAAKlI,EAAKoE,WAAY,CAClB,MAAMoH,EAAiBxL,EAAKyL,6BAK5B,GAAID,IAAmBA,EAAepH,WAAY,CAC9C,MAAQE,SAAUyK,EAAgBp3C,OAAQq3C,GAAiBxD,EAC3D,GAAIuD,GAAkBC,EAAc,CAChC,MAAMC,EAAmB/d,KACzBb,GAAqB4e,EAAkB3K,EAAStQ,UAAW+a,EAAe/a,WAC1E,MAAM2Y,EAAiBzb,KACvBb,GAAqBsc,EAAgBh1C,EAAQq3C,EAAahb,WACrD0P,GAAUuL,EAAkBtC,KAC7BzE,GAA2B,EAEnC,CACJ,CACJ,CACAlI,EAAK0H,gBAAgB,YAAa,CAC9B/vC,SACA2sC,WACAhpB,MAAOwzB,EACPD,cACAxX,mBACA6Q,4BAER,MACSlI,EAAK2B,WACoC,QAA7C/E,GAAMznB,EAAK6qB,EAAKvhC,SAASsQ,sBAAmC,IAAP6tB,GAAyBA,EAAG5sC,KAAKmlB,IAO3F6qB,EAAKvhC,QAAQ8G,gBAAapU,CAC9B,CACA,SAAS81C,GAAoBjH,GAKzBA,EAAKqG,oBAAsBrG,EAAKqG,kBAAoBv1C,QAAQkvC,EAAKnrC,QAAUmrC,EAAKnrC,OAAOwxC,oBAIvFrG,EAAKhD,mBAAqBgD,EAAKhD,iBAAmBlsC,QAAQkvC,EAAKnrC,QAAUmrC,EAAKnrC,OAAOmoC,kBACzF,CACA,SAAS4M,GAAc5J,GACnBA,EAAK4J,eACT,CACA,SAASJ,GAAkBxJ,GACvBA,EAAKwJ,mBACT,CACA,SAASE,GAAoB1J,GACzB,MAAM,cAAE7wC,GAAkB6wC,EAAKvhC,SAC3BtP,aAAqD,EAASA,EAAc4d,WAAWmiC,wBACvF//C,EAAcqG,OAAO,uBAEzBwqC,EAAKkG,gBACT,CACA,SAAS8B,GAAgBhI,GACrBA,EAAKgI,kBACLhI,EAAKqL,YAAcrL,EAAKqI,eAAiBrI,EAAK3gC,YAASlO,CAC3D,CACA,SAAS+1C,GAAmBlH,GACxBA,EAAKkH,oBACT,CACA,SAASC,GAAenH,GACpBA,EAAKmH,gBACT,CACA,SAASiC,GAAcpJ,GACnBA,EAAKoJ,eACT,CACA,SAASS,GAAoBkE,GACzBA,EAAM/I,oBACV,CACA,SAASiI,GAAaj4B,EAAQsG,EAAOzsB,GACjCmmB,EAAOgb,UAAY9rB,GAAIoX,EAAM0U,UAAW,EAAGnhC,GAC3CmmB,EAAOpb,MAAQsK,GAAIoX,EAAM1hB,MAAO,EAAG/K,GACnCmmB,EAAOnU,OAASya,EAAMza,OACtBmU,EAAO+a,YAAczU,EAAMyU,WAC/B,CACA,SAASmd,GAAQl4B,EAAQ4C,EAAM9B,EAAIjnB,GAC/BmmB,EAAO3b,IAAM6K,GAAI0T,EAAKve,IAAKyc,EAAGzc,IAAKxK,GACnCmmB,EAAO1b,IAAM4K,GAAI0T,EAAKte,IAAKwc,EAAGxc,IAAKzK,EACvC,CAKA,SAASk+C,GAAoB/M,GACzB,OAAQA,EAAKuE,sBAAwDpzC,IAArC6uC,EAAKuE,gBAAgB6I,WACzD,CACA,MAAM7E,GAA0B,CAC5BtyB,SAAU,IACVtD,KAAM,CAAC,GAAK,EAAG,GAAK,IAExB,SAAS82B,GAAezJ,EAAMmG,GAK1B,IAAIgJ,EAAanP,EAAKv0B,KACtB,IAAK,IAAI6D,EAAI0wB,EAAKwH,KAAKhtC,OAAS,EAAG8U,GAAK,EAAGA,IACvC,GAAIxe,QAAQkvC,EAAKwH,KAAKl4B,GAAGvZ,UAAW,CAChCo5C,EAAanP,EAAKwH,KAAKl4B,GACvB,KACJ,CAEJ,MACMxM,GADgBqsC,GAAcA,IAAenP,EAAKv0B,KAAO0jC,EAAWp5C,SAAWzG,UACvD8/C,cAAc,wBAAwBjJ,OAChErjC,GACAk9B,EAAKhqC,MAAM8M,GAAS,EAC5B,CACA,SAAS8nC,GAAUjb,GACfA,EAAKt2B,IAAME,KAAKQ,MAAM41B,EAAKt2B,KAC3Bs2B,EAAKr2B,IAAMC,KAAKQ,MAAM41B,EAAKr2B,IAC/B,CAKA,SAASq0C,GAA0BjQ,EAAe4G,EAAU3sC,GACxD,MAA0B,aAAlB+lC,GACe,oBAAlBA,IACI9N,GAAO+T,GAAYW,GAAWX,GAAYhsC,GAAS,GAChE,CAEA,MAAM03C,GAAyBxJ,GAAqB,CAChDC,qBAAsB,CAACj2C,EAAK2F,IAAWwQ,GAAYnW,EAAK,SAAU2F,GAClEwwC,cAAe,KAAM,CACjBhuC,EAAG1I,SAASggD,gBAAgBC,YAAcjgD,SAASkgD,KAAKD,WACxDt3C,EAAG3I,SAASggD,gBAAgBG,WAAangD,SAASkgD,KAAKC,YAE3DxJ,kBAAmB,KAAM,IAGvBzQ,GAAqB,CACvBziC,aAAS5B,GAEPu+C,GAAqB7J,GAAqB,CAC5CG,cAAgBjwC,IAAa,CACzBiC,EAAGjC,EAASw5C,WACZt3C,EAAGlC,EAAS05C,YAEhB1J,cAAe,KACX,IAAKvQ,GAAmBziC,QAAS,CAC7B,MAAM48C,EAAe,IAAIN,GAAuB,EAAG,CAAC,GACpDM,EAAa35C,MAAM6R,QACnB8nC,EAAanS,WAAW,CAAED,cAAc,IACxC/H,GAAmBziC,QAAU48C,CACjC,CACA,OAAOna,GAAmBziC,OAAO,EAErCmzC,eAAgB,CAACnwC,EAAUzI,KACvByI,EAAS2I,MAAMlG,eAAsBrH,IAAV7D,EAAsBA,EAAQ,MAAM,EAEnE24C,kBAAoBlwC,GAAajF,QAAuD,UAA/C+W,OAAOwwB,iBAAiBtiC,GAAU65C,YAGzEC,GAAgB,IACfnmB,MACAnc,MACAtb,MACAiwC,IAQD4N,GAAuB15C,GAAkB,CAACzD,EAAW6R,IAAWsB,GAAsBnT,EAAW6R,EAAQqrC,GAAelQ,GAAwB+P,MAuBtJ,MAAMK,GAAI35C,EAAkB0P,IAE5B,SAASkqC,KACL,MAAM7Q,EAAY5xC,EAAMuF,QAAO,GAO/B,OANAvD,GAA0B,KACtB4vC,EAAUpsC,SAAU,EACb,KACHosC,EAAUpsC,SAAU,CAAK,IAE9B,IACIosC,CACX,CAEA,SAAS8Q,KACL,MAAM9Q,EAAY6Q,MACXE,EAAmBC,GAAwB5iD,EAAM6iD,SAAS,GAC3DC,EAAc9iD,EAAMuI,aAAY,KAClCqpC,EAAUpsC,SAAWo9C,EAAqBD,EAAoB,EAAE,GACjE,CAACA,IAMJ,MAAO,CADqB3iD,EAAMuI,aAAY,IAAM8pB,GAAKsG,WAAWmqB,IAAc,CAACA,IACtDH,EACjC,CAMA,MAAMI,WAAwB7hD,EAAiBkE,UAC3CW,wBAAwB8tC,GACpB,MAAMt+B,EAAUvP,KAAK9C,MAAM8/C,SAASx9C,QACpC,GAAI+P,GAAWs+B,EAAUtyB,YAAcvb,KAAK9C,MAAMqe,UAAW,CACzD,MAAM9S,EAAOzI,KAAK9C,MAAM+/C,QAAQz9C,QAChCiJ,EAAKF,OAASgH,EAAQ2tC,cAAgB,EACtCz0C,EAAKJ,MAAQkH,EAAQ4tC,aAAe,EACpC10C,EAAKC,IAAM6G,EAAQ6tC,UACnB30C,EAAKI,KAAO0G,EAAQ8tC,UACxB,CACA,OAAO,IACX,CAIAn9C,qBAAuB,CACvBC,SACI,OAAOH,KAAK9C,MAAMkD,QACtB,EAEJ,SAASk9C,IAAS,SAAEl9C,EAAQ,UAAEmb,IAC1B,MAAM1Z,EAAK7H,EAAM0hB,QACXpf,EAAMtC,EAAMuF,OAAO,MACnBkJ,EAAOzO,EAAMuF,OAAO,CACtB8I,MAAO,EACPE,OAAQ,EACRG,IAAK,EACLG,KAAM,IAiCV,OAtBA7O,EAAMujD,oBAAmB,KACrB,MAAM,MAAEl1C,EAAK,OAAEE,EAAM,IAAEG,EAAG,KAAEG,GAASJ,EAAKjJ,QAC1C,GAAI+b,IAAcjf,EAAIkD,UAAY6I,IAAUE,EACxC,OACJjM,EAAIkD,QAAQg+C,QAAQC,YAAc57C,EAClC,MAAMsJ,EAAQpP,SAASsG,cAAc,SAarC,OAZAtG,SAAS2hD,KAAKC,YAAYxyC,GACtBA,EAAMyyC,OACNzyC,EAAMyyC,MAAMC,WAAW,oCACFh8C,yEAEZwG,wCACCE,qCACHG,sCACCG,0CAIL,KACH9M,SAAS2hD,KAAKI,YAAY3yC,EAAM,CACnC,GACF,CAACoQ,IACIrgB,EAAiBmH,cAAc06C,GAAiB,CAAExhC,UAAWA,EAAWyhC,SAAU1gD,EAAK2gD,QAASx0C,GAAQvN,EAAiB6iD,aAAa39C,EAAU,CAAE9D,QAC9J,CAEA,MAAM0hD,GAAgB,EAAG59C,WAAU1C,UAAS6d,YAAWC,iBAAgBzY,SAAQk7C,wBAAuBC,WAClG,MAAMC,EAAmB9+C,EAAY++C,IAC/Bv8C,EAAK7H,EAAM0hB,QACX/d,EAAU3D,EAAM+D,SAAQ,KAAM,CAChC8D,KACAnE,UACA6d,YACAxY,SACAyY,eAAiB6iC,IACbF,EAAiB76C,IAAI+6C,GAAS,GAC9B,IAAK,MAAMrvB,KAAcmvB,EAAiB3sC,SACtC,IAAKwd,EACD,OAERxT,GAAkBA,GAAgB,EAEtCC,SAAW4iC,IACPF,EAAiB76C,IAAI+6C,GAAS,GACvB,IAAMF,EAAiBzlC,OAAO2lC,OAQ7CJ,OAAwBrgD,EAAY,CAAC2d,IAiBrC,OAhBAvhB,EAAM+D,SAAQ,KACVogD,EAAiBzjD,SAAQ,CAAC4jD,EAAGp/C,IAAQi/C,EAAiB76C,IAAIpE,GAAK,IAAO,GACvE,CAACqc,IAKJrgB,EAAiBgB,WAAU,MACtBqf,IACI4iC,EAAiB11C,MAClB+S,GACAA,GAAgB,GACrB,CAACD,IACS,cAAT2iC,IACA99C,EAAWlF,EAAiBmH,cAAci7C,GAAU,CAAE/hC,UAAWA,GAAanb,IAE1ElF,EAAiBmH,cAAcxG,EAAgByG,SAAU,CAAEvI,MAAO4D,GAAWyC,EAAU,EAEnG,SAASg+C,KACL,OAAO,IAAIj7C,GACf,CAEA,MAAMo7C,GAAe7nC,GAAUA,EAAMxX,KAAO,GAiD5C,MAuGMs/C,GAA+BxkD,EAAMoB,cAAc,MAEnD6G,GAAUwqC,IAAUA,EAAKyE,eAAiBzE,EAAKsB,YAAW,GAChE,SAAS0Q,KACL,MAAMhL,EAAQ,IAAIvvC,IACZ4tB,EAAgB,IAAIpa,QACpBgnC,EAAW,IAAMjL,EAAM/4C,QAAQuH,IACrC,MAAO,CACHuV,IAAMi1B,IACFgH,EAAMj8B,IAAIi1B,GACV3a,EAAcxuB,IAAImpC,EAAMA,EAAK55B,iBAAiB,aAAc6rC,GAAU,EAE1EpnB,OAASmV,IACL,IAAIz/B,EACJymC,EAAM/6B,OAAO+zB,GACsB,QAAlCz/B,EAAK8kB,EAAch3B,IAAI2xC,UAA0B,IAAPz/B,GAAyBA,IACpE8kB,EAAcpZ,OAAO+zB,GACrBiS,GAAU,EAEdC,MAAOD,EAEf,CAEA,MAAME,GAAsB/gD,IAAwB,IAAZA,EAElCghD,GAAc,EAAGz+C,WAAUyB,KAAIi9C,YAAWjhD,WAAU,WAEpCD,IAAdkhD,IACAjhD,EAAUihD,GACd,MAAMC,EAAqB/kD,EAAM2B,WAAWkE,GACtCm/C,EAA+BhlD,EAAM2B,WAAW6iD,KAC/C1B,EAAa59C,GAAOw9C,KACrB/+C,EAAU3D,EAAMuF,OAAO,MACvB0/C,EAAaF,EAAmBl9C,IAAMm9C,EACpB,OAApBrhD,EAAQ6B,UAVQ,CAAC3B,GAAY+gD,IAA+B,IAAZ/gD,IAAiC,OAAZA,EAWjEqhD,CAAgBrhD,IAAYohD,IAC5Bp9C,EAAKA,EAAKo9C,EAAa,IAAMp9C,EAAKo9C,GAEtCthD,EAAQ6B,QAAU,CACdqC,KACA8rC,MAAOiR,GAAmB/gD,IACpBkhD,EAAmBpR,OACnB8Q,OAGd,MAAMU,EAAkBnlD,EAAM+D,SAAQ,KAAM,IAAMJ,EAAQ6B,QAASs9C,iBAAgB,CAAC59C,IACpF,OAAQhE,EAAiBmH,cAAcxC,EAAmByC,SAAU,CAAEvI,MAAOolD,GAAmB/+C,EAAU,EAG9G,IAAIyB,GAAK,EAqGT,SAASu9C,GAAangD,GAClB,MAA2B,mBAAbA,CAClB,CAEA,MAAMogD,GAAiBrlD,EAAMoB,cAAc,MAyD3C,MAAMkkD,GAAQtlD,EAAM+G,YAnCpB,UAAsB,SAAEX,EAAQ,GAAEm/C,EAAK,KAAI,KAAEnjB,EAAO,IAAG,UAAEojB,EAAS,OAAEhuC,KAAWtU,GAAS8D,GACpF,MAAM5B,EAAYC,GAAY,IAAMk9C,GAAOgD,KACrCE,EAAQ,GACRC,EAAe1lD,EAAMuF,QAAO,GAClCtF,EAAU6kB,UAAUvhB,QAAQiU,GAAS,gDACrC,MAAM7T,EAAU,CACZy+B,OACAujB,aAAc,CAAC5lD,EAAOqK,KAIdA,IACuD,IAAvDq7C,EAAMhP,WAAW54B,GAAU9d,IAAU8d,EAAM9d,UAC3C0lD,EAAM9zC,KAAK,CAAE5R,QAAOqK,OAAQA,EAAOg4B,KACnCqjB,EAAMj6C,KAAKo6C,IACf,EAEJC,YAAa,CAACh+C,EAAI0L,EAAQia,KACtB,GAAIk4B,EAAalgD,QACb,OACJ,MAAMsgD,EAxClB,SAAsBL,EAAO1lD,EAAOwT,EAAQia,GACxC,IAAKA,EACD,OAAOi4B,EACX,MAAMvzB,EAAQuzB,EAAMhP,WAAW/e,GAASA,EAAK33B,QAAUA,IACvD,IAAe,IAAXmyB,EACA,OAAOuzB,EACX,MAAMM,EAAav4B,EAAW,EAAI,GAAK,EACjCw4B,EAAWP,EAAMvzB,EAAQ6zB,GAC/B,IAAKC,EACD,OAAOP,EACX,MAAM/tB,EAAO+tB,EAAMvzB,GACb+zB,EAAaD,EAAS57C,OACtB87C,EAAiBvvC,GAAIsvC,EAAWn6C,IAAKm6C,EAAWl6C,IAAK,IAC3D,OAAoB,IAAfg6C,GAAoBruB,EAAKttB,OAAO2B,IAAMwH,EAAS2yC,IAC/B,IAAhBH,GAAqBruB,EAAKttB,OAAO0B,IAAMyH,EAAS2yC,EApyKzD,aAAsBzuB,GAAM+U,EAAW2Z,GACnC,MAAMC,EAAa5Z,EAAY,EAAI/U,EAAIxqB,OAASu/B,EAAYA,EAC5D,GAAI4Z,GAAc,GAAKA,EAAa3uB,EAAIxqB,OAAQ,CAC5C,MAAMo5C,EAAWF,EAAU,EAAI1uB,EAAIxqB,OAASk5C,EAAUA,GAC/CzuB,GAAQD,EAAIzK,OAAOwf,EAAW,GACrC/U,EAAIzK,OAAOq5B,EAAU,EAAG3uB,EAC5B,CACA,OAAOD,CACX,CA6xKe6uB,CAASb,EAAOvzB,EAAOA,EAAQ6zB,GAEnCN,CACX,CAsB6Bc,CAAad,EAAO59C,EAAI0L,EAAQia,GAC7Ci4B,IAAUK,IACVJ,EAAalgD,SAAU,EACvBggD,EAAUM,EACL1+B,IAAIoT,IACJlR,QAAQvpB,IAAqC,IAA3ByX,EAAO9N,QAAQ3J,MAC1C,GAMR,OAHAC,EAAMkC,WAAU,KACZwjD,EAAalgD,SAAU,CAAK,IAExBtE,EAAiBmH,cAAcjD,EAAW,IAAKlC,EAAOZ,IAAK0E,GAC/D9F,EAAiBmH,cAAcg9C,GAAe/8C,SAAU,CAAEvI,MAAO4D,GAAWyC,GACpF,IAEA,SAASo0B,GAAS9C,GACd,OAAOA,EAAK33B,KAChB,CACA,SAAS6lD,GAAW96C,EAAGC,GACnB,OAAOD,EAAEV,OAAO0B,IAAMf,EAAEX,OAAO0B,GACnC,CAmBA,SAAS06C,GAAe9iD,GACpB,MAAM3D,EAAQsF,GAAY,IAAMw0B,GAAYn2B,MAMtC,SAAEnC,GAAavB,EAAM2B,WAAWR,GACtC,GAAII,EAAU,CACV,MAAO,CAAEklD,GAAazmD,EAAM6iD,SAASn/C,GACrC1D,EAAMkC,WAAU,IAAMnC,EAAMg5B,SAAS0tB,IAAY,GACrD,CACA,OAAO1mD,CACX,CAEA,MAGM2mD,GAAY/jD,GAHQ,CAACA,GACH,iBAANA,GAAkBA,EAAEgU,IAEbgwC,CAAkBhkD,GAAKA,EAAEgU,SAAM/S,EACxD,SAASqH,MAAawmC,GAClB,MAAMmV,GAAgBhkD,MAAMC,QAAQ4uC,EAAK,IACnCoV,EAAYD,EAAe,GAAK,EAChCE,EAAarV,EAAK,EAAIoV,GACtBE,EAAatV,EAAK,EAAIoV,GACtBG,EAAcvV,EAAK,EAAIoV,GACvB31C,EAAUugC,EAAK,EAAIoV,GACnBh6B,EAAeL,GAAYu6B,EAAYC,EAAa,CACtD16B,MAAOo6B,GAASM,EAAY,OACzB91C,IAEP,OAAO01C,EAAe/5B,EAAai6B,GAAcj6B,CACrD,CAoBA,SAASo6B,GAAuBzvC,EAAQ0vC,GAIpC,MAAMnnD,EAAQymD,GAAeU,KAOvBC,EAAc,IAAMpnD,EAAMuJ,IAAI49C,KAWpC,OANAC,IA1BJ,SAA0B3vC,EAAQmB,EAASyuC,GACvCplD,GAA0B,KACtB,MAAM81B,EAAgBtgB,EAAO4P,KAAKrnB,GAAUA,EAAMg5B,SAASpgB,KAC3D,MAAO,KACHmf,EAAcp3B,SAAS2mD,GAAgBA,MACvCD,GAAS,CACZ,GAET,CAuBIE,CAAiB9vC,GAAQ,IAAM6a,GAAKwB,OAAOszB,GAAa,GAAO,KAAO,IAAM50B,GAAWsB,OAAOszB,KACvFpnD,CACX,CAEA,SAASwnD,GAAa96B,EAAO+6B,EAAyBR,EAAa91C,GAC/D,MAAM8W,EAAiD,mBAA5Bw/B,EACrBA,EACAv8C,GAAUu8C,EAAyBR,EAAa91C,GACtD,OAAOtO,MAAMC,QAAQ4pB,GACfg7B,GAAiBh7B,EAAOzE,GACxBy/B,GAAiB,CAACh7B,IAAQ,EAAExY,KAAY+T,EAAY/T,IAC9D,CACA,SAASwzC,GAAiBjwC,EAAQwQ,GAC9B,MAAM/T,EAAS5O,GAAY,IAAM,KACjC,OAAO4hD,GAAuBzvC,GAAQ,KAClCvD,EAAOhH,OAAS,EAChB,MAAMua,EAAYhQ,EAAOvK,OACzB,IAAK,IAAI8U,EAAI,EAAGA,EAAIyF,EAAWzF,IAC3B9N,EAAO8N,GAAKvK,EAAOuK,GAAGjhB,MAE1B,OAAOknB,EAAY/T,EAAO,GAElC,CAEA,SAASyzC,GAAsB3nD,EAAOqpB,EAAe,GACjD,OAAO9e,EAAcvK,GAASA,EAAQymD,GAAep9B,EACzD,CAwBA,MAEMu+B,GAAU,CACZrC,SACAsC,KAJS5nD,EAAM+G,YAvBnB,UAAqB,SAAEX,EAAQ,MAAE+K,EAAQ,CAAC,EAAC,MAAEpR,EAAK,GAAEwlD,EAAK,KAAI,OAAE3e,EAAM,OAAEx8B,GAAS,KAASlH,GAAS8D,GAC9F,MAAM5B,EAAYC,GAAY,IAAMk9C,GAAOgD,KACrC5hD,EAAU3D,EAAM2B,WAAW0jD,IAC3BzrC,EAAQ,CACVnP,EAAGi9C,GAAsBv2C,EAAM1G,GAC/BC,EAAGg9C,GAAsBv2C,EAAMzG,IAE7BiG,EAAS42C,GAAa,CAAC3tC,EAAMnP,EAAGmP,EAAMlP,IAAI,EAAEm9C,EAASC,KAAaD,GAAWC,EAAU,EAAI,UAC3F1G,EAAiBphD,EAAMuF,OAAO,MACpCtF,EAAU6kB,UAAUvhB,QAAQI,GAAU,iDACtC,MAAM,KAAEy+B,EAAI,aAAEujB,EAAY,YAAEE,GAAgBliD,EAI5C,OAHA3D,EAAMkC,WAAU,KACZyjD,EAAa5lD,EAAOqhD,EAAe57C,QAAQ,GAC5C,CAAC7B,IACIzC,EAAiBmH,cAAcjD,EAAW,CAAEV,KAAM09B,KAASl/B,EAAOylC,kBAAkB,EAAMx3B,MAAO,IAAKA,EAAO1G,EAAGmP,EAAMnP,EAAGC,EAAGkP,EAAMlP,EAAGiG,UAAUvG,OAAQA,EAAQw8B,OAAQ,CAAC3tB,EAAO8uC,KAC/K,MAAM,SAAEv6B,GAAau6B,EACrBv6B,EAAS4U,IACLyjB,EAAY9lD,EAAO6Z,EAAMwoB,GAAMthC,MAAO0sB,EAAS4U,IACnDwE,GAAUA,EAAO3tB,EAAO8uC,EAAa,EACtCC,gBAAkBC,IACjB7G,EAAe57C,QAAUyiD,CAAQ,EAClC3lD,IAAK0E,GAAeZ,EAC/B,KAWM8hD,GAAe,CACjBvgD,SAAUyqC,MACPjW,MACAnc,IAMDmoC,GAAS,IACRD,MACAxjD,MACAiwC,GACHxvC,0BAA2Bg9C,IAiH/B,MAAMiG,GAA2B,KAAM,CACnCC,QAASxuB,GAAY,GACrB8S,QAAS9S,GAAY,GACrByuB,gBAAiBzuB,GAAY,GAC7B0uB,gBAAiB1uB,GAAY,KAEjC,SAAS2uB,IAAU,UAAEC,EAAS,OAAE32C,EAAM,aAAE42C,GAAe,KAASx3C,GAAY,CAAC,GACzE,MAAMsG,EAASnS,EAAY+iD,IAgB3B,OAf2BM,EACrB1mD,EACAhC,EAAMkC,YACO,IACRhC,EAAIioC,QAAO,EAAG19B,IAAGC,QACpB8M,EAAO6wC,QAAQ/+C,IAAImB,EAAEjF,SACrBgS,EAAO8wC,gBAAgBh/C,IAAImB,EAAE6f,UAC7B9S,EAAOm1B,QAAQrjC,IAAIoB,EAAElF,SACrBgS,EAAO+wC,gBAAgBj/C,IAAIoB,EAAE4f,SAAS,GACvC,IACIpZ,EACHu3C,WAAYA,aAA6C,EAASA,EAAUjjD,eAAY5B,EACxFkO,QAASA,aAAuC,EAASA,EAAOtM,eAAY5B,KAEjF,IACI4T,CACX,CAkBA,SAASmxC,GAAkBtsC,GACvB,MAAMusC,EAAmB5oD,EAAMuF,OAAO,IAChC,SAAEhE,GAAavB,EAAM2B,WAAWR,GACtCnB,EAAMkC,WAAU,KACZ,GAAIX,EACA,OACJ,MAAMsnD,EAAwB,EAAG/3B,YAAW/C,YACnC66B,EAAiBpjD,UAClBojD,EAAiBpjD,QAAUsrB,GAC/BzU,EAASyU,EAAY83B,EAAiBpjD,QAASuoB,EAAM,EAGzD,OADAsE,GAAKwB,OAAOg1B,GAAuB,GAC5B,IAAMt2B,GAAWsB,OAAOg1B,EAAsB,GACtD,CAACxsC,GACR,CAQA,MAAMysC,WAA8B5wB,GAChCL,cACIoa,SAASC,WACTlsC,KAAKmuC,QAAU,GACfnuC,KAAK6+B,WAAa,IAAI36B,GAC1B,CACAsT,IAAIna,GACA,IAAI0lD,EACA9+C,EAAeZ,IAAIhG,IACnB2C,KAAK6+B,WAAWrnB,IAAIna,GACpB0lD,EAAa,aAEP1lD,EAAKgH,WAAW,WACrBqB,EAAgBrI,IACR,eAATA,IACA0lD,EAAa5zC,GAAY9R,IAEzB0lD,IACAvxB,GAAcxxB,KAAKmuC,QAAS4U,GAC5B/iD,KAAK6tB,SAEb,CACAyJ,OAAOj6B,GACC4G,EAAeZ,IAAIhG,IACnB2C,KAAK6+B,WAAWnmB,OAAOrb,GAClB2C,KAAK6+B,WAAWp2B,MACjBkpB,GAAW3xB,KAAKmuC,QAAS,cAI7Bxc,GAAW3xB,KAAKmuC,QAASh/B,GAAY9R,IAEzC2C,KAAK6tB,QACT,CACAA,SACI7tB,KAAKsD,IAAItD,KAAKmuC,QAAQlnC,OAASjH,KAAKmuC,QAAQjwC,KAAK,MAAQ,OAC7D,EAgCJ,SAAS8kD,MAIJrb,GAAyBnoC,SAAWooC,KACrC,MAAOxQ,GAAsBp9B,EAAM6iD,SAASnV,GAAqBloC,SAIjE,OAAO43B,CACX,CAmBA,SAAS6rB,KAIL,IAAIC,GAAa,EAKjB,MAAMC,EAAoB,GAIpBC,EAAc,IAAIl/C,IAClBm/C,EAAW,CACbrpB,UAAUp+B,GAEN,OADAwnD,EAAY5rC,IAAI5b,GACT,KAAWwnD,EAAY1qC,OAAO9c,EAAc,CACvD,EACAmB,MAAMuT,EAAYimB,GAOd,GAAI2sB,EAAY,CACZ,MAAM/sB,EAAa,GAMnB,OALAitB,EAAY1oD,SAASkB,IACjBu6B,EAAWxqB,KAAKuqB,GAAqBt6B,EAAe0U,EAAY,CAC5DimB,uBACD,IAEAjD,QAAQza,IAAIsd,EACvB,CAEI,OAAO,IAAI7C,SAASC,IAChB4vB,EAAkBx3C,KAAK,CACnBnN,UAAW,CAAC8R,EAAYimB,GACxBhD,WACF,GAGd,EACAjwB,IAAIgN,GAEA,OADArW,EAAU6kB,UAAUokC,EAAY,iHACzBE,EAAY1oD,SAASkB,KAx4KxC,SAAmBA,EAAe0U,GAC1B1T,MAAMC,QAAQyT,GACPskB,GAAYh5B,EAAe0U,GAEP,iBAAfA,EACLskB,GAAYh5B,EAAe,CAAC0U,IAGnCokB,GAAU94B,EAAe0U,EAEjC,CA+3KgBgzC,CAAU1nD,EAAe0U,EAAW,GAE5C,EACAyd,OACIq1B,EAAY1oD,SAASkB,KA7pKjC,SAAuBA,GACnBA,EAAc4V,OAAO9W,SAASX,GAAUA,EAAMg0B,QAClD,CA4pKgByF,CAAc53B,EAAc,GAEpC,EACA6G,QAKI,OAJAygD,GAAa,EACbC,EAAkBzoD,SAAQ,EAAG8D,YAAW+0B,cACpC8vB,EAAStmD,SAASyB,GAAWi1B,KAAKF,EAAQ,IAEvC,KACH2vB,GAAa,EACbG,EAASt1B,MAAM,CAEvB,GAEJ,OAAOs1B,CACX,CA+BA,SAASE,KACL,MAAMF,EAAWhkD,EAAY4jD,IAE7B,OADAjpD,EAAMkC,UAAUmnD,EAAS5gD,MAAO,IACzB4gD,CACX,CACA,MAAMG,GAAeD,GAEfE,GAAO,CAAC39C,EAAKC,EAAKpJ,KACpB,MAAM+mD,EAAY39C,EAAMD,EACxB,QAAWnJ,EAAImJ,GAAO49C,EAAaA,GAAaA,EAAa59C,CAAG,EAqFpE,MAAM69C,GACF9xB,cACI7xB,KAAK4jD,kBAAoB,IAAI1/C,GACjC,CAMA81B,UAAUqpB,GAEN,OADArjD,KAAK4jD,kBAAkBpsC,IAAI6rC,GACpB,IAAMrjD,KAAK4jD,kBAAkBlrC,OAAO2qC,EAC/C,CAgBAtmD,MAAMkW,EAAO/H,GACTlL,KAAK4jD,kBAAkBlpD,SAAS2oD,IAC5BA,EAAStmD,MAAMkW,EAAM4wC,aAAe5wC,EAAO/H,EAAQ,GAE3D,EAEJ,MAAM44C,GAAqB,IAAM,IAAIH,GAkCrC,SAASI,GAAkBC,GACvB,OAAsB,OAAdA,GACiB,iBAAdA,GACP1jD,KAAyB0jD,CACjC,CAeA,SAASC,KACL,OAAOC,EACX,CACA,SAASA,GAAgB7tC,GAChB4rB,GAAmBziC,UAExByiC,GAAmBziC,QAAQyxC,YAAa,EACxChP,GAAmBziC,QAAQi2C,cAC3Bp/B,GAAYA,IAChB,CA8BA,MAAM8tC,GAAe,CACjBC,MAAO,IAAMxqD,OAAO4C,eAAeC,KAAK8qC,QAAQhrC,UAAW,YAEzD8nD,GAAU,CAAC,EACXC,GAAW,CAAC,EAIlB,IAAK,MAAMplD,MAAOilD,GACdG,GAASplD,IAAO,UACStB,IAAjBymD,GAAQnlD,MACRmlD,GAAQnlD,IAAOilD,GAAajlD,OACzBmlD,GAAQnlD,KAIvB,MAAMqlD,GAAsB,EAAEz/C,EAAGC,EAAG4a,EAAG/kB,KAAO,gBAAgBkK,MAAMC,MAAM4a,MAAM/kB,KAwBhF,MAAM4pD,GAAe,KAAM,CAAG,GAC9B,MAAMC,WAA2Bpc,GAC7BgC,QAAU,CACVC,6BACI,OAAO3M,IACX,CACAgV,iBAAmB,CACnB+R,mBAAqB,CACrBrZ,6BAA+B,CAC/BzC,iBAAmB,CACnBz4B,8BACI,MAXmB,CAAG,CAY1B,CACAq7B,yBAEA,CACAF,sBAAsBqZ,EAAQzlD,EAAKgM,GAC/B,OAAOA,EAAQ05C,aAAa1lD,IAAQ,CACxC,CACA0qC,2BACI,OAAO,CACX,CACAa,kCAAiC,WAAEz4B,EAAU,cAAED,KAAkBjG,IAG7D,OADAmpB,GAAwBj1B,KAAM8L,EADf0pB,GAAU1pB,EAAQkG,GAAc,CAAC,EAAGhS,OAE5C,CAAEgS,aAAYD,mBAAkBjG,EAC3C,EAEJ,MAAMjL,GAAiBmQ,GAAmB,CACtCb,4BAA6Bq0C,GAC7BrzC,kBAAmBqzC,KAgCvB,MACMK,GAAex+C,GAAUA,EAAQ,KAAQ,EAAIA,EADlC,IAEjB,IAAIy+C,IAAY,EAwChBhrD,EAAQirD,gBApsCgB,EAAG3kD,WAAU2C,SAAQrF,WAAU,EAAM8d,iBAAgBwpC,kBAAiB/G,yBAAwB,EAAMC,OAAO,WAE3H8G,IACA9G,EAAO,OACP/mC,IAAS,EAAO,6CAIpB,IAAK2lC,GAAeJ,KACpB,MAAMuI,EAAyBjrD,EAAM2B,WAAWkE,GAAoBi9C,YAChEmI,IACAnI,EAAcmI,GAClB,MAAMrZ,EAAY6Q,KAEZyI,EAxDV,SAAsB9kD,GAClB,MAAM+kD,EAAW,GAMjB,OAJAnrD,EAAMorD,SAAS1qD,QAAQ0F,GAAWsW,IAC1B1c,EAAMqrD,eAAe3uC,IACrByuC,EAASx5C,KAAK+K,EAAM,IAErByuC,CACX,CAgD6BG,CAAallD,GACtC,IAAImlD,EAAmBL,EACvB,MAAMM,EAAU,IAAIthD,IAGduhD,EAAkBzrD,EAAMuF,OAAOgmD,GAE/BG,EAAc1rD,EAAMuF,OAAO,IAAI4D,KAAO3D,QAGtC44B,EAAkBp+B,EAAMuF,QAAO,GAWrC,GAVAvD,GAA0B,KACtBo8B,EAAgB54B,SAAU,EA1ElC,SAA2BY,EAAUslD,GACjCtlD,EAAS1F,SAASgc,IACd,MAAMxX,EAAMq/C,GAAY7nC,GACxBgvC,EAAYpiD,IAAIpE,EAAKwX,EAAM,GAEnC,CAsEQivC,CAAkBT,EAAkBQ,GACpCD,EAAgBjmD,QAAU+lD,CAAgB,IAE9C3uC,IAAiB,KACbwhB,EAAgB54B,SAAU,EAC1BkmD,EAAYzzB,QACZuzB,EAAQvzB,OAAO,IAEfmG,EAAgB54B,QAChB,OAAQtE,EAAiBmH,cAAcnH,EAAiB0qD,SAAU,KAAML,EAAiBnkC,KAAK1K,GAAWxb,EAAiBmH,cAAc27C,GAAe,CAAE9+C,IAAKq/C,GAAY7nC,GAAQ6E,WAAW,EAAM7d,UAASA,QAAUE,EAAmBqgD,sBAAuBA,EAAuBC,KAAMA,GAAQxnC,MAGzS6uC,EAAmB,IAAIA,GAGvB,MAAMM,EAAcJ,EAAgBjmD,QAAQ4hB,IAAIm9B,IAC1CuH,EAAaZ,EAAiB9jC,IAAIm9B,IAElCwH,EAAaF,EAAY5+C,OAC/B,IAAK,IAAI8U,EAAI,EAAGA,EAAIgqC,EAAYhqC,IAAK,CACjC,MAAM7c,EAAM2mD,EAAY9pC,IACS,IAA7B+pC,EAAWpiD,QAAQxE,IACnBsmD,EAAQhuC,IAAItY,EAEpB,CA4CA,MAzCa,SAATg/C,GAAmBsH,EAAQ/8C,OAC3B88C,EAAmB,IAIvBC,EAAQ9qD,SAASwE,IAEb,IAAiC,IAA7B4mD,EAAWpiD,QAAQxE,GACnB,OACJ,MAAMwX,EAAQgvC,EAAY5qD,IAAIoE,GAC9B,IAAKwX,EACD,OACJ,MAAMsvC,EAAiBH,EAAYniD,QAAQxE,GAgB3CqmD,EAAiBv+B,OAAOg/B,EAAgB,EAAG9qD,EAAiBmH,cAAc27C,GAAe,CAAE9+C,IAAKq/C,GAAY7nC,GAAQ6E,WAAW,EAAOC,eAfvH,KACXkqC,EAAYhtC,OAAOxZ,GACnBsmD,EAAQ9sC,OAAOxZ,GAEf,MAAM+mD,EAAcR,EAAgBjmD,QAAQixC,WAAWyV,GAAiBA,EAAahnD,MAAQA,IAG7F,GAFAumD,EAAgBjmD,QAAQwnB,OAAOi/B,EAAa,IAEvCT,EAAQ/8C,KAAM,CAEf,GADAg9C,EAAgBjmD,QAAU0lD,GACA,IAAtBtZ,EAAUpsC,QACV,OACJs9C,IACAthC,GAAkBA,GACtB,GAE0JzY,OAAQA,EAAQk7C,sBAAuBA,EAAuBC,KAAMA,GAAQxnC,GAAO,IAIrP6uC,EAAmBA,EAAiBnkC,KAAK1K,IACrC,MAAMxX,EAAMwX,EAAMxX,IAClB,OAAOsmD,EAAQniD,IAAInE,GAAO,EAAWhE,EAAiBmH,cAAc27C,GAAe,CAAE9+C,IAAKq/C,GAAY7nC,GAAQ6E,WAAW,EAAM0iC,sBAAuBA,EAAuBC,KAAMA,GAAQxnC,EAAO,IAE1L,eAARO,IACS,SAATinC,GACAqH,EAAiBt+C,OAAS,GAC1BqQ,QAAQC,KAAK,kJAETrc,EAAiBmH,cAAcnH,EAAiB0qD,SAAU,KAAMJ,EAAQ/8C,KAC1E88C,EACAA,EAAiBnkC,KAAK1K,GAAU1c,EAAM+jD,aAAarnC,KAAS,EAomCtE5c,EAAQqsD,oBA5iCoB,EAAG/lD,eAC3BlF,EAAiBgB,WAAU,KACvBjC,EAAU6rB,SAAQ,EAAO,0GAA0G,GACpI,IACK5qB,EAAiBmH,cAAcw8C,GAAa,CAAEh9C,GAAIxC,GAAY,IAAM,OAAOwC,QAAWzB,IAyiClGtG,EAAQ0kD,6BAA+BA,GACvC1kD,EAAQ6pD,aAAeA,GACvB7pD,EAAQm4C,SAAWA,GACnBn4C,EAAQ+kD,YAAcA,GACtB/kD,EAAQ+F,mBAAqBA,EAC7B/F,EAAQssD,WAp+BR,UAAoB,SAAEhmD,EAAQ,SAAEnB,EAAQ,OAAE7C,GAAS,IAC/C,MAAO,CAAEiqD,GAAersD,EAAM6iD,UAAUuC,GAAangD,IAC/CqnD,EAAiBtsD,EAAMuF,YAAO3B,GAIpC,IAAKwhD,GAAangD,GAAW,CACzB,MAAM,SAAE0C,KAAa4kD,GAAmBtnD,EACxCqnD,EAAe9mD,QAAUmC,EACzB3C,EAAaunD,EACjB,CAUA,OATAvsD,EAAMkC,WAAU,KACRkjD,GAAangD,IACbA,IAAWw0B,MAAK,EAAG9xB,cAAa4kD,MAC5BvnD,EAAaunD,GACbD,EAAe9mD,QAAUmC,EACzB0kD,GAAY,EAAK,GAEzB,GACD,IACKnrD,EAAiBmH,cAAclG,EAAYmG,SAAU,CAAEvI,MAAO,CAAE4H,SAAU2kD,EAAe9mD,QAASpD,WAAYgE,EAC1H,EAg9BAtG,EAAQ0sD,aA3hCR,UAAsB,SAAEpmD,EAAQ,YAAE2M,KAAgBkE,IAC9ClE,GAAeD,GAAwBC,IAIvCkE,EAAS,IAAKjX,EAAM2B,WAAWR,MAAyB8V,IAKjD1V,SAAW8D,GAAY,IAAM4R,EAAO1V,WAK3C,MAAMoC,EAAU3D,EAAM+D,SAAQ,IAAMkT,GAAQ,CAACoH,KAAKC,UAAUrH,EAAOe,YAAaf,EAAO5V,mBAAoB4V,EAAOzV,gBAClH,OAAQN,EAAiBmH,cAAclH,EAAoBmH,SAAU,CAAEvI,MAAO4D,GAAWyC,EAC7F,EA2gCAtG,EAAQqB,oBAAsBA,EAC9BrB,EAAQ2B,cAAgBA,EACxB3B,EAAQo4B,YAAcA,GACtBp4B,EAAQ+B,gBAAkBA,EAC1B/B,EAAQ6nD,QAAUA,GAClB7nD,EAAQuG,yBAA2BA,EACnCvG,EAAQuuC,cAAgBA,GACxBvuC,EAAQyb,gBAAkBA,GAC1Bzb,EAAQ+J,kBAAoBA,EAC5B/J,EAAQqD,QAAUA,GAClBrD,EAAQo8B,qBAAuBA,GAC/Bp8B,EAAQmpD,kBAAoBA,GAC5BnpD,EAAQq8B,WAAaA,GACrBr8B,EAAQkL,eAAiBA,EACzBlL,EAAQqiC,WAAaA,GACrBriC,EAAQm7B,wBAA0BA,GAClCn7B,EAAQ+L,MAAQA,EAChB/L,EAAQ6jC,UAAYA,GACpB7jC,EAAQ2sD,yBAt6CR,SAAkCvnD,GAC9B,OAAOuB,EAAsB8R,GAAsBrT,EAAK,CAAEiO,oBAAoB,GAASmvC,GAAelQ,GAAwB+P,IAClI,EAq6CAriD,EAAQ2G,sBAAwBA,EAChC3G,EAAQ6zB,MAAQA,GAChB7zB,EAAQoQ,SAAWA,GACnBpQ,EAAQogC,WAAaA,GACrBpgC,EAAQooD,aAAeA,GACvBpoD,EAAQqoD,OAASA,GACjBroD,EAAQmT,YAAcA,GACtBnT,EAAQgC,UAAYA,EACpBhC,EAAQmc,aAAeA,GACvBnc,EAAQiqD,kBAAoBA,GAC5BjqD,EAAQwK,cAAgBA,EACxBxK,EAAQ8S,kBAAoBA,GAC5B9S,EAAQ0iD,EAAIA,GACZ1iD,EAAQkX,mBAAqBA,GAC7BlX,EAAQ6W,IAAMA,GACd7W,EAAQyiD,OAASA,GACjBziD,EAAQ+5B,YAAcA,GACtB/5B,EAAQm8B,6BAA+BA,GACvCn8B,EAAQgd,KAAOA,GACfhd,EAAQgX,mBAAqBA,GAC7BhX,EAAQ+uB,OAASA,GACjB/uB,EAAQ4sD,8BAnKR,SAAuCn3C,EAASlS,EAAM6vB,EAAWhiB,GAC7DoJ,OAAOuhB,yBAA2BvhB,OAAOuhB,uBAAyB,IAAI1yB,KACtE,MAAMtB,EAAK0N,EAAQiuC,QAAQxnB,IACrBx3B,EAfV,SAAsB+Q,EAASo3C,EAAWz5B,GAAW,MAAES,EAAK,SAAEjL,EAAQ,KAAEtD,IACpE,IAAKklC,GAASF,QACV,OAOJ,OANkB70C,EAAQpS,QAAQ,CAAE,CAACwpD,GAAYz5B,GAAa,CAC1DS,QACAjL,WACAlF,OAAQ5gB,MAAMC,QAAQuiB,GAAQmlC,GAAoBnlC,GAAQA,EAC1DsE,KAAM,QAGd,CAKsBkjC,CAAar3C,EAASlS,EAAM6vB,EAAWhiB,GAIzD,OAHIrJ,GAAMrD,GACN8V,OAAOuhB,uBAAuBvyB,IAAIqyB,GAAc9zB,EAAIxE,GAAOmB,GAExDA,CACX,EA4JA1E,EAAQmL,UAAYA,GACpBnL,EAAQ+sD,sBAjPR,SAA+B7C,GAC3B,GAAID,GAAkBC,GAClB,OAAOA,EAAU1jD,EAGzB,EA6OAxG,EAAQ0pD,aAAeA,GACvB1pD,EAAQypD,qBAAuBA,GAC/BzpD,EAAQ6oD,kBAAoBA,GAC5B7oD,EAAQgtD,SA7XR,YAAqBC,GACjB,MAAM76B,EAAQlyB,EAAMuF,OAAO,IACpBmyB,EAAMs1B,GAAWhtD,EAAM6iD,SAASkK,EAAM76B,EAAM1sB,UAYnD,MAAO,CAACkyB,EAXS13B,EAAMuI,aAAaqZ,IAChCsQ,EAAM1sB,QACc,iBAAToc,EACD6nC,GAAK,EAAGsD,EAAM9/C,OAAQilB,EAAM1sB,QAAU,GACtCoc,EACVorC,EAAQD,EAAM76B,EAAM1sB,SAAS,GAKjC,CAACunD,EAAM9/C,UAAW8/C,IAEtB,EA+WAjtD,EAAQmtD,2BA5HR,SAA0BrC,GACtB,MAAO7iD,EAAgBmlD,GAAqBltD,EAAM6iD,SAAS+H,GACrDvjD,EAAcR,GAAe,CAAC,GAAG,GACjC0O,EAAUlQ,GAAY,IACjB,IAAIolD,GAAmB,CAAEvnD,MAAO,CAAC,EAAGmE,eAAe,CAAEujD,mBAgBhE,OAdA5qD,EAAMkC,WAAU,KACZqT,EAAQ9M,MAAM,CAAC,GACR,IAAM8M,EAAQ7M,YACtB,CAAC6M,IACJvV,EAAMkC,WAAU,KACZqT,EAAQtP,SAAS,CACb0uB,SAAWhyB,IACPuqD,EAAkB,IAAKvqD,GAAI,GAEjC,GACH,CAACuqD,EAAmB33C,IAIhB,CAACxN,EAHe1C,GAAY,IAAO8nD,GAC/BjxB,GAAqB3mB,EAAS43C,KAG7C,EAwGArtD,EAAQstD,2BA7ER,SAA0B/gD,GACtB,IAAIghD,EAAe7G,GAAe,GAC9B8G,EAAe9G,GAAe,GAClC,MAAM5kD,EAAgBF,IActB,OAbAzB,EAAU6kB,aAAazY,IAASzK,GAAgB,8GAChD3B,EAAU6rB,QAAQg/B,GAAW,2FAC7BA,IAAY,EACRz+C,GACAghD,EAAehhD,EAAMuD,QAAUy9C,EAC/BC,EAAejhD,EAAMwD,QAAUy9C,GAE1B1rD,IACLyrD,EAAezrD,EAAc44B,SAAS,SAAU,GAChD8yB,EAAe1rD,EAAc44B,SAAS,SAAU,IAI7C,CAAE5qB,OAFM23C,GAAa8F,EAAcxC,IAEzBh7C,OADF03C,GAAa+F,EAAczC,IAE9C,EA4DA/qD,EAAQiZ,YAAcA,GACtBjZ,EAAQytD,gBA5QR,WACI,OAAOloD,EAAYykD,GACvB,EA2QAhqD,EAAQ0tD,iBA9oBR,SAA0BlrD,GAEtB,OADA6a,IAAS,EAAO,6EACTqrC,GAAU,CAAEC,UAAWnmD,GAClC,EA4oBAxC,EAAQ4iD,eAAiBA,GACzB5iD,EAAQ2tD,UAnXR,SAAmBnrD,GAAK,KAAE4b,EAAI,OAAE/O,EAAM,OAAE8P,EAAM,KAAEC,GAAO,GAAU,CAAC,GAC9D,MAAOG,EAAUquC,GAAa1tD,EAAM6iD,UAAS,GAe7C,OAdA7iD,EAAMkC,WAAU,KACZ,IAAKI,EAAIkD,SAAY0Z,GAAQG,EACzB,OACJ,MAIMnO,EAAU,CACZgN,KAAOA,GAAQA,EAAK1Y,cAAY5B,EAChCuL,SACA8P,OAAmB,SAAXA,EAAoB,MAAQA,GAExC,OAAO/e,EAAI6E,OAAOzC,EAAIkD,SATN,KACZkoD,GAAU,GACHxuC,OAAOtb,EAAY,IAAM8pD,GAAU,KAONx8C,EAAQ,GACjD,CAACgN,EAAM5b,EAAK6M,EAAQ+P,IAChBG,CACX,EAmWAvf,EAAQmqD,2BAA6BA,GACrCnqD,EAAQ6tD,qBA5OR,WACI,MAAOC,EAAajL,GAAqBD,KACnCmL,EAA+B5D,KAOrC,OANAjqD,EAAMkC,WAAU,KAIZmwB,GAAKsG,YAAW,IAAMtG,GAAKsG,YAAW,IAAOvO,GAAsB5kB,SAAU,KAAQ,GACtF,CAACm9C,IACItmC,IACJwxC,GAA6B,KACzBzjC,GAAsB5kB,SAAU,EAChCooD,IACAvxC,GAAU,GACZ,CAEV,EA6NAvc,EAAQguD,aA/xPR,WACI,OAGmB,QADJnqD,EAFE3D,EAAM2B,WAAWE,KAGD8B,EAAQ4d,UAD7C,IAAmB5d,CADnB,EA8xPA7D,EAAQkC,0BAA4BA,EACpClC,EAAQiuD,kBA1wBR,SAA2BC,KAAcx2C,GAIrC,MAAMy2C,EAAeD,EAAU/gD,OAW/B,OAAOg6C,GAAuBzvC,GAV9B,WACI,IAAIiQ,EAAS,GACb,IAAK,IAAI1F,EAAI,EAAGA,EAAIksC,EAAclsC,IAAK,CACnC0F,GAAUumC,EAAUjsC,GACNvK,EAAOuK,KAEjB0F,GAAUjQ,EAAOuK,GAAGjhB,MAC5B,CACA,OAAO2mB,CACX,GAEJ,EA2vBA3nB,EAAQ0mD,eAAiBA,GACzB1mD,EAAQwhB,YAAcA,GACtBxhB,EAAQkpD,iBAAmBA,GAC3BlpD,EAAQouD,uBAtiBR,WACI,MAAMC,EAA0BnF,MAC1B,cAAExnD,GAAkBxB,EAAM2B,WAAWR,GAC3C,MAAsB,UAAlBK,IAGuB,WAAlBA,GAIE2sD,EAEf,EA2hBAruD,EAAQsuD,mBAlOR,WAOI,OANcltD,EAAiBqH,aAAY,KACvC,MAAM2V,EAAO+pB,GAAmBziC,QAC3B0Y,GAELA,EAAKijC,WAAW,GACjB,GAEP,EA2NArhD,EAAQ0oD,UAAYA,GACpB1oD,EAAQuuD,UA5uBR,SAAmBt8C,EAAQkF,EAAS,CAAC,GACjC,MAAM,SAAE1V,GAAavB,EAAM2B,WAAWR,GAChCmtD,EAAwBtuD,EAAMuF,OAAO,MACrCxF,EAAQymD,GAAel8C,EAAcyH,GAAUA,EAAOjR,MAAQiR,GAwBpE,OAvBA/R,EAAM+D,SAAQ,IACHhE,EAAMo5B,QAAO,CAACx2B,EAAG2G,IAKhB/H,EACO+H,EAAI3G,IACX2rD,EAAsB9oD,SACtB8oD,EAAsB9oD,QAAQuuB,OAElCu6B,EAAsB9oD,QAAUwuB,GAAU,CACtC3J,KAAMtqB,EAAMe,MACZynB,GAAI5lB,EACJ6qB,SAAUztB,EAAMwK,cAChBqB,KAAM,YACHqL,EACH0d,SAAUrrB,IAEPvJ,EAAMe,UAElB,CAACud,KAAKC,UAAUrH,KAvMvB,SAAqBlX,EAAOsc,GACxBra,GAA0B,KACtB,GAAIsI,EAAcvK,GAEd,OADAsc,EAAStc,EAAMe,OACRf,EAAMg5B,SAAS1c,EAC1B,GACD,CAACtc,EAAOsc,GACf,CAiMIkyC,CAAYx8C,GAASpP,GAAM5C,EAAMuJ,IAAI6C,WAAWxJ,MACzC5C,CACX,EAitBAD,EAAQ0uD,QAhoBR,WACI,MAAMtsB,EAAOskB,GAAe,GAE5B,OADAmC,IAAmBtmC,GAAM6f,EAAK54B,IAAI+Y,KAC3B6f,CACX,EA6nBApiC,EAAQynD,aAAeA,GACvBznD,EAAQ8c,iBAAmBA,GAC3B9c,EAAQ2uD,YAvsBR,SAAqB1uD,GACjB,MAAMytB,EAAWg5B,GAAezmD,EAAMwK,eAMtC,OALAvK,EAAMkC,WAAU,IACLnC,EAAMw4B,0BAA0B/a,KAAKkxC,IACxClhC,EAASlkB,IAAIolD,EAAY,KAE9B,CAAC3uD,IACGytB,CACX,EAgsBA1tB,EAAQ6uD,kBAzpBR,WAEI,OADAxxC,IAAS,EAAO,4DACTqrC,IACX,EAupBA1oD,EAAQ4B,wBAA0BA,EAClC5B,EAAQ8uD,cA1lBR,WACI,OAAOvpD,GAAY,IAAM,IAAIyjD,GAAsB,SACvD,EAylBAhpD,EAAQ2pD,KAAOA,GACf3pD,EAAQka,YAAcA,E","sources":["webpack://maCosta/./node_modules/framer-motion/dist/cjs/index.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar React = require('react');\nvar heyListen = require('hey-listen');\nvar dom = require('@motionone/dom');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nfunction _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = Object.create(null);\n    if (e) {\n        Object.keys(e).forEach(function (k) {\n            if (k !== 'default') {\n                var d = Object.getOwnPropertyDescriptor(e, k);\n                Object.defineProperty(n, k, d.get ? d : {\n                    enumerable: true,\n                    get: function () { return e[k]; }\n                });\n            }\n        });\n    }\n    n[\"default\"] = e;\n    return Object.freeze(n);\n}\n\nvar React__default = /*#__PURE__*/_interopDefaultLegacy(React);\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\n\n/**\n * @public\n */\nconst MotionConfigContext = React.createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nconst MotionContext = React.createContext({});\nfunction useVisualElementContext() {\n    return React.useContext(MotionContext).visualElement;\n}\n\n/**\n * @public\n */\nconst PresenceContext = React.createContext(null);\n\nconst isBrowser = typeof document !== \"undefined\";\n\nconst useIsomorphicLayoutEffect = isBrowser ? React.useLayoutEffect : React.useEffect;\n\nconst LazyContext = React.createContext({ strict: false });\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = React.useContext(LazyContext);\n    const presenceContext = React.useContext(PresenceContext);\n    const reducedMotionConfig = React.useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = React.useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceId: presenceContext ? presenceContext.id : undefined,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    React.useEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useIsomorphicLayoutEffect(() => () => visualElement && visualElement.notify(\"Unmount\"), []);\n    return visualElement;\n}\n\nfunction isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return React.useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\n/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nfunction isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nconst variantProps$1 = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps$1.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, React.useContext(MotionContext));\n    return React.useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nconst createDefinition = (propNames) => ({\n    isEnabled: (props) => propNames.some((name) => !!props[name]),\n});\nconst featureDefinitions = {\n    measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    inView: createDefinition([\n        \"whileInView\",\n        \"onViewportEnter\",\n        \"onViewportLeave\",\n    ]),\n};\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        if (key === \"projectionNodeConstructor\") {\n            featureDefinitions.projectionNodeConstructor = features[key];\n        }\n        else {\n            featureDefinitions[key].Component = features[key];\n        }\n    }\n}\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = React.useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\n/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nlet id$2 = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id$2++;\n        }\n    });\n}\n\nconst LayoutGroupContext = React.createContext({});\n\nclass VisualElementHandler extends React__default[\"default\"].Component {\n    /**\n     * Update visual element props as soon as we know this update is going to be commited.\n     */\n    getSnapshotBeforeUpdate() {\n        const { visualElement, props } = this.props;\n        if (visualElement)\n            visualElement.setProps(props);\n        return null;\n    }\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = React.createContext({});\n\nconst motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, projectionNodeConstructor, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        const configAndProps = {\n            ...React.useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        let features = null;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        /**\n         *\n         */\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const lazyStrictMode = React.useContext(LazyContext).strict;\n            const initialLayoutGroupConfig = React.useContext(SwitchLayoutGroupContext);\n            if (context.visualElement) {\n                features = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, lazyStrictMode, preloadedFeatures, projectionId, projectionNodeConstructor ||\n                    featureDefinitions.projectionNodeConstructor, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React__namespace.createElement(VisualElementHandler, { visualElement: context.visualElement, props: configAndProps },\n            features,\n            React__namespace.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement))));\n    }\n    const ForwardRefComponent = React.forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = React.useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\n/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\n/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nconst isMotionValue = (value) => !!(value === null || value === void 0 ? void 0 : value.getVelocity);\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nconst sortTransformProps = (a, b) => transformPropOrder.indexOf(a) - transformPropOrder.indexOf(b);\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform({ transform, transformKeys, }, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Loop over each transform and build them into transformString\n    for (const key of transformKeys) {\n        transformString += `${translateAlias[key] || key}(${transform[key]}) `;\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\n/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable$1(key) {\n    return key.startsWith(\"--\");\n}\n\n/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nconst clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\n/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformKeys, transformOrigin } = state;\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable$1(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nconst createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n});\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return React.useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nconst animationProps = [\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileDrag\",\n    \"whileInView\",\n];\nconst tapProps = [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"];\nconst panProps = [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"];\nconst inViewProps = [\n    \"whileInView\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"viewport\",\n];\n/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"layout\",\n    \"layoutId\",\n    \"layoutDependency\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"drag\",\n    \"dragControls\",\n    \"dragListener\",\n    \"dragConstraints\",\n    \"dragDirectionLock\",\n    \"dragSnapToOrigin\",\n    \"_dragX\",\n    \"_dragY\",\n    \"dragElastic\",\n    \"dragMomentum\",\n    \"dragPropagation\",\n    \"dragTransition\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"layoutScroll\",\n    ...inViewProps,\n    ...tapProps,\n    ...animationProps,\n    ...panProps,\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return validMotionProps.has(key);\n}\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nfunction calcOrigin$1(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin$1(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin$1(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nconst isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = React.useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return React.createElement(Component, elementProps);\n    };\n    return useRender;\n}\n\n/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nfunction renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\n/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nfunction scrapeMotionValuesFromProps$1(props) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) || isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nfunction scrapeMotionValuesFromProps(props) {\n    const newValues = scrapeMotionValuesFromProps$1(props);\n    for (const key in props) {\n        if (isMotionValue(props[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nfunction resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nconst isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = React.useContext(MotionContext);\n    const presenceContext = React.useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props);\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps$1,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement, projectionNodeConstructor) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        projectionNodeConstructor,\n        Component,\n    };\n}\n\nexports.AnimationType = void 0;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(exports.AnimationType || (exports.AnimationType = {}));\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    React.useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture({ whileFocus, visualElement, }) {\n    const { animationState } = visualElement;\n    const onFocus = () => {\n        animationState && animationState.setActive(exports.AnimationType.Focus, true);\n    };\n    const onBlur = () => {\n        animationState && animationState.setActive(exports.AnimationType.Focus, false);\n    };\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nfunction isMouseEvent(event) {\n    // PointerEvent inherits from MouseEvent so we can't use a straight instanceof check.\n    if (typeof PointerEvent !== \"undefined\" && event instanceof PointerEvent) {\n        return !!(event.pointerType === \"mouse\");\n    }\n    return event instanceof MouseEvent;\n}\nfunction isTouchEvent(event) {\n    const hasTouches = !!event.touches;\n    return hasTouches;\n}\n\n/**\n * Filters out events not attached to the primary pointer (currently left mouse button)\n * @param eventHandler\n */\nfunction filterPrimaryPointer(eventHandler) {\n    return (event) => {\n        const isMouseEvent = event instanceof MouseEvent;\n        const isPrimaryPointer = !isMouseEvent ||\n            (isMouseEvent && event.button === 0);\n        if (isPrimaryPointer) {\n            eventHandler(event);\n        }\n    };\n}\nconst defaultPagePoint = { pageX: 0, pageY: 0 };\nfunction pointFromTouch(e, pointType = \"page\") {\n    const primaryTouch = e.touches[0] || e.changedTouches[0];\n    const point = primaryTouch || defaultPagePoint;\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction pointFromMouse(point, pointType = \"page\") {\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: isTouchEvent(event)\n            ? pointFromTouch(event, pointType)\n            : pointFromMouse(event, pointType),\n    };\n}\nconst wrapHandler = (handler, shouldFilterPrimaryPointer = false) => {\n    const listener = (event) => handler(event, extractEventInfo(event));\n    return shouldFilterPrimaryPointer\n        ? filterPrimaryPointer(listener)\n        : listener;\n};\n\n// We check for event support via functions in case they've been mocked by a testing suite.\nconst supportsPointerEvents = () => isBrowser && window.onpointerdown === null;\nconst supportsTouchEvents = () => isBrowser && window.ontouchstart === null;\nconst supportsMouseEvents = () => isBrowser && window.onmousedown === null;\n\nconst mouseEventNames = {\n    pointerdown: \"mousedown\",\n    pointermove: \"mousemove\",\n    pointerup: \"mouseup\",\n    pointercancel: \"mousecancel\",\n    pointerover: \"mouseover\",\n    pointerout: \"mouseout\",\n    pointerenter: \"mouseenter\",\n    pointerleave: \"mouseleave\",\n};\nconst touchEventNames = {\n    pointerdown: \"touchstart\",\n    pointermove: \"touchmove\",\n    pointerup: \"touchend\",\n    pointercancel: \"touchcancel\",\n};\nfunction getPointerEventName(name) {\n    if (supportsPointerEvents()) {\n        return name;\n    }\n    else if (supportsTouchEvents()) {\n        return touchEventNames[name];\n    }\n    else if (supportsMouseEvents()) {\n        return mouseEventNames[name];\n    }\n    return name;\n}\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, getPointerEventName(eventName), handler && wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\n\nfunction createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nfunction createHoverEvent(visualElement, isActive, callback) {\n    return (event, info) => {\n        if (!isMouseEvent(event) || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (visualElement.animationState) {\n            visualElement.animationState.setActive(exports.AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", onHoverStart || whileHover\n        ? createHoverEvent(visualElement, true, onHoverStart)\n        : undefined, { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", onHoverEnd || whileHover\n        ? createHoverEvent(visualElement, false, onHoverEnd)\n        : undefined, { passive: !onHoverEnd });\n}\n\n/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nfunction useUnmountEffect(callback) {\n    return React.useEffect(() => () => callback(), []);\n}\n\n/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = React.useRef(false);\n    const cancelPointerEndListeners = React.useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart || onTap || onTapCancel || onPointerDown),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        visualElement.animationState &&\n            visualElement.animationState.setActive(exports.AnimationType.Tap, false);\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.current, event.target)\n            ? onTapCancel && onTapCancel(event, info)\n            : onTap && onTap(event, info);\n    }\n    function onPointerCancel(event, info) {\n        if (!checkPointerEnd())\n            return;\n        onTapCancel && onTapCancel(event, info);\n    }\n    function onPointerDown(event, info) {\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        visualElement.animationState &&\n            visualElement.animationState.setActive(exports.AnimationType.Tap, true);\n        onTapStart && onTapStart(event, info);\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? onPointerDown : undefined, eventOptions);\n    useUnmountEffect(removePointerEndListener);\n}\n\n/**\n * Browser-safe usage of process\n */\nconst defaultEnvironment = \"production\";\nconst env = typeof process === \"undefined\" || process.env === undefined\n    ? defaultEnvironment\n    : process.env.NODE_ENV || defaultEnvironment;\n\nconst warned = new Set();\nfunction warnOnce(condition, message, element) {\n    if (condition || warned.has(message))\n        return;\n    console.warn(message);\n    if (element)\n        console.warn(element);\n    warned.add(message);\n}\n\n/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = React.useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    React.useEffect(() => {\n        if (!shouldObserve || !visualElement.current)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(exports.AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(visualElement.current, options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    React.useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (env !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(exports.AnimationType.InView, true);\n            }\n        });\n    }, [shouldObserve]);\n}\n\nconst makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = React.useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = React.useId();\n    React.useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(React.useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nfunction shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\n/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nconst noop = (any) => any;\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\n// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\n// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nconst createBackIn = (power = 1.525) => (p) => p * p * ((power + 1) * p - power);\nconst backIn = createBackIn();\nconst backOut = reverseEasing(backIn);\nconst backInOut = mirrorEasing(backIn);\n\nconst createAnticipate = (power) => {\n    const backEasing = createBackIn(power);\n    return (p) => (p *= 2) < 1\n        ? 0.5 * backEasing(p)\n        : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n};\nconst anticipate = createAnticipate();\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        heyListen.invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        heyListen.invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone$1(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone: getAnimatableNone$1 };\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nconst underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (to) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: to === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframes$1 = (values) => ({\n    type: \"keyframes\",\n    duration: 0.8,\n    values,\n});\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, to) => {\n    let transitionFactory;\n    if (isKeyframesTarget(to)) {\n        transitionFactory = keyframes$1;\n    }\n    else {\n        transitionFactory =\n            defaultTransitions[valueKey] || defaultTransitions.default;\n    }\n    return { to, ...transitionFactory(to) };\n};\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nconst instantAnimationState = {\n    current: false,\n};\n\n/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\n// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    heyListen.invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nfunction getMixer$1(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer$1(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer$1(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        heyListen.warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\n/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    heyListen.invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    heyListen.invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ from = 0, to = 1, ease, offset, duration = 300, }) {\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: from };\n    /**\n     * Convert values to an array if they've been given as from/to options\n     */\n    const values = Array.isArray(to) ? to : [from, to];\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const times = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    offset && offset.length === values.length\n        ? offset\n        : defaultOffset(values), duration);\n    function createInterpolator() {\n        return interpolate(times, values, {\n            ease: Array.isArray(ease) ? ease : defaultEasing(values, ease),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            values.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    heyListen.warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\n/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ from = 0.0, to = 1.0, restSpeed = 2, restDelta = 0.01, ...options }) {\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: from };\n    let { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = to - from;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working within what looks like a 0-1 range, change the default restDelta\n         * to 0.01\n         */\n        if (restDelta === undefined) {\n            restDelta = Math.min(Math.abs(to - from) / 100, 0.4);\n        }\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (to -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => to -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (to -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(to - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? to : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [from, to] = [to, from];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nfunction decay({ velocity = 0, from = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: from };\n    let amplitude = power * velocity;\n    const ideal = from + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - from;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\n/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nconst frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nconst types = { decay, keyframes, spring };\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate$1({ from, autoplay = true, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    var _a, _b;\n    let { to } = options;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = options\n        .duration;\n    let latest;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[Array.isArray(to) ? \"keyframes\" : type];\n    if ((_b = (_a = animator).needsInterpolation) === null || _b === void 0 ? void 0 : _b.call(_a, from, to)) {\n        interpolateFromNumber = interpolate([0, 100], [from, to], {\n            clamp: false,\n        });\n        from = 0;\n        to = 100;\n    }\n    const animation = animator({ ...options, from, to });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            const state = animation.next(Math.max(0, elapsed));\n            latest = state.value;\n            if (interpolateFromNumber)\n                latest = interpolateFromNumber(latest);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(latest);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls.stop();\n        },\n    };\n}\n\nfunction inertia({ from = 0, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function boundaryNearest(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate$1({\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(from)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({ from, velocity, to: boundaryNearest(from) });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + from;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = boundaryNearest(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ from: v, to: boundary, velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            from,\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n/**\n * Convert Framer Motion's Transition type into Popmotion-compatible options.\n */\nfunction convertTransitionToAnimationOptions({ ease, times, ...transition }) {\n    const options = { ...transition };\n    if (times)\n        options[\"offset\"] = times;\n    /**\n     * Convert any existing durations from seconds to milliseconds\n     */\n    if (transition.duration)\n        options[\"duration\"] = secondsToMilliseconds(transition.duration);\n    if (transition.repeatDelay)\n        options.repeatDelay = secondsToMilliseconds(transition.repeatDelay);\n    /**\n     * Map easing names to Popmotion's easing functions\n     */\n    if (ease) {\n        options[\"ease\"] = isEasingArray(ease)\n            ? ease.map(easingDefinitionToFunction)\n            : easingDefinitionToFunction(ease);\n    }\n    /**\n     * Support legacy transition API\n     */\n    if (transition.type === \"tween\")\n        options.type = \"keyframes\";\n    /**\n     * TODO: Popmotion 9 has the ability to automatically detect whether to use\n     * a keyframes or spring animation, but does so by detecting velocity and other spring options.\n     * It'd be good to introduce a similar thing here.\n     */\n    if (transition.type !== \"spring\")\n        options.type = \"keyframes\";\n    return options;\n}\n/**\n * Get the delay for a value by checking Transition with decreasing specificity.\n */\nfunction getDelayFromTransition(transition, key) {\n    const valueTransition = getValueTransition(transition, key) || {};\n    return valueTransition.delay !== undefined\n        ? valueTransition.delay\n        : transition.delay !== undefined\n            ? transition.delay\n            : 0;\n}\nfunction hydrateKeyframes(options) {\n    if (Array.isArray(options.to) && options.to[0] === null) {\n        options.to = [...options.to];\n        options.to[0] = options.from;\n    }\n    return options;\n}\nfunction getPopmotionAnimationOptions(transition, options, key) {\n    if (Array.isArray(options.to) && transition.duration === undefined) {\n        transition.duration = 0.8;\n    }\n    hydrateKeyframes(options);\n    /**\n     * Get a default transition if none is determined to be defined.\n     */\n    if (!isTransitionDefined(transition)) {\n        transition = {\n            ...transition,\n            ...getDefaultTransition(key, options.to),\n        };\n    }\n    return {\n        ...options,\n        ...convertTransitionToAnimationOptions(transition),\n    };\n}\n/**\n *\n */\nfunction getAnimation(key, value, target, transition, onComplete) {\n    const valueTransition = getValueTransition(transition, key) || {};\n    const { elapsed = 0 } = transition;\n    valueTransition.elapsed =\n        elapsed - secondsToMilliseconds(transition.delay || 0);\n    let origin = valueTransition.from !== undefined ? valueTransition.from : value.get();\n    const isTargetAnimatable = isAnimatable(key, target);\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(key, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    const isOriginAnimatable = isAnimatable(key, origin);\n    heyListen.warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${key} from \"${origin}\" to \"${target}\". ${origin} is not an animatable value - to enable this animation set ${origin} to a value animatable to ${target} via the \\`style\\` property.`);\n    function start() {\n        const options = {\n            from: origin,\n            to: target,\n            velocity: value.getVelocity(),\n            onComplete,\n            onUpdate: (v) => value.set(v),\n        };\n        const animation = valueTransition.type === \"inertia\" ||\n            valueTransition.type === \"decay\"\n            ? inertia({ ...options, ...valueTransition })\n            : animate$1({\n                ...getPopmotionAnimationOptions(valueTransition, options, key),\n                onUpdate: (v) => {\n                    options.onUpdate(v);\n                    valueTransition.onUpdate &&\n                        valueTransition.onUpdate(v);\n                },\n                onComplete: () => {\n                    options.onComplete();\n                    valueTransition.onComplete &&\n                        valueTransition.onComplete();\n                },\n            });\n        return () => animation.stop();\n    }\n    function set() {\n        const finalTarget = resolveFinalValueInKeyframes(target);\n        value.set(finalTarget);\n        onComplete();\n        valueTransition.onUpdate && valueTransition.onUpdate(finalTarget);\n        valueTransition.onComplete && valueTransition.onComplete();\n        return () => { };\n    }\n    const useInstantAnimation = !isOriginAnimatable ||\n        !isTargetAnimatable ||\n        valueTransition.type === false;\n    return useInstantAnimation\n        ? valueTransition.elapsed\n            ? () => delay(set, -valueTransition.elapsed)\n            : set()\n        : start();\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n/**\n * Start animation on a MotionValue. This function is an interface between\n * Framer Motion and Popmotion\n */\nfunction startAnimation(key, value, target, transition = {}) {\n    if (instantAnimationState.current) {\n        transition = { type: false };\n    }\n    return value.start((onComplete) => {\n        return getAnimation(key, value, target, { ...transition, delay: getDelayFromTransition(transition, key) }, onComplete);\n    });\n}\n\n/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\n/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nfunction addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"7.8.0\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Functions to notify when the `MotionValue` updates.\n         *\n         * @internal\n         */\n        this.updateSubscribers = new SubscriptionManager();\n        /**\n         * Functions to notify when the velocity updates.\n         *\n         * @internal\n         */\n        this.velocityUpdateSubscribers = new SubscriptionManager();\n        /**\n         * Functions to notify when the `MotionValue` updates and `render` is set to `true`.\n         *\n         * @internal\n         */\n        this.renderSubscribers = new SubscriptionManager();\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current) {\n                this.updateSubscribers.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.velocityUpdateSubscribers.getSize()) {\n                this.velocityUpdateSubscribers.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render) {\n                this.renderSubscribers.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                this.velocityUpdateSubscribers.notify(this.getVelocity());\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.onChange(updateOpacity)\n     *     const unsubscribeY = y.onChange(updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @privateRemarks\n     *\n     * We could look into a `useOnChange` hook if the above lifecycle management proves confusing.\n     *\n     * ```jsx\n     * useOnChange(x, () => {})\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @public\n     */\n    onChange(subscription) {\n        return this.updateSubscribers.add(subscription);\n    }\n    clearListeners() {\n        this.updateSubscribers.clear();\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` requests a render.\n     *\n     * @param subscriber - A function that's provided the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @internal\n     */\n    onRenderRequest(subscription) {\n        // Render immediately\n        subscription(this.get());\n        return this.renderSubscribers.add(subscription);\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect) {\n        this.passiveEffect = passiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(animation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.stopAnimation = animation(resolve);\n        }).then(() => this.clearAnimation());\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.stopAnimation)\n            this.stopAnimation();\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.stopAnimation;\n    }\n    clearAnimation() {\n        this.stopAnimation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.updateSubscribers.clear();\n        this.renderSubscribers.clear();\n        this.stop();\n    }\n}\nfunction motionValue(init) {\n    return new MotionValue(init);\n}\n\n/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\n/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity$1(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity$1(visualElement));\n}\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a;\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        origin[key] =\n            transitionOrigin !== undefined\n                ? transitionOrigin\n                : (_a = visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.get();\n    }\n    return origin;\n}\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nconst appearStoreId = (id, value) => `${id}: ${value}`;\n\nfunction handoffOptimizedAppearAnimation(id, name) {\n    const { MotionAppearAnimations } = window;\n    const animationId = appearStoreId(id, transformProps.has(name) ? \"transform\" : name);\n    const animation = MotionAppearAnimations && MotionAppearAnimations.get(animationId);\n    if (animation) {\n        /**\n         * We allow the animation to persist until the next frame:\n         *   1. So it continues to play until Framer Motion is ready to render\n         *      (avoiding a potential flash of the element's original state)\n         *   2. As all independent transforms share a single transform animation, stopping\n         *      it synchronously would prevent subsequent transforms from handing off.\n         */\n        sync.render(() => {\n            /**\n             * Animation.cancel() throws so it needs to be wrapped in a try/catch\n             */\n            try {\n                animation.cancel();\n                MotionAppearAnimations.delete(animationId);\n            }\n            catch (e) { }\n        });\n        return animation.currentTime || 0;\n    }\n    else {\n        return 0;\n    }\n}\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        let valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * Make animation instant if this is a transform prop and we should reduce motion.\n         */\n        if (visualElement.shouldReduceMotion && transformProps.has(key)) {\n            valueTransition = {\n                ...valueTransition,\n                type: false,\n                delay: 0,\n            };\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (!value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = handoffOptimizedAppearAnimation(appearId, key);\n            }\n        }\n        let animation = startAnimation(key, value, valueTarget, valueTransition);\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nconst variantPriorityOrder = [\n    exports.AnimationType.Animate,\n    exports.AnimationType.InView,\n    exports.AnimationType.Focus,\n    exports.AnimationType.Hover,\n    exports.AnimationType.Tap,\n    exports.AnimationType.Drag,\n    exports.AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [exports.AnimationType.Animate]: createTypeState(true),\n        [exports.AnimationType.InView]: createTypeState(),\n        [exports.AnimationType.Hover]: createTypeState(),\n        [exports.AnimationType.Tap]: createTypeState(),\n        [exports.AnimationType.Drag]: createTypeState(),\n        [exports.AnimationType.Focus]: createTypeState(),\n        [exports.AnimationType.Exit]: createTypeState(),\n    };\n}\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            React.useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = React.useContext(PresenceContext);\n        React.useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(exports.AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nconst distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Because Safari doesn't trigger mouseup events when it's above a `<select>`\n            if (isMouseEvent(event) && event.buttons === 0) {\n                this.handlePointerUp(event, info);\n                return;\n            }\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (isTouchEvent(event) && event.touches.length > 1)\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nconst createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nfunction eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\n/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nfunction isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys$1 = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys$1 = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys$1);\n    transformAxis(box.y, transform, yKeys$1);\n}\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: AnyPointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.layoutBox[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(exports.AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(exports.AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        heyListen.invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints === null || constraints === void 0 ? void 0 : constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return startAnimation(axis, axisValue, 0, transition);\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, ((_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    React.useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    React.useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = React.useRef(null);\n    const { transformPagePoint } = React.useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    React.useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    heyListen.invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst setAndResetVelocity = (value, to) => {\n    // Looks odd but setting it twice doesn't render, it'll just\n    // set both prev and current to the latest value\n    value.set(to, false);\n    value.set(to);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        setAndResetVelocity(value, origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    heyListen.invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    heyListen.invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                setAndResetVelocity(value, to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\n// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"7.8.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 7.8.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"Unmount\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Tracks whether this VisualElement's React component is currently present\n         * within the defined React tree.\n         */\n        this.isPresent = true;\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props) {\n        return {};\n    }\n    mount(instance) {\n        var _a;\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (this.parent)\n            this.parent.children.add(this);\n        this.setProps(this.props);\n    }\n    unmount() {\n        var _a, _b, _c;\n        (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n        (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.onChange((latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.onRenderRequest(this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type)\n            return 0;\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures(renderedProps, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n        const features = [];\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (env !== \"production\" && preloadedFeatures && isStrict) {\n            heyListen.invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Component } = featureDefinitions[name];\n            /**\n             * It might be possible in the future to use this moment to\n             * dynamically request functionality. In initial tests this\n             * was producing a lot of duplication amongst bundles.\n             */\n            if (isEnabled(renderedProps) && Component) {\n                features.push(React.createElement(Component, {\n                    key: name,\n                    ...renderedProps,\n                    visualElement: this,\n                }));\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n            });\n        }\n        return features;\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    setProps(props) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.props = props;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props), this.prevMotionValues);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        var _a;\n        return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        var _a;\n        return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n    }\n    getVariantContext(startAtParent = false) {\n        var _a, _b;\n        if (startAtParent)\n            return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n        if (!this.isControllingVariants) {\n            const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        var _a;\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (this.hasValue(key))\n            this.removeValue(key);\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n        this.bindToMotionValue(key, value);\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        var _a;\n        this.values.delete(key);\n        (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        this.valueSubscriptions.delete(key);\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    /**\n     * Get a motion value for this key. If called with a default\n     * value, we'll create one if none exists.\n     */\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue);\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        var _a;\n        (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nfunction getComputedStyle$1(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle$1(instance);\n            const value = (isCSSVariable$1(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps$1(props);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        var _a;\n        if (transformProps.has(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nclass MeasureLayoutWithContext extends React__default[\"default\"].Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = React.useContext(LayoutGroupContext);\n    return (React__default[\"default\"].createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: React.useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    startAnimation(\"\", value, to, transition);\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\n/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nfunction buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nconst compareByDepth = (a, b) => a.depth - b.depth;\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id$1 = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id$1++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n            this.animationId++;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = (_c = this.options.visualElement) === null || _c === void 0 ? void 0 : _c.getProps().transformTemplate;\n            this.prevTransformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.layoutBox);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            const transformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layoutBox, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues))\n                return undefined;\n            if ((this.parent.relativeTarget || this.parent.targetDelta) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a, _b;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            this.relativeTarget = this.relativeTargetOrigin = undefined;\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.source) !== ((_a = this.layout) === null || _a === void 0 ? void 0 : _a.source);\n            const isOnlyMember = (((_b = this.getStack()) === null || _b === void 0 ? void 0 : _b.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    },\n                    onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b, _c;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_c = (_b = valuesToRender.opacity) !== null && _b !== void 0 ? _b : this.latestValues.opacity) !== null && _c !== void 0 ? _c : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                const corrected = correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_c = (_b = node.options).onExitComplete) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layoutFeatures,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement, HTMLProjectionNode));\n}\n\n/**\n * @public\n */\nconst m = createMotionProxy(createDomMotionConfig);\n\nfunction useIsMounted() {\n    const isMounted = React.useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = React.useState(0);\n    const forceRender = React.useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = React.useCallback(() => sync.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React__namespace.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = React.useId();\n    const ref = React.useRef(null);\n    const size = React.useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    React.useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React__namespace.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React__namespace.cloneElement(children, { ref })));\n}\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = React.useId();\n    const context = React.useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    React.useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React__namespace.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React__namespace.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React__namespace.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    React.Children.forEach(children, (child) => {\n        if (React.isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    // Support deprecated exitBeforeEnter prop\n    if (exitBeforeEnter) {\n        mode = \"wait\";\n        warnOnce(false, \"Replace exitBeforeEnter with mode='wait'\");\n    }\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    let [forceRender] = useForceUpdate();\n    const forceRenderLayoutGroup = React.useContext(LayoutGroupContext).forceRender;\n    if (forceRenderLayoutGroup)\n        forceRender = forceRenderLayoutGroup;\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exiting = new Set();\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = React.useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = React.useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = React.useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exiting.clear();\n    });\n    if (isInitialRender.current) {\n        return (React__namespace.createElement(React__namespace.Fragment, null, childrenToRender.map((child) => (React__namespace.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1) {\n            exiting.add(key);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exiting.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exiting.forEach((key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        const onExit = () => {\n            allChildren.delete(key);\n            exiting.delete(key);\n            // Remove this child from the present children\n            const removeIndex = presentChildren.current.findIndex((presentChild) => presentChild.key === key);\n            presentChildren.current.splice(removeIndex, 1);\n            // Defer re-rendering until all exiting children have indeed left\n            if (!exiting.size) {\n                presentChildren.current = filteredChildren;\n                if (isMounted.current === false)\n                    return;\n                forceRender();\n                onExitComplete && onExitComplete();\n            }\n        };\n        childrenToRender.splice(insertionIndex, 0, React__namespace.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exiting.has(key) ? (child) : (React__namespace.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (env !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React__namespace.createElement(React__namespace.Fragment, null, exiting.size\n        ? childrenToRender\n        : childrenToRender.map((child) => React.cloneElement(child))));\n};\n\n/**\n * @deprecated\n */\nconst DeprecatedLayoutGroupContext = React.createContext(null);\n\nconst notify = (node) => !node.isLayoutDirty && node.willUpdate(false);\nfunction nodeGroup() {\n    const nodes = new Set();\n    const subscriptions = new WeakMap();\n    const dirtyAll = () => nodes.forEach(notify);\n    return {\n        add: (node) => {\n            nodes.add(node);\n            subscriptions.set(node, node.addEventListener(\"willUpdate\", dirtyAll));\n        },\n        remove: (node) => {\n            var _a;\n            nodes.delete(node);\n            (_a = subscriptions.get(node)) === null || _a === void 0 ? void 0 : _a();\n            subscriptions.delete(node);\n            dirtyAll();\n        },\n        dirty: dirtyAll,\n    };\n}\n\nconst shouldInheritGroup = (inherit) => inherit === true;\nconst shouldInheritId = (inherit) => shouldInheritGroup(inherit === true) || inherit === \"id\";\nconst LayoutGroup = ({ children, id, inheritId, inherit = true }) => {\n    // Maintain backwards-compatibility with inheritId until 7.0\n    if (inheritId !== undefined)\n        inherit = inheritId;\n    const layoutGroupContext = React.useContext(LayoutGroupContext);\n    const deprecatedLayoutGroupContext = React.useContext(DeprecatedLayoutGroupContext);\n    const [forceRender, key] = useForceUpdate();\n    const context = React.useRef(null);\n    const upstreamId = layoutGroupContext.id || deprecatedLayoutGroupContext;\n    if (context.current === null) {\n        if (shouldInheritId(inherit) && upstreamId) {\n            id = id ? upstreamId + \"-\" + id : upstreamId;\n        }\n        context.current = {\n            id,\n            group: shouldInheritGroup(inherit)\n                ? layoutGroupContext.group || nodeGroup()\n                : nodeGroup(),\n        };\n    }\n    const memoizedContext = React.useMemo(() => ({ ...context.current, forceRender }), [key]);\n    return (React__namespace.createElement(LayoutGroupContext.Provider, { value: memoizedContext }, children));\n};\n\nlet id = 0;\nconst AnimateSharedLayout = ({ children, }) => {\n    React__namespace.useEffect(() => {\n        heyListen.warning(false, \"AnimateSharedLayout is deprecated: https://www.framer.com/docs/guide-upgrade/##shared-layout-animations\");\n    }, []);\n    return (React__namespace.createElement(LayoutGroup, { id: useConstant(() => `asl-${id++}`) }, children));\n};\n\n/**\n * `MotionConfig` is used to set configuration options for all children `motion` components.\n *\n * ```jsx\n * import { motion, MotionConfig } from \"framer-motion\"\n *\n * export function App() {\n *   return (\n *     <MotionConfig transition={{ type: \"spring\" }}>\n *       <motion.div animate={{ x: 100 }} />\n *     </MotionConfig>\n *   )\n * }\n * ```\n *\n * @public\n */\nfunction MotionConfig({ children, isValidProp, ...config }) {\n    isValidProp && loadExternalIsValidProp(isValidProp);\n    /**\n     * Inherit props from any parent MotionConfig components\n     */\n    config = { ...React.useContext(MotionConfigContext), ...config };\n    /**\n     * Don't allow isStatic to change between renders as it affects how many hooks\n     * motion components fire.\n     */\n    config.isStatic = useConstant(() => config.isStatic);\n    /**\n     * Creating a new config context object will re-render every `motion` component\n     * every time it renders. So we only want to create a new one sparingly.\n     */\n    const context = React.useMemo(() => config, [JSON.stringify(config.transition), config.transformPagePoint, config.reducedMotion]);\n    return (React__namespace.createElement(MotionConfigContext.Provider, { value: context }, children));\n}\n\n/**\n * Used in conjunction with the `m` component to reduce bundle size.\n *\n * `m` is a version of the `motion` component that only loads functionality\n * critical for the initial render.\n *\n * `LazyMotion` can then be used to either synchronously or asynchronously\n * load animation and gesture support.\n *\n * ```jsx\n * // Synchronous loading\n * import { LazyMotion, m, domAnimations } from \"framer-motion\"\n *\n * function App() {\n *   return (\n *     <LazyMotion features={domAnimations}>\n *       <m.div animate={{ scale: 2 }} />\n *     </LazyMotion>\n *   )\n * }\n *\n * // Asynchronous loading\n * import { LazyMotion, m } from \"framer-motion\"\n *\n * function App() {\n *   return (\n *     <LazyMotion features={() => import('./path/to/domAnimations')}>\n *       <m.div animate={{ scale: 2 }} />\n *     </LazyMotion>\n *   )\n * }\n * ```\n *\n * @public\n */\nfunction LazyMotion({ children, features, strict = false }) {\n    const [, setIsLoaded] = React.useState(!isLazyBundle(features));\n    const loadedRenderer = React.useRef(undefined);\n    /**\n     * If this is a synchronous load, load features immediately\n     */\n    if (!isLazyBundle(features)) {\n        const { renderer, ...loadedFeatures } = features;\n        loadedRenderer.current = renderer;\n        loadFeatures(loadedFeatures);\n    }\n    React.useEffect(() => {\n        if (isLazyBundle(features)) {\n            features().then(({ renderer, ...loadedFeatures }) => {\n                loadFeatures(loadedFeatures);\n                loadedRenderer.current = renderer;\n                setIsLoaded(true);\n            });\n        }\n    }, []);\n    return (React__namespace.createElement(LazyContext.Provider, { value: { renderer: loadedRenderer.current, strict } }, children));\n}\nfunction isLazyBundle(features) {\n    return typeof features === \"function\";\n}\n\nconst ReorderContext = React.createContext(null);\n\nfunction checkReorder(order, value, offset, velocity) {\n    if (!velocity)\n        return order;\n    const index = order.findIndex((item) => item.value === value);\n    if (index === -1)\n        return order;\n    const nextOffset = velocity > 0 ? 1 : -1;\n    const nextItem = order[index + nextOffset];\n    if (!nextItem)\n        return order;\n    const item = order[index];\n    const nextLayout = nextItem.layout;\n    const nextItemCenter = mix(nextLayout.min, nextLayout.max, 0.5);\n    if ((nextOffset === 1 && item.layout.max + offset > nextItemCenter) ||\n        (nextOffset === -1 && item.layout.min + offset < nextItemCenter)) {\n        return moveItem(order, index, index + nextOffset);\n    }\n    return order;\n}\n\nfunction ReorderGroup({ children, as = \"ul\", axis = \"y\", onReorder, values, ...props }, externalRef) {\n    const Component = useConstant(() => motion(as));\n    const order = [];\n    const isReordering = React.useRef(false);\n    heyListen.invariant(Boolean(values), \"Reorder.Group must be provided a values prop\");\n    const context = {\n        axis,\n        registerItem: (value, layout) => {\n            /**\n             * Ensure entries can't add themselves more than once\n             */\n            if (layout &&\n                order.findIndex((entry) => value === entry.value) === -1) {\n                order.push({ value, layout: layout[axis] });\n                order.sort(compareMin);\n            }\n        },\n        updateOrder: (id, offset, velocity) => {\n            if (isReordering.current)\n                return;\n            const newOrder = checkReorder(order, id, offset, velocity);\n            if (order !== newOrder) {\n                isReordering.current = true;\n                onReorder(newOrder\n                    .map(getValue)\n                    .filter((value) => values.indexOf(value) !== -1));\n            }\n        },\n    };\n    React.useEffect(() => {\n        isReordering.current = false;\n    });\n    return (React__namespace.createElement(Component, { ...props, ref: externalRef },\n        React__namespace.createElement(ReorderContext.Provider, { value: context }, children)));\n}\nconst Group = React.forwardRef(ReorderGroup);\nfunction getValue(item) {\n    return item.value;\n}\nfunction compareMin(a, b) {\n    return a.layout.min - b.layout.min;\n}\n\n/**\n * Creates a `MotionValue` to track the state and velocity of a value.\n *\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const scale = useMotionValue(1)\n *\n *   return <motion.div style={{ scale }} />\n * }\n * ```\n *\n * @param initial - The initial state.\n *\n * @public\n */\nfunction useMotionValue(initial) {\n    const value = useConstant(() => motionValue(initial));\n    /**\n     * If this motion value is being used in static mode, like on\n     * the Framer canvas, force components to rerender when the motion\n     * value is updated.\n     */\n    const { isStatic } = React.useContext(MotionConfigContext);\n    if (isStatic) {\n        const [, setLatest] = React.useState(initial);\n        React.useEffect(() => value.onChange(setLatest), []);\n    }\n    return value;\n}\n\nconst isCustomValueType = (v) => {\n    return typeof v === \"object\" && v.mix;\n};\nconst getMixer = (v) => (isCustomValueType(v) ? v.mix : undefined);\nfunction transform(...args) {\n    const useImmediate = !Array.isArray(args[0]);\n    const argOffset = useImmediate ? 0 : -1;\n    const inputValue = args[0 + argOffset];\n    const inputRange = args[1 + argOffset];\n    const outputRange = args[2 + argOffset];\n    const options = args[3 + argOffset];\n    const interpolator = interpolate(inputRange, outputRange, {\n        mixer: getMixer(outputRange[0]),\n        ...options,\n    });\n    return useImmediate ? interpolator(inputValue) : interpolator;\n}\n\nfunction useOnChange(value, callback) {\n    useIsomorphicLayoutEffect(() => {\n        if (isMotionValue(value)) {\n            callback(value.get());\n            return value.onChange(callback);\n        }\n    }, [value, callback]);\n}\nfunction useMultiOnChange(values, handler, cleanup) {\n    useIsomorphicLayoutEffect(() => {\n        const subscriptions = values.map((value) => value.onChange(handler));\n        return () => {\n            subscriptions.forEach((unsubscribe) => unsubscribe());\n            cleanup();\n        };\n    });\n}\n\nfunction useCombineMotionValues(values, combineValues) {\n    /**\n     * Initialise the returned motion value. This remains the same between renders.\n     */\n    const value = useMotionValue(combineValues());\n    /**\n     * Create a function that will update the template motion value with the latest values.\n     * This is pre-bound so whenever a motion value updates it can schedule its\n     * execution in Framesync. If it's already been scheduled it won't be fired twice\n     * in a single frame.\n     */\n    const updateValue = () => value.set(combineValues());\n    /**\n     * Synchronously update the motion value with the latest values during the render.\n     * This ensures that within a React render, the styles applied to the DOM are up-to-date.\n     */\n    updateValue();\n    /**\n     * Subscribe to all motion values found within the template. Whenever any of them change,\n     * schedule an update.\n     */\n    useMultiOnChange(values, () => sync.update(updateValue, false, true), () => cancelSync.update(updateValue));\n    return value;\n}\n\nfunction useTransform(input, inputRangeOrTransformer, outputRange, options) {\n    const transformer = typeof inputRangeOrTransformer === \"function\"\n        ? inputRangeOrTransformer\n        : transform(inputRangeOrTransformer, outputRange, options);\n    return Array.isArray(input)\n        ? useListTransform(input, transformer)\n        : useListTransform([input], ([latest]) => transformer(latest));\n}\nfunction useListTransform(values, transformer) {\n    const latest = useConstant(() => []);\n    return useCombineMotionValues(values, () => {\n        latest.length = 0;\n        const numValues = values.length;\n        for (let i = 0; i < numValues; i++) {\n            latest[i] = values[i].get();\n        }\n        return transformer(latest);\n    });\n}\n\nfunction useDefaultMotionValue(value, defaultValue = 0) {\n    return isMotionValue(value) ? value : useMotionValue(defaultValue);\n}\nfunction ReorderItem({ children, style = {}, value, as = \"li\", onDrag, layout = true, ...props }, externalRef) {\n    const Component = useConstant(() => motion(as));\n    const context = React.useContext(ReorderContext);\n    const point = {\n        x: useDefaultMotionValue(style.x),\n        y: useDefaultMotionValue(style.y),\n    };\n    const zIndex = useTransform([point.x, point.y], ([latestX, latestY]) => latestX || latestY ? 1 : \"unset\");\n    const measuredLayout = React.useRef(null);\n    heyListen.invariant(Boolean(context), \"Reorder.Item must be a child of Reorder.Group\");\n    const { axis, registerItem, updateOrder } = context;\n    React.useEffect(() => {\n        registerItem(value, measuredLayout.current);\n    }, [context]);\n    return (React__namespace.createElement(Component, { drag: axis, ...props, dragSnapToOrigin: true, style: { ...style, x: point.x, y: point.y, zIndex }, layout: layout, onDrag: (event, gesturePoint) => {\n            const { velocity } = gesturePoint;\n            velocity[axis] &&\n                updateOrder(value, point[axis].get(), velocity[axis]);\n            onDrag && onDrag(event, gesturePoint);\n        }, onLayoutMeasure: (measured) => {\n            measuredLayout.current = measured;\n        }, ref: externalRef }, children));\n}\nconst Item = React.forwardRef(ReorderItem);\n\nconst Reorder = {\n    Group,\n    Item,\n};\n\n/**\n * @public\n */\nconst domAnimation = {\n    renderer: createDomVisualElement,\n    ...animations,\n    ...gestureAnimations,\n};\n\n/**\n * @public\n */\nconst domMax = {\n    ...domAnimation,\n    ...drag,\n    ...layoutFeatures,\n    projectionNodeConstructor: HTMLProjectionNode,\n};\n\n/**\n * Combine multiple motion values into a new one using a string template literal.\n *\n * ```jsx\n * import {\n *   motion,\n *   useSpring,\n *   useMotionValue,\n *   useMotionTemplate\n * } from \"framer-motion\"\n *\n * function Component() {\n *   const shadowX = useSpring(0)\n *   const shadowY = useMotionValue(0)\n *   const shadow = useMotionTemplate`drop-shadow(${shadowX}px ${shadowY}px 20px rgba(0,0,0,0.3))`\n *\n *   return <motion.div style={{ filter: shadow }} />\n * }\n * ```\n *\n * @public\n */\nfunction useMotionTemplate(fragments, ...values) {\n    /**\n     * Create a function that will build a string from the latest motion values.\n     */\n    const numFragments = fragments.length;\n    function buildValue() {\n        let output = ``;\n        for (let i = 0; i < numFragments; i++) {\n            output += fragments[i];\n            const value = values[i];\n            if (value)\n                output += values[i].get();\n        }\n        return output;\n    }\n    return useCombineMotionValues(values, buildValue);\n}\n\n/**\n * Creates a `MotionValue` that, when `set`, will use a spring animation to animate to its new state.\n *\n * It can either work as a stand-alone `MotionValue` by initialising it with a value, or as a subscriber\n * to another `MotionValue`.\n *\n * @remarks\n *\n * ```jsx\n * const x = useSpring(0, { stiffness: 300 })\n * const y = useSpring(x, { damping: 10 })\n * ```\n *\n * @param inputValue - `MotionValue` or number. If provided a `MotionValue`, when the input `MotionValue` changes, the created `MotionValue` will spring towards that value.\n * @param springConfig - Configuration options for the spring.\n * @returns `MotionValue`\n *\n * @public\n */\nfunction useSpring(source, config = {}) {\n    const { isStatic } = React.useContext(MotionConfigContext);\n    const activeSpringAnimation = React.useRef(null);\n    const value = useMotionValue(isMotionValue(source) ? source.get() : source);\n    React.useMemo(() => {\n        return value.attach((v, set) => {\n            /**\n             * A more hollistic approach to this might be to use isStatic to fix VisualElement animations\n             * at that level, but this will work for now\n             */\n            if (isStatic)\n                return set(v);\n            if (activeSpringAnimation.current) {\n                activeSpringAnimation.current.stop();\n            }\n            activeSpringAnimation.current = animate$1({\n                from: value.get(),\n                to: v,\n                velocity: value.getVelocity(),\n                type: \"spring\",\n                ...config,\n                onUpdate: set,\n            });\n            return value.get();\n        });\n    }, [JSON.stringify(config)]);\n    useOnChange(source, (v) => value.set(parseFloat(v)));\n    return value;\n}\n\n/**\n * Creates a `MotionValue` that updates when the velocity of the provided `MotionValue` changes.\n *\n * ```javascript\n * const x = useMotionValue(0)\n * const xVelocity = useVelocity(x)\n * const xAcceleration = useVelocity(xVelocity)\n * ```\n *\n * @public\n */\nfunction useVelocity(value) {\n    const velocity = useMotionValue(value.getVelocity());\n    React.useEffect(() => {\n        return value.velocityUpdateSubscribers.add((newVelocity) => {\n            velocity.set(newVelocity);\n        });\n    }, [value]);\n    return velocity;\n}\n\nconst createScrollMotionValues = () => ({\n    scrollX: motionValue(0),\n    scrollY: motionValue(0),\n    scrollXProgress: motionValue(0),\n    scrollYProgress: motionValue(0),\n});\nfunction useScroll({ container, target, layoutEffect = true, ...options } = {}) {\n    const values = useConstant(createScrollMotionValues);\n    const useLifecycleEffect = layoutEffect\n        ? useIsomorphicLayoutEffect\n        : React.useEffect;\n    useLifecycleEffect(() => {\n        return dom.scroll(({ x, y }) => {\n            values.scrollX.set(x.current);\n            values.scrollXProgress.set(x.progress);\n            values.scrollY.set(y.current);\n            values.scrollYProgress.set(y.progress);\n        }, {\n            ...options,\n            container: (container === null || container === void 0 ? void 0 : container.current) || undefined,\n            target: (target === null || target === void 0 ? void 0 : target.current) || undefined,\n        });\n    }, []);\n    return values;\n}\n\n/**\n * @deprecated useElementScroll is deprecated. Convert to useScroll({ container: ref })\n */\nfunction useElementScroll(ref) {\n    warnOnce(false, \"useElementScroll is deprecated. Convert to useScroll({ container: ref }).\");\n    return useScroll({ container: ref });\n}\n\n/**\n * @deprecated useViewportScroll is deprecated. Convert to useScroll()\n */\nfunction useViewportScroll() {\n    warnOnce(false, \"useViewportScroll is deprecated. Convert to useScroll().\");\n    return useScroll();\n}\n\nfunction useAnimationFrame(callback) {\n    const initialTimestamp = React.useRef(0);\n    const { isStatic } = React.useContext(MotionConfigContext);\n    React.useEffect(() => {\n        if (isStatic)\n            return;\n        const provideTimeSinceStart = ({ timestamp, delta }) => {\n            if (!initialTimestamp.current)\n                initialTimestamp.current = timestamp;\n            callback(timestamp - initialTimestamp.current, delta);\n        };\n        sync.update(provideTimeSinceStart, true);\n        return () => cancelSync.update(provideTimeSinceStart);\n    }, [callback]);\n}\n\nfunction useTime() {\n    const time = useMotionValue(0);\n    useAnimationFrame((t) => time.set(t));\n    return time;\n}\n\nclass WillChangeMotionValue extends MotionValue {\n    constructor() {\n        super(...arguments);\n        this.members = [];\n        this.transforms = new Set();\n    }\n    add(name) {\n        let memberName;\n        if (transformProps.has(name)) {\n            this.transforms.add(name);\n            memberName = \"transform\";\n        }\n        else if (!name.startsWith(\"origin\") &&\n            !isCSSVariable$1(name) &&\n            name !== \"willChange\") {\n            memberName = camelToDash(name);\n        }\n        if (memberName) {\n            addUniqueItem(this.members, memberName);\n            this.update();\n        }\n    }\n    remove(name) {\n        if (transformProps.has(name)) {\n            this.transforms.delete(name);\n            if (!this.transforms.size) {\n                removeItem(this.members, \"transform\");\n            }\n        }\n        else {\n            removeItem(this.members, camelToDash(name));\n        }\n        this.update();\n    }\n    update() {\n        this.set(this.members.length ? this.members.join(\", \") : \"auto\");\n    }\n}\nfunction useWillChange() {\n    return useConstant(() => new WillChangeMotionValue(\"auto\"));\n}\n\n/**\n * A hook that returns `true` if we should be using reduced motion based on the current device's Reduced Motion setting.\n *\n * This can be used to implement changes to your UI based on Reduced Motion. For instance, replacing motion-sickness inducing\n * `x`/`y` animations with `opacity`, disabling the autoplay of background videos, or turning off parallax motion.\n *\n * It will actively respond to changes and re-render your components with the latest setting.\n *\n * ```jsx\n * export function Sidebar({ isOpen }) {\n *   const shouldReduceMotion = useReducedMotion()\n *   const closedX = shouldReduceMotion ? 0 : \"-100%\"\n *\n *   return (\n *     <motion.div animate={{\n *       opacity: isOpen ? 1 : 0,\n *       x: isOpen ? 0 : closedX\n *     }} />\n *   )\n * }\n * ```\n *\n * @return boolean\n *\n * @public\n */\nfunction useReducedMotion() {\n    /**\n     * Lazy initialisation of prefersReducedMotion\n     */\n    !hasReducedMotionListener.current && initPrefersReducedMotion();\n    const [shouldReduceMotion] = React.useState(prefersReducedMotion.current);\n    /**\n     * TODO See if people miss automatically updating shouldReduceMotion setting\n     */\n    return shouldReduceMotion;\n}\n\nfunction useReducedMotionConfig() {\n    const reducedMotionPreference = useReducedMotion();\n    const { reducedMotion } = React.useContext(MotionConfigContext);\n    if (reducedMotion === \"never\") {\n        return false;\n    }\n    else if (reducedMotion === \"always\") {\n        return true;\n    }\n    else {\n        return reducedMotionPreference;\n    }\n}\n\n/**\n * @public\n */\nfunction animationControls() {\n    /**\n     * Track whether the host component has mounted.\n     */\n    let hasMounted = false;\n    /**\n     * Pending animations that are started before a component is mounted.\n     * TODO: Remove this as animations should only run in effects\n     */\n    const pendingAnimations = [];\n    /**\n     * A collection of linked component animation controls.\n     */\n    const subscribers = new Set();\n    const controls = {\n        subscribe(visualElement) {\n            subscribers.add(visualElement);\n            return () => void subscribers.delete(visualElement);\n        },\n        start(definition, transitionOverride) {\n            /**\n             * TODO: We only perform this hasMounted check because in Framer we used to\n             * encourage the ability to start an animation within the render phase. This\n             * isn't behaviour concurrent-safe so when we make Framer concurrent-safe\n             * we can ditch this.\n             */\n            if (hasMounted) {\n                const animations = [];\n                subscribers.forEach((visualElement) => {\n                    animations.push(animateVisualElement(visualElement, definition, {\n                        transitionOverride,\n                    }));\n                });\n                return Promise.all(animations);\n            }\n            else {\n                return new Promise((resolve) => {\n                    pendingAnimations.push({\n                        animation: [definition, transitionOverride],\n                        resolve,\n                    });\n                });\n            }\n        },\n        set(definition) {\n            heyListen.invariant(hasMounted, \"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            return subscribers.forEach((visualElement) => {\n                setValues(visualElement, definition);\n            });\n        },\n        stop() {\n            subscribers.forEach((visualElement) => {\n                stopAnimation(visualElement);\n            });\n        },\n        mount() {\n            hasMounted = true;\n            pendingAnimations.forEach(({ animation, resolve }) => {\n                controls.start(...animation).then(resolve);\n            });\n            return () => {\n                hasMounted = false;\n                controls.stop();\n            };\n        },\n    };\n    return controls;\n}\n\n/**\n * Creates `AnimationControls`, which can be used to manually start, stop\n * and sequence animations on one or more components.\n *\n * The returned `AnimationControls` should be passed to the `animate` property\n * of the components you want to animate.\n *\n * These components can then be animated with the `start` method.\n *\n * ```jsx\n * import * as React from 'react'\n * import { motion, useAnimation } from 'framer-motion'\n *\n * export function MyComponent(props) {\n *    const controls = useAnimation()\n *\n *    controls.start({\n *        x: 100,\n *        transition: { duration: 0.5 },\n *    })\n *\n *    return <motion.div animate={controls} />\n * }\n * ```\n *\n * @returns Animation controller with `start` and `stop` methods\n *\n * @public\n */\nfunction useAnimationControls() {\n    const controls = useConstant(animationControls);\n    React.useEffect(controls.mount, []);\n    return controls;\n}\nconst useAnimation = useAnimationControls;\n\nconst wrap = (min, max, v) => {\n    const rangeSize = max - min;\n    return ((((v - min) % rangeSize) + rangeSize) % rangeSize) + min;\n};\n\n/**\n * Cycles through a series of visual properties. Can be used to toggle between or cycle through animations. It works similar to `useState` in React. It is provided an initial array of possible states, and returns an array of two arguments.\n *\n * An index value can be passed to the returned `cycle` function to cycle to a specific index.\n *\n * ```jsx\n * import * as React from \"react\"\n * import { motion, useCycle } from \"framer-motion\"\n *\n * export const MyComponent = () => {\n *   const [x, cycleX] = useCycle(0, 50, 100)\n *\n *   return (\n *     <motion.div\n *       animate={{ x: x }}\n *       onTap={() => cycleX()}\n *      />\n *    )\n * }\n * ```\n *\n * @param items - items to cycle through\n * @returns [currentState, cycleState]\n *\n * @public\n */\nfunction useCycle(...items) {\n    const index = React.useRef(0);\n    const [item, setItem] = React.useState(items[index.current]);\n    const runCycle = React.useCallback((next) => {\n        index.current =\n            typeof next !== \"number\"\n                ? wrap(0, items.length, index.current + 1)\n                : next;\n        setItem(items[index.current]);\n    }, \n    // The array will change on each call, but by putting items.length at\n    // the front of this array, we guarantee the dependency comparison will match up\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [items.length, ...items]);\n    return [item, runCycle];\n}\n\nfunction useInView(ref, { root, margin, amount, once = false } = {}) {\n    const [isInView, setInView] = React.useState(false);\n    React.useEffect(() => {\n        if (!ref.current || (once && isInView))\n            return;\n        const onEnter = () => {\n            setInView(true);\n            return once ? undefined : () => setInView(false);\n        };\n        const options = {\n            root: (root && root.current) || undefined,\n            margin,\n            amount: amount === \"some\" ? \"any\" : amount,\n        };\n        return dom.inView(ref.current, onEnter, options);\n    }, [root, ref, margin, once]);\n    return isInView;\n}\n\n/**\n * Can manually trigger a drag gesture on one or more `drag`-enabled `motion` components.\n *\n * ```jsx\n * const dragControls = useDragControls()\n *\n * function startDrag(event) {\n *   dragControls.start(event, { snapToCursor: true })\n * }\n *\n * return (\n *   <>\n *     <div onPointerDown={startDrag} />\n *     <motion.div drag=\"x\" dragControls={dragControls} />\n *   </>\n * )\n * ```\n *\n * @public\n */\nclass DragControls {\n    constructor() {\n        this.componentControls = new Set();\n    }\n    /**\n     * Subscribe a component's internal `VisualElementDragControls` to the user-facing API.\n     *\n     * @internal\n     */\n    subscribe(controls) {\n        this.componentControls.add(controls);\n        return () => this.componentControls.delete(controls);\n    }\n    /**\n     * Start a drag gesture on every `motion` component that has this set of drag controls\n     * passed into it via the `dragControls` prop.\n     *\n     * ```jsx\n     * dragControls.start(e, {\n     *   snapToCursor: true\n     * })\n     * ```\n     *\n     * @param event - PointerEvent\n     * @param options - Options\n     *\n     * @public\n     */\n    start(event, options) {\n        this.componentControls.forEach((controls) => {\n            controls.start(event.nativeEvent || event, options);\n        });\n    }\n}\nconst createDragControls = () => new DragControls();\n/**\n * Usually, dragging is initiated by pressing down on a `motion` component with a `drag` prop\n * and moving it. For some use-cases, for instance clicking at an arbitrary point on a video scrubber, we\n * might want to initiate that dragging from a different component than the draggable one.\n *\n * By creating a `dragControls` using the `useDragControls` hook, we can pass this into\n * the draggable component's `dragControls` prop. It exposes a `start` method\n * that can start dragging from pointer events on other components.\n *\n * ```jsx\n * const dragControls = useDragControls()\n *\n * function startDrag(event) {\n *   dragControls.start(event, { snapToCursor: true })\n * }\n *\n * return (\n *   <>\n *     <div onPointerDown={startDrag} />\n *     <motion.div drag=\"x\" dragControls={dragControls} />\n *   </>\n * )\n * ```\n *\n * @public\n */\nfunction useDragControls() {\n    return useConstant(createDragControls);\n}\n\n/**\n * Checks if a component is a `motion` component.\n */\nfunction isMotionComponent(component) {\n    return (component !== null &&\n        typeof component === \"object\" &&\n        motionComponentSymbol in component);\n}\n\n/**\n * Unwraps a `motion` component and returns either a string for `motion.div` or\n * the React component for `motion(Component)`.\n *\n * If the component is not a `motion` component it returns undefined.\n */\nfunction unwrapMotionComponent(component) {\n    if (isMotionComponent(component)) {\n        return component[motionComponentSymbol];\n    }\n    return undefined;\n}\n\nfunction useInstantLayoutTransition() {\n    return startTransition;\n}\nfunction startTransition(callback) {\n    if (!rootProjectionNode.current)\n        return;\n    rootProjectionNode.current.isUpdating = false;\n    rootProjectionNode.current.blockUpdate();\n    callback && callback();\n}\n\nfunction useInstantTransition() {\n    const [forceUpdate, forcedRenderCount] = useForceUpdate();\n    const startInstantLayoutTransition = useInstantLayoutTransition();\n    React.useEffect(() => {\n        /**\n         * Unblock after two animation frames, otherwise this will unblock too soon.\n         */\n        sync.postRender(() => sync.postRender(() => (instantAnimationState.current = false)));\n    }, [forcedRenderCount]);\n    return (callback) => {\n        startInstantLayoutTransition(() => {\n            instantAnimationState.current = true;\n            forceUpdate();\n            callback();\n        });\n    };\n}\n\nfunction useResetProjection() {\n    const reset = React__namespace.useCallback(() => {\n        const root = rootProjectionNode.current;\n        if (!root)\n            return;\n        root.resetTree();\n    }, []);\n    return reset;\n}\n\nconst featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nfunction animateStyle(element, valueName, keyframes, { delay, duration, ease }) {\n    if (!supports.waapi())\n        return undefined;\n    const animation = element.animate({ [valueName]: keyframes }, {\n        delay,\n        duration,\n        easing: Array.isArray(ease) ? cubicBezierAsString(ease) : ease,\n        fill: \"both\",\n    });\n    return animation;\n}\n\nfunction startOptimizedAppearAnimation(element, name, keyframes, options) {\n    window.MotionAppearAnimations || (window.MotionAppearAnimations = new Map());\n    const id = element.dataset[optimizedAppearDataId];\n    const animation = animateStyle(element, name, keyframes, options);\n    if (id && animation) {\n        window.MotionAppearAnimations.set(appearStoreId(id, name), animation);\n    }\n    return animation;\n}\n\nconst createObject = () => ({});\nclass StateVisualElement extends VisualElement {\n    build() { }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    resetTransform() { }\n    restoreTransform() { }\n    removeValueFromRenderState() { }\n    renderInstance() { }\n    scrapeMotionValuesFromProps() {\n        return createObject();\n    }\n    getBaseTargetFromProps() {\n        return undefined;\n    }\n    readValueFromInstance(_state, key, options) {\n        return options.initialState[key] || 0;\n    }\n    sortInstanceNodePosition() {\n        return 0;\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }) {\n        const origin = getOrigin(target, transition || {}, this);\n        checkTargetForNewValues(this, target, origin);\n        return { transition, transitionEnd, ...target };\n    }\n}\nconst useVisualState = makeUseVisualState({\n    scrapeMotionValuesFromProps: createObject,\n    createRenderState: createObject,\n});\n/**\n * This is not an officially supported API and may be removed\n * on any version.\n */\nfunction useAnimatedState(initialState) {\n    const [animationState, setAnimationState] = React.useState(initialState);\n    const visualState = useVisualState({}, false);\n    const element = useConstant(() => {\n        return new StateVisualElement({ props: {}, visualState }, { initialState });\n    });\n    React.useEffect(() => {\n        element.mount({});\n        return () => element.unmount();\n    }, [element]);\n    React.useEffect(() => {\n        element.setProps({\n            onUpdate: (v) => {\n                setAnimationState({ ...v });\n            },\n        });\n    }, [setAnimationState, element]);\n    const startAnimation = useConstant(() => (animationDefinition) => {\n        return animateVisualElement(element, animationDefinition);\n    });\n    return [animationState, startAnimation];\n}\n\n// Keep things reasonable and avoid scale: Infinity. In practise we might need\n// to add another value, opacity, that could interpolate scaleX/Y [0,0.01] => [0,1]\n// to simply hide content at unreasonable scales.\nconst maxScale = 100000;\nconst invertScale = (scale) => scale > 0.001 ? 1 / scale : maxScale;\nlet hasWarned = false;\n/**\n * Returns a `MotionValue` each for `scaleX` and `scaleY` that update with the inverse\n * of their respective parent scales.\n *\n * This is useful for undoing the distortion of content when scaling a parent component.\n *\n * By default, `useInvertedScale` will automatically fetch `scaleX` and `scaleY` from the nearest parent.\n * By passing other `MotionValue`s in as `useInvertedScale({ scaleX, scaleY })`, it will invert the output\n * of those instead.\n *\n * ```jsx\n * const MyComponent = () => {\n *   const { scaleX, scaleY } = useInvertedScale()\n *   return <motion.div style={{ scaleX, scaleY }} />\n * }\n * ```\n *\n * @deprecated\n */\nfunction useInvertedScale(scale) {\n    let parentScaleX = useMotionValue(1);\n    let parentScaleY = useMotionValue(1);\n    const visualElement = useVisualElementContext();\n    heyListen.invariant(!!(scale || visualElement), \"If no scale values are provided, useInvertedScale must be used within a child of another motion component.\");\n    heyListen.warning(hasWarned, \"useInvertedScale is deprecated and will be removed in 3.0. Use the layout prop instead.\");\n    hasWarned = true;\n    if (scale) {\n        parentScaleX = scale.scaleX || parentScaleX;\n        parentScaleY = scale.scaleY || parentScaleY;\n    }\n    else if (visualElement) {\n        parentScaleX = visualElement.getValue(\"scaleX\", 1);\n        parentScaleY = visualElement.getValue(\"scaleY\", 1);\n    }\n    const scaleX = useTransform(parentScaleX, invertScale);\n    const scaleY = useTransform(parentScaleY, invertScale);\n    return { scaleX, scaleY };\n}\n\nexports.AnimatePresence = AnimatePresence;\nexports.AnimateSharedLayout = AnimateSharedLayout;\nexports.DeprecatedLayoutGroupContext = DeprecatedLayoutGroupContext;\nexports.DragControls = DragControls;\nexports.FlatTree = FlatTree;\nexports.LayoutGroup = LayoutGroup;\nexports.LayoutGroupContext = LayoutGroupContext;\nexports.LazyMotion = LazyMotion;\nexports.MotionConfig = MotionConfig;\nexports.MotionConfigContext = MotionConfigContext;\nexports.MotionContext = MotionContext;\nexports.MotionValue = MotionValue;\nexports.PresenceContext = PresenceContext;\nexports.Reorder = Reorder;\nexports.SwitchLayoutGroupContext = SwitchLayoutGroupContext;\nexports.VisualElement = VisualElement;\nexports.addPointerEvent = addPointerEvent;\nexports.addScaleCorrector = addScaleCorrector;\nexports.animate = animate;\nexports.animateVisualElement = animateVisualElement;\nexports.animationControls = animationControls;\nexports.animations = animations;\nexports.buildTransform = buildTransform;\nexports.calcLength = calcLength;\nexports.checkTargetForNewValues = checkTargetForNewValues;\nexports.clamp = clamp;\nexports.createBox = createBox;\nexports.createDomMotionComponent = createDomMotionComponent;\nexports.createMotionComponent = createMotionComponent;\nexports.delay = delay;\nexports.distance = distance;\nexports.distance2D = distance2D;\nexports.domAnimation = domAnimation;\nexports.domMax = domMax;\nexports.filterProps = filterProps;\nexports.isBrowser = isBrowser;\nexports.isDragActive = isDragActive;\nexports.isMotionComponent = isMotionComponent;\nexports.isMotionValue = isMotionValue;\nexports.isValidMotionProp = isValidMotionProp;\nexports.m = m;\nexports.makeUseVisualState = makeUseVisualState;\nexports.mix = mix;\nexports.motion = motion;\nexports.motionValue = motionValue;\nexports.optimizedAppearDataAttribute = optimizedAppearDataAttribute;\nexports.pipe = pipe;\nexports.resolveMotionValue = resolveMotionValue;\nexports.spring = spring;\nexports.startOptimizedAppearAnimation = startOptimizedAppearAnimation;\nexports.transform = transform;\nexports.unwrapMotionComponent = unwrapMotionComponent;\nexports.useAnimation = useAnimation;\nexports.useAnimationControls = useAnimationControls;\nexports.useAnimationFrame = useAnimationFrame;\nexports.useCycle = useCycle;\nexports.useDeprecatedAnimatedState = useAnimatedState;\nexports.useDeprecatedInvertedScale = useInvertedScale;\nexports.useDomEvent = useDomEvent;\nexports.useDragControls = useDragControls;\nexports.useElementScroll = useElementScroll;\nexports.useForceUpdate = useForceUpdate;\nexports.useInView = useInView;\nexports.useInstantLayoutTransition = useInstantLayoutTransition;\nexports.useInstantTransition = useInstantTransition;\nexports.useIsPresent = useIsPresent;\nexports.useIsomorphicLayoutEffect = useIsomorphicLayoutEffect;\nexports.useMotionTemplate = useMotionTemplate;\nexports.useMotionValue = useMotionValue;\nexports.usePresence = usePresence;\nexports.useReducedMotion = useReducedMotion;\nexports.useReducedMotionConfig = useReducedMotionConfig;\nexports.useResetProjection = useResetProjection;\nexports.useScroll = useScroll;\nexports.useSpring = useSpring;\nexports.useTime = useTime;\nexports.useTransform = useTransform;\nexports.useUnmountEffect = useUnmountEffect;\nexports.useVelocity = useVelocity;\nexports.useViewportScroll = useViewportScroll;\nexports.useVisualElementContext = useVisualElementContext;\nexports.useWillChange = useWillChange;\nexports.wrap = wrap;\nexports.wrapHandler = wrapHandler;\n"],"names":["Object","defineProperty","exports","value","React","heyListen","dom","_interopDefaultLegacy","e","_interopNamespace","__esModule","n","create","keys","forEach","k","d","getOwnPropertyDescriptor","get","enumerable","freeze","React__default","React__namespace","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","useVisualElementContext","useContext","visualElement","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","isRefObject","ref","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantProps$1","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","initial","context","undefined","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","createDefinition","propNames","isEnabled","featureDefinitions","measureLayout","animation","exit","drag","focus","hover","tap","pan","inView","loadFeatures","features","key","projectionNodeConstructor","Component","useConstant","init","useRef","current","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","id$2","LayoutGroupContext","VisualElementHandler","getSnapshotBeforeUpdate","this","setProps","componentDidUpdate","render","children","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","ForwardRefComponent","forwardRef","externalRef","configAndProps","layoutId","useLayoutId","projectionId","visualState","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","presenceId","id","blockInitialAnimation","animationState","animateChanges","notify","useVisualElement","lazyStrictMode","initialLayoutGroupConfig","createElement","Provider","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","addScaleCorrector","correctors","assign","transformPropOrder","transformProps","Set","isForcedMotionValue","layout","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","sortTransformProps","a","b","buildTransform","transform","transformKeys","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformTemplate","transformString","sort","trim","isCSSVariable$1","getValueAsType","type","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","length","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","push","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","validMotionProps","isValidMotionProp","shouldForward","loadExternalIsValidProp","isValidProp","_a","filterProps","isDom","forwardMotionProps","filteredProps","calcOrigin$1","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps$1","newValues","scrapeMotionValuesFromProps","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","values","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","createDomMotionConfig","AnimationType","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","useDomEvent","isMouseEvent","event","PointerEvent","pointerType","MouseEvent","isTouchEvent","touches","defaultPagePoint","pageX","pageY","pointFromTouch","pointType","point","changedTouches","pointFromMouse","extractEventInfo","wrapHandler","shouldFilterPrimaryPointer","listener","eventHandler","button","supportsPointerEvents","window","onpointerdown","supportsTouchEvents","ontouchstart","supportsMouseEvents","onmousedown","mouseEventNames","pointerdown","pointermove","pointerup","pointercancel","pointerover","pointerout","pointerenter","pointerleave","touchEventNames","getPointerEventName","addPointerEvent","usePointerEvent","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","createHoverEvent","isActive","callback","info","setActive","Hover","isNodeOrChild","child","parentElement","useUnmountEffect","combineFunctions","pipe","transformers","reduce","env","warned","warnOnce","condition","message","console","warn","add","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","useIntersectionObserver","shouldObserve","rootMargin","amount","once","threshold","isIntersecting","isInView","hasEnteredView","InView","getProps","onViewportEnter","onViewportLeave","useMissingIntersectionObserver","fallback","requestAnimationFrame","makeRenderlessComponent","hook","gestureAnimations","whileInView","viewport","onTap","onTapStart","onTapCancel","whileTap","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","onPointerDown","removePointerEndListener","checkPointerEnd","Tap","onPointerUp","onPointerCancel","whileFocus","Focus","onHoverStart","onHoverEnd","whileHover","usePresence","isPresent","onExitComplete","register","useId","shallowCompare","next","prev","prevLength","i","secondsToMilliseconds","seconds","noop","any","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","circIn","sin","acos","circOut","circInOut","createBackIn","power","backIn","backOut","backInOut","anticipate","backEasing","pow","createAnticipate","easingLookup","linear","easingDefinitionToFunction","invariant","x1","y1","x2","y2","isEasingArray","ease","isColorString","testProp","splitColor","aName","bName","cName","c","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","map","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","isAnimatable","underDampedSpring","stiffness","damping","restSpeed","criticallyDampedSpring","to","sqrt","linearTween","duration","keyframes$1","defaultTransitions","backgroundColor","getDefaultTransition","valueKey","transitionFactory","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","instantAnimationState","from","progress","hueToRgb","q","mixLinearColor","fromExpo","colorTypes","getColorType","find","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer$1","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","warning","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultEasing","splice","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","bounce","velocity","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","delta","calcAngularFreq","exp","f","initialGuess","result","rootIterations","approximateRoot","velocityPerSecond","frameDuration","durationKeys","physicsKeys","isSpringType","velocitySampleDuration","spring","restDelta","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","isBelowVelocityThreshold","isBelowDisplacementThreshold","flipTarget","needsInterpolation","_t","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","setTimeout","frameData","timestamp","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","keepAlive","immediate","addToCurrentFrame","buffer","cancel","index","process","createRenderStep","sync","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","types","decay","timeConstant","modifyTarget","amplitude","ideal","keyframes","times","o","convertOffsetToTimes","_value","defaultOffset","createInterpolator","loopElapsed","elapsed","delay","framesync","update","passTimestamp","stop","animate$1","autoplay","driver","repeat","repeatMax","repeatType","repeatDelay","onPlay","onStop","onComplete","onRepeat","onUpdate","driverControls","interpolateFromNumber","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","reverseElapsed","hasRepeatDelayElapsed","timeout","checkElapsed","read","convertTransitionToAnimationOptions","getDelayFromTransition","valueTransition","getValueTransition","getPopmotionAnimationOptions","hydrateKeyframes","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","getAnimation","isTargetAnimatable","isZero","getZeroUnit","isOriginAnimatable","finalTarget","bounceStiffness","bounceDamping","currentAnimation","isOutOfBounds","boundaryNearest","startAnimation","startSpring","boundary","heading","checkBoundary","inertia","potentialUnitType","isNumericalString","isZeroValueString","addUniqueItem","arr","item","removeItem","SubscriptionManager","constructor","subscriptions","numSubscriptions","getSize","clear","MotionValue","version","timeDelta","lastUpdated","updateSubscribers","velocityUpdateSubscribers","renderSubscribers","canTrackVelocity","updateAndNotify","postRender","scheduleVelocityCheck","velocityCheck","hasAnimated","onChange","subscription","clearListeners","onRenderRequest","attach","passiveEffect","getPrevious","Promise","resolve","stopAnimation","then","clearAnimation","isAnimating","destroy","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","resolveVariant","getCurrent","getVelocity$1","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","setVariants","variantLabels","variant","getVariant","variantChildren","checkTargetForNewValues","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","getOriginFromTransition","getOrigin","transitionOrigin","isWillChangeMotionValue","appearStoreId","handoffOptimizedAppearAnimation","MotionAppearAnimations","animationId","currentTime","optimizedAppearDataId","optimizedAppearDataAttribute","animateVisualElement","animations","animateVariant","resolvedDefinition","animateTarget","transitionOverride","getChildAnimations","forwardDelay","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","animateChildren","first","last","willChange","animationTypeState","getState","shouldBlockAnimation","shouldReduceMotion","appearId","remove","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","createAnimationState","animateList","createTypeState","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","Infinity","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","subscribe","safeToRemove","distance2D","xDelta","yDelta","PanSession","handlers","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","buttons","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys$1","yKeys$1","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","direction","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","dragControls","groupDragControls","isCSSVariable","cssVariableRegex","maxDepth","getVariableValue","depth","token","exec","parseCSSVariable","getComputedStyle","getPropertyValue","positionalKeys","isPositionalKey","hasPositionalKey","setAndResetVelocity","isNumOrPxType","BoundingBoxDimension","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","positionalValues","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","display","setStaticValue","targetBbox","convertChangedValueTypes","scrollTo","parseDomVariant","Element","resolveCSSVariables","unitConversion","prefersReducedMotion","hasReducedMotionListener","initPrefersReducedMotion","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addListener","featureNames","numFeatures","propEventHandlers","VisualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","scheduleRender","baseTarget","initialValues","initialMotionValues","_props","removeFromVariantTree","addVariantChild","bindToMotionValue","_c","valueIsTransform","removeOnChange","latestValue","isTransformDirty","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","isStrict","ProjectionNodeConstructor","layoutScroll","setOptions","alwaysMeasureLayout","animationType","initialPromotionConfig","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","on","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","getClosestVariantNode","startAtParent","numVariantProps","variantProps","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","args","DOMVisualElement","compareDocumentPosition","isMounted","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","super","arguments","getAttribute","createDomVisualElement","pixelsToPercent","pixels","correctBorderRadius","correct","node","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","prevProps","layoutDependency","willUpdate","promote","relegate","getStack","members","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","applyTo","boxShadow","layoutFeatures","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","_d","_e","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","animationTarget","id$1","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","isTreeAnimating","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","notifyListeners","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","preRender","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measure","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","stack","getPrevLead","hasRotate","resetValues","styles","visibility","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","searchNode","querySelector","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","featureBundle","motion","m","useIsMounted","useForceUpdate","forcedRenderCount","setForcedRenderCount","useState","forceRender","PopChildMeasure","childRef","sizeRef","offsetHeight","offsetWidth","offsetTop","offsetLeft","PopChild","useInsertionEffect","dataset","motionPopId","head","appendChild","sheet","insertRule","removeChild","cloneElement","PresenceChild","presenceAffectsLayout","mode","presenceChildren","newChildrenMap","childId","_","getChildKey","DeprecatedLayoutGroupContext","nodeGroup","dirtyAll","dirty","shouldInheritGroup","LayoutGroup","inheritId","layoutGroupContext","deprecatedLayoutGroupContext","upstreamId","shouldInheritId","memoizedContext","isLazyBundle","ReorderContext","Group","as","onReorder","order","isReordering","registerItem","compareMin","updateOrder","newOrder","nextOffset","nextItem","nextLayout","nextItemCenter","toIndex","startIndex","endIndex","moveItem","checkReorder","useMotionValue","setLatest","getMixer","isCustomValueType","useImmediate","argOffset","inputValue","inputRange","outputRange","useCombineMotionValues","combineValues","updateValue","cleanup","unsubscribe","useMultiOnChange","useTransform","inputRangeOrTransformer","useListTransform","useDefaultMotionValue","Reorder","Item","latestX","latestY","gesturePoint","onLayoutMeasure","measured","domAnimation","domMax","createScrollMotionValues","scrollX","scrollXProgress","scrollYProgress","useScroll","container","layoutEffect","useAnimationFrame","initialTimestamp","provideTimeSinceStart","WillChangeMotionValue","memberName","useReducedMotion","animationControls","hasMounted","pendingAnimations","subscribers","controls","setValues","useAnimationControls","useAnimation","wrap","rangeSize","DragControls","componentControls","nativeEvent","createDragControls","isMotionComponent","component","useInstantLayoutTransition","startTransition","featureTests","waapi","results","supports","cubicBezierAsString","createObject","StateVisualElement","restoreTransform","_state","initialState","invertScale","hasWarned","AnimatePresence","exitBeforeEnter","forceRenderLayoutGroup","filteredChildren","filtered","Children","isValidElement","onlyElements","childrenToRender","exiting","presentChildren","allChildren","updateChildLookup","Fragment","presentKeys","targetKeys","numPresent","insertionIndex","removeIndex","presentChild","AnimateSharedLayout","LazyMotion","setIsLoaded","loadedRenderer","loadedFeatures","MotionConfig","createDomMotionComponent","startOptimizedAppearAnimation","valueName","animateStyle","unwrapMotionComponent","useCycle","items","setItem","useDeprecatedAnimatedState","setAnimationState","animationDefinition","useDeprecatedInvertedScale","parentScaleX","parentScaleY","useDragControls","useElementScroll","useInView","setInView","useInstantTransition","forceUpdate","startInstantLayoutTransition","useIsPresent","useMotionTemplate","fragments","numFragments","useReducedMotionConfig","reducedMotionPreference","useResetProjection","useSpring","activeSpringAnimation","useOnChange","useTime","useVelocity","newVelocity","useViewportScroll","useWillChange"],"sourceRoot":""}